{
	"id": "725bf05d9fea5cbddc9da046fd855830",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/ERC1155Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1155.sol\";\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n *\n * _Available since v3.1._\n */\nabstract contract ERC1155Burnable is ERC1155 {\n    function burn(\n        address account,\n        uint256 id,\n        uint256 value\n    ) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(\n        address account,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }\n}\n"
			},
			"contracts/OZ_contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\nimport \"../../utils/Strings.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 id) public view virtual override returns (string memory) {\n        return string(\n            abi.encodePacked(\n                _uri,\n                Strings.toString(id),\n                \".json\"\n            )\n        );\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: address zero is not a valid owner\");\n        return _balanceOf(account, id);\n    }\n\n    function _balanceOf(address account, uint256 id) internal view virtual returns(uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");        \n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"
			},
			"contracts/OZ_contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			"contracts/OZ_contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"contracts/OZ_contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"contracts/OZ_contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"contracts/OZ_contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"contracts/OZ_contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/OZ_contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":604:17447  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1141:1203  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1183:1196  _setURI(uri_) */\n  tag_6\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1191:1195  uri_ */\n  dup2\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1183:1190  _setURI */\n  tag_7\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1183:1196  _setURI(uri_) */\n  jump\t// in\ntag_6:\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1141:1203  constructor(string memory uri_) {... */\n  pop\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":604:17447  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_23)\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":8498:8584  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":8564:8577  _uri = newuri */\n  dup1\n  mload\n  tag_10\n  swap1\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":8564:8568  _uri */\n  0x02\n  swap1\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":8564:8577  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":8498:8584  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":604:17447  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_18)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_21)\n    /* \"#utility.yul\":14:1101   */\ntag_3:\n    /* \"#utility.yul\":94:100   */\n  0x00\n    /* \"#utility.yul\":125:127   */\n  0x20\n    /* \"#utility.yul\":168:170   */\n  dup1\n    /* \"#utility.yul\":156:165   */\n  dup4\n    /* \"#utility.yul\":147:154   */\n  dup6\n    /* \"#utility.yul\":143:166   */\n  sub\n    /* \"#utility.yul\":139:171   */\n  slt\n    /* \"#utility.yul\":136:188   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":184:185   */\n  0x00\n    /* \"#utility.yul\":181:182   */\n  dup1\n    /* \"#utility.yul\":174:186   */\n  revert\n    /* \"#utility.yul\":136:188   */\ntag_25:\n    /* \"#utility.yul\":211:227   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":276:290   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":273:307   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":303:304   */\n  0x00\n    /* \"#utility.yul\":300:301   */\n  dup1\n    /* \"#utility.yul\":293:305   */\n  revert\n    /* \"#utility.yul\":273:307   */\ntag_26:\n    /* \"#utility.yul\":341:347   */\n  dup2\n    /* \"#utility.yul\":330:339   */\n  dup6\n    /* \"#utility.yul\":326:348   */\n  add\n    /* \"#utility.yul\":316:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":386:393   */\n  dup6\n    /* \"#utility.yul\":379:383   */\n  0x1f\n    /* \"#utility.yul\":375:377   */\n  dup4\n    /* \"#utility.yul\":371:384   */\n  add\n    /* \"#utility.yul\":367:394   */\n  slt\n    /* \"#utility.yul\":357:412   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":408:409   */\n  0x00\n    /* \"#utility.yul\":405:406   */\n  dup1\n    /* \"#utility.yul\":398:410   */\n  revert\n    /* \"#utility.yul\":357:412   */\ntag_27:\n    /* \"#utility.yul\":437:439   */\n  dup2\n    /* \"#utility.yul\":431:440   */\n  mload\n    /* \"#utility.yul\":459:461   */\n  dup2\n    /* \"#utility.yul\":455:457   */\n  dup2\n    /* \"#utility.yul\":452:462   */\n  gt\n    /* \"#utility.yul\":449:485   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":465:483   */\n  tag_29\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":540:542   */\n  0x40\n    /* \"#utility.yul\":534:543   */\n  mload\n    /* \"#utility.yul\":508:510   */\n  0x1f\n    /* \"#utility.yul\":594:607   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":590:612   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":614:616   */\n  0x3f\n    /* \"#utility.yul\":586:617   */\n  add\n    /* \"#utility.yul\":582:622   */\n  and\n    /* \"#utility.yul\":570:623   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":638:656   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":658:680   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":635:681   */\n  or\n    /* \"#utility.yul\":632:704   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":684:702   */\n  tag_32\n  tag_30\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":724:734   */\n  dup2\n    /* \"#utility.yul\":720:722   */\n  0x40\n    /* \"#utility.yul\":713:735   */\n  mstore\n    /* \"#utility.yul\":759:761   */\n  dup3\n    /* \"#utility.yul\":751:757   */\n  dup2\n    /* \"#utility.yul\":744:762   */\n  mstore\n    /* \"#utility.yul\":799:806   */\n  dup9\n    /* \"#utility.yul\":794:796   */\n  dup7\n    /* \"#utility.yul\":789:791   */\n  dup5\n    /* \"#utility.yul\":785:787   */\n  dup8\n    /* \"#utility.yul\":781:792   */\n  add\n    /* \"#utility.yul\":777:797   */\n  add\n    /* \"#utility.yul\":774:807   */\n  gt\n    /* \"#utility.yul\":771:824   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":820:821   */\n  0x00\n    /* \"#utility.yul\":817:818   */\n  dup1\n    /* \"#utility.yul\":810:822   */\n  revert\n    /* \"#utility.yul\":771:824   */\ntag_33:\n    /* \"#utility.yul\":842:843   */\n  0x00\n    /* \"#utility.yul\":833:843   */\n  swap4\n  pop\n    /* \"#utility.yul\":852:981   */\ntag_34:\n    /* \"#utility.yul\":866:868   */\n  dup3\n    /* \"#utility.yul\":863:864   */\n  dup5\n    /* \"#utility.yul\":860:869   */\n  lt\n    /* \"#utility.yul\":852:981   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":954:964   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":950:969   */\n  dup7\n  add\n    /* \"#utility.yul\":944:970   */\n  mload\n    /* \"#utility.yul\":923:937   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":919:942   */\n  dup8\n  add\n    /* \"#utility.yul\":912:971   */\n  mstore\n    /* \"#utility.yul\":877:887   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":852:981   */\n  jump(tag_34)\ntag_36:\n    /* \"#utility.yul\":999:1001   */\n  dup3\n    /* \"#utility.yul\":996:997   */\n  dup5\n    /* \"#utility.yul\":993:1002   */\n  gt\n    /* \"#utility.yul\":990:1070   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1058:1059   */\n  0x00\n    /* \"#utility.yul\":1053:1055   */\n  dup7\n    /* \"#utility.yul\":1048:1050   */\n  dup5\n    /* \"#utility.yul\":1040:1046   */\n  dup4\n    /* \"#utility.yul\":1036:1051   */\n  add\n    /* \"#utility.yul\":1032:1056   */\n  add\n    /* \"#utility.yul\":1025:1060   */\n  mstore\n    /* \"#utility.yul\":990:1070   */\ntag_37:\n    /* \"#utility.yul\":1089:1095   */\n  swap9\n    /* \"#utility.yul\":14:1101   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1106:1486   */\ntag_13:\n    /* \"#utility.yul\":1185:1186   */\n  0x01\n    /* \"#utility.yul\":1181:1193   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1228:1240   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1249:1310   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1303:1307   */\n  0x7f\n    /* \"#utility.yul\":1295:1301   */\n  dup3\n    /* \"#utility.yul\":1291:1308   */\n  and\n    /* \"#utility.yul\":1281:1308   */\n  swap2\n  pop\n    /* \"#utility.yul\":1249:1310   */\ntag_39:\n    /* \"#utility.yul\":1356:1358   */\n  0x20\n    /* \"#utility.yul\":1348:1354   */\n  dup3\n    /* \"#utility.yul\":1345:1359   */\n  lt\n    /* \"#utility.yul\":1325:1343   */\n  dup2\n    /* \"#utility.yul\":1322:1360   */\n  eq\n    /* \"#utility.yul\":1319:1480   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1402:1412   */\n  0x4e487b71\n    /* \"#utility.yul\":1397:1400   */\n  0xe0\n    /* \"#utility.yul\":1393:1413   */\n  shl\n    /* \"#utility.yul\":1390:1391   */\n  0x00\n    /* \"#utility.yul\":1383:1414   */\n  mstore\n    /* \"#utility.yul\":1437:1441   */\n  0x22\n    /* \"#utility.yul\":1434:1435   */\n  0x04\n    /* \"#utility.yul\":1427:1442   */\n  mstore\n    /* \"#utility.yul\":1465:1469   */\n  0x24\n    /* \"#utility.yul\":1462:1463   */\n  0x00\n    /* \"#utility.yul\":1455:1470   */\n  revert\n    /* \"#utility.yul\":1319:1480   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1106:1486   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1491:1618   */\ntag_30:\n    /* \"#utility.yul\":1552:1562   */\n  0x4e487b71\n    /* \"#utility.yul\":1547:1550   */\n  0xe0\n    /* \"#utility.yul\":1543:1563   */\n  shl\n    /* \"#utility.yul\":1540:1541   */\n  0x00\n    /* \"#utility.yul\":1533:1564   */\n  mstore\n    /* \"#utility.yul\":1583:1587   */\n  0x41\n    /* \"#utility.yul\":1580:1581   */\n  0x04\n    /* \"#utility.yul\":1573:1588   */\n  mstore\n    /* \"#utility.yul\":1607:1611   */\n  0x24\n    /* \"#utility.yul\":1604:1605   */\n  0x00\n    /* \"#utility.yul\":1597:1612   */\n  revert\n    /* \"#utility.yul\":1491:1618   */\ntag_23:\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":604:17447  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":604:17447  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2363:2591  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":14966:14991   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":14954:14956   */\n      0x20\n        /* \"#utility.yul\":14939:14957   */\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2363:2591  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1270:1575  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":10453:10467   */\n      swap1\n      iszero\n        /* \"#utility.yul\":10446:10468   */\n      iszero\n        /* \"#utility.yul\":10428:10469   */\n      dup2\n      mstore\n        /* \"#utility.yul\":10416:10418   */\n      0x20\n        /* \"#utility.yul\":10401:10419   */\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1270:1575  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":10288:10475   */\n      jump\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1974:2221  function uri(uint256 id) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4386:4816  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2888:3404  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3472:3625  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3692:3858  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_18\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3814:3841  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3791:3795  bool */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3814:3841  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3814:3832  _operatorApprovals */\n      0x01\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3814:3841  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3814:3851  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3692:3858  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3925:4314  function safeTransferFrom(... */\n    tag_10:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2363:2591  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2449:2456  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2476:2497  account != address(0) */\n      dup4\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2468:2544  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12146:12148   */\n      0x20\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2468:2544  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12128:12149   */\n      mstore\n        /* \"#utility.yul\":12185:12187   */\n      0x2a\n        /* \"#utility.yul\":12165:12183   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12158:12188   */\n      mstore\n        /* \"#utility.yul\":12224:12258   */\n      0x455243313135353a2061646472657373207a65726f206973206e6f7420612076\n        /* \"#utility.yul\":12204:12222   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12197:12259   */\n      mstore\n      shl(0xb1, 0x30b634b21037bbb732b9)\n        /* \"#utility.yul\":12275:12293   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12268:12308   */\n      mstore\n        /* \"#utility.yul\":12325:12344   */\n      0x84\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2468:2544  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2676:2683  uint256 */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2702:2715  _balances[id] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2702:2724  _balances[id][account] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2561:2584  _balanceOf(account, id) */\n    tag_57:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2554:2584  return _balanceOf(account, id) */\n      swap4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2363:2591  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1270:1575  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1372:1376  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1407:1448  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1407:1516  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_60\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1464:1516  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1407:1516  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_60:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1407:1568  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_62\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/OZ_contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1532:1568  super.supportsInterface(interfaceId) */\n    tag_62:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1388:1568  return... */\n      swap3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1270:1575  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1974:2221  function uri(uint256 id) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2037:2050  string memory */\n      0x60\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2123:2127  _uri */\n      0x02\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2145:2165  Strings.toString(id) */\n      tag_65\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2162:2164  id */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2145:2161  Strings.toString */\n      tag_66\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2145:2165  Strings.toString(id) */\n      jump\t// in\n    tag_65:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2089:2204  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_67\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2062:2214  return string(... */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1974:2221  function uri(uint256 id) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4386:4816  function safeBatchTransferFrom(... */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4611:4631  from == _msgSender() */\n      dup6\n      and\n        /* \"contracts/OZ_contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4611:4631  from == _msgSender() */\n      eq\n      dup1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4611:4671  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_73\n      jumpi\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4635:4671  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4652:4656  from */\n      dup6\n        /* \"contracts/OZ_contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3692:3858  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4635:4671  isApprovedForAll(from, _msgSender()) */\n    tag_73:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4590:4747  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12963:12965   */\n      0x20\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4590:4747  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12945:12966   */\n      mstore\n        /* \"#utility.yul\":13002:13004   */\n      0x32\n        /* \"#utility.yul\":12982:13000   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12975:13005   */\n      mstore\n        /* \"#utility.yul\":13041:13075   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":13021:13039   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13014:13076   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":13092:13110   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13085:13133   */\n      mstore\n        /* \"#utility.yul\":13150:13169   */\n      0x84\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4590:4747  require(... */\n      tag_55\n        /* \"#utility.yul\":12761:13175   */\n      jump\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4590:4747  require(... */\n    tag_75:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4757:4809  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4780:4784  from */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4786:4788  to */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4790:4793  ids */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4795:4802  amounts */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4804:4808  data */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4757:4779  _safeBatchTransferFrom */\n      tag_79\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4757:4809  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4386:4816  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2888:3404  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3039:3055  uint256[] memory */\n      0x60\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3098:3101  ids */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3098:3108  ids.length */\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3079:3087  accounts */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3079:3094  accounts.length */\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3079:3108  accounts.length == ids.length */\n      eq\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3071:3154  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14203:14205   */\n      0x20\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3071:3154  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14185:14206   */\n      mstore\n        /* \"#utility.yul\":14242:14244   */\n      0x29\n        /* \"#utility.yul\":14222:14240   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14215:14245   */\n      mstore\n        /* \"#utility.yul\":14281:14315   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":14261:14279   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14254:14316   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":14332:14350   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14325:14364   */\n      mstore\n        /* \"#utility.yul\":14381:14400   */\n      0x84\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3071:3154  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":14001:14406   */\n      jump\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3071:3154  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_81:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3173:3203  uint256[] memory batchBalances */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3220:3228  accounts */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3220:3235  accounts.length */\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3206:3236  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3173:3236  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3252:3261  uint256 i */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3247:3367  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3271:3279  accounts */\n      dup5\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3271:3286  accounts.length */\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3267:3268  i */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3267:3286  i < accounts.length */\n      lt\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3247:3367  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3326:3356  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3336:3344  accounts */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3345:3346  i */\n      dup3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3336:3347  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_93\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3349:3352  ids */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3353:3354  i */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3349:3355  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3326:3335  balanceOf */\n      tag_15\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3326:3356  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3307:3320  batchBalances */\n      dup3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3321:3322  i */\n      dup3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3307:3323  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3307:3356  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3288:3291  ++i */\n      tag_99\n      dup2\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3247:3367  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3384:3397  batchBalances */\n      swap4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2888:3404  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3472:3625  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3566:3618  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"contracts/OZ_contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3599:3607  operator */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3609:3617  approved */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3566:3584  _setApprovalForAll */\n      tag_104\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3566:3618  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3472:3625  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3925:4314  function safeTransferFrom(... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4125:4145  from == _msgSender() */\n      dup6\n      and\n        /* \"contracts/OZ_contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4125:4145  from == _msgSender() */\n      eq\n      dup1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4125:4185  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_109\n      jumpi\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4149:4185  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4166:4170  from */\n      dup6\n        /* \"contracts/OZ_contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3692:3858  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4149:4185  isApprovedForAll(from, _msgSender()) */\n    tag_109:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4104:4252  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11736:11738   */\n      0x20\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4104:4252  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11718:11739   */\n      mstore\n        /* \"#utility.yul\":11775:11777   */\n      0x29\n        /* \"#utility.yul\":11755:11773   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11748:11778   */\n      mstore\n        /* \"#utility.yul\":11814:11848   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":11794:11812   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11787:11849   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":11865:11883   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11858:11897   */\n      mstore\n        /* \"#utility.yul\":11914:11933   */\n      0x84\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4104:4252  require(... */\n      tag_55\n        /* \"#utility.yul\":11534:11939   */\n      jump\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4104:4252  require(... */\n    tag_111:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4262:4307  _safeTransferFrom(from, to, id, amount, data) */\n      tag_78\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4280:4284  from */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4286:4288  to */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4290:4292  id */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4294:4300  amount */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4302:4306  data */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4262:4279  _safeTransferFrom */\n      tag_115\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4262:4307  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_66:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":384:397  string memory */\n      0x60\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":601:611  value == 0 */\n      dup2\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n      tag_119\n      jumpi\n      pop\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":627:637  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n    tag_119:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":672:677  value */\n      dup2\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":657:669  uint256 temp */\n      0x00\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n    tag_120:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":718:727  temp != 0 */\n      dup2\n      iszero\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      tag_121\n      jumpi\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":743:751  digits++ */\n      dup1\n      tag_122\n      dup2\n      tag_100\n      jump\t// in\n    tag_122:\n      swap2\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      tag_123\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":773:775  10 */\n      0x0a\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      dup4\n      tag_124\n      jump\t// in\n    tag_123:\n      swap2\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      jump(tag_120)\n    tag_121:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":795:814  bytes memory buffer */\n      0x00\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":827:833  digits */\n      dup2\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":817:834  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_126\n      jumpi\n      tag_126\n      tag_86\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_127:\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":795:834  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n    tag_128:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":851:861  value != 0 */\n      dup5\n      iszero\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      tag_129\n      jumpi\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      tag_130\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":887:888  1 */\n      0x01\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      dup4\n      tag_131\n      jump\t// in\n    tag_130:\n      swap2\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_132\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":945:950  value */\n      dup7\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_134\n      swap1\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":932:934  48 */\n      0x30\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":919:958  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":902:908  buffer */\n      dup2\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":909:915  digits */\n      dup4\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":902:916  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_137\n      jumpi\n      tag_137\n      tag_94\n      jump\t// in\n    tag_137:\n      0x20\n      add\n      add\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":902:958  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":972:983  value /= 10 */\n      tag_138\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":981:983  10 */\n      0x0a\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":972:983  value /= 10 */\n      dup7\n      tag_124\n      jump\t// in\n    tag_138:\n      swap5\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      jump(tag_128)\n    tag_129:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":1017:1023  buffer */\n      swap5\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6560:7675  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6780:6787  amounts */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6780:6794  amounts.length */\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6766:6769  ids */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6766:6776  ids.length */\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6766:6794  ids.length == amounts.length */\n      eq\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6758:6839  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14613:14615   */\n      0x20\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6758:6839  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14595:14616   */\n      mstore\n        /* \"#utility.yul\":14652:14654   */\n      0x28\n        /* \"#utility.yul\":14632:14650   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14625:14655   */\n      mstore\n        /* \"#utility.yul\":14691:14725   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":14671:14689   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14664:14726   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":14742:14760   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14735:14773   */\n      mstore\n        /* \"#utility.yul\":14790:14809   */\n      0x84\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6758:6839  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":14411:14815   */\n      jump\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6758:6839  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n    tag_141:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6857:6873  to != address(0) */\n      dup5\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6849:6915  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_146\n      jump\t// in\n    tag_144:\n        /* \"contracts/OZ_contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6926:6942  address operator */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7039:7450  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_150:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7063:7066  ids */\n      dup5\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7063:7073  ids.length */\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7059:7060  i */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7059:7073  i < ids.length */\n      lt\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7039:7450  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_151\n      jumpi\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7094:7104  uint256 id */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7107:7110  ids */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7111:7112  i */\n      dup3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7107:7113  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_154\n      jumpi\n      tag_154\n      tag_94\n      jump\t// in\n    tag_154:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7094:7113  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7127:7141  uint256 amount */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7144:7151  amounts */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7152:7153  i */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7144:7154  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_156\n      jumpi\n      tag_156\n      tag_94\n      jump\t// in\n    tag_156:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7169:7188  uint256 fromBalance */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7191:7204  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7191:7210  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7144:7154  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7232:7253  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7224:7300  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_159\n      jump\t// in\n    tag_157:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7342:7351  _balances */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7342:7355  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7342:7361  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7364:7384  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7342:7384  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7412:7429  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7412:7439  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7364:7384  fromBalance - amount */\n      dup5\n      swap3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7342:7351  _balances */\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7412:7439  _balances[id][to] += amount */\n      tag_160\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7364:7384  fromBalance - amount */\n      dup5\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7412:7439  _balances[id][to] += amount */\n      tag_135\n      jump\t// in\n    tag_160:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7080:7450  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7075:7078  ++i */\n      dup1\n      tag_161\n      swap1\n      tag_100\n      jump\t// in\n    tag_161:\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7039:7450  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_150)\n    tag_151:\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7495:7497  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7465:7512  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7489:7493  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7465:7512  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7479:7487  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7465:7512  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7499:7502  ids */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7504:7511  amounts */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7465:7512  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_162\n      swap3\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7593:7668  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_166\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7629:7637  operator */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7639:7643  from */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7645:7647  to */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7649:7652  ids */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7654:7661  amounts */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7663:7667  data */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7593:7628  _doSafeBatchTransferAcceptanceCheck */\n      tag_167\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7593:7668  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_166:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6748:7675  {... */\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6560:7675  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13100:13423  function _setApprovalForAll(... */\n    tag_104:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13250:13258  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13241:13258  owner != operator */\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13241:13246  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13241:13258  owner != operator */\n      and\n      eq\n      iszero\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13233:13304  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13793:13795   */\n      0x20\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13233:13304  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13775:13796   */\n      mstore\n        /* \"#utility.yul\":13832:13834   */\n      0x29\n        /* \"#utility.yul\":13812:13830   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13805:13835   */\n      mstore\n        /* \"#utility.yul\":13871:13905   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":13851:13869   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13844:13906   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":13922:13940   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13915:13954   */\n      mstore\n        /* \"#utility.yul\":13971:13990   */\n      0x84\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13233:13304  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_55\n        /* \"#utility.yul\":13591:13996   */\n      jump\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13233:13304  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13314:13339  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13314:13332  _operatorApprovals */\n      0x01\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13314:13339  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13314:13349  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13314:13360  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13375:13416  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":10428:10469   */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13375:13416  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":10401:10419   */\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13375:13416  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13100:13423  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5267:6214  function _safeTransferFrom(... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5448:5464  to != address(0) */\n      dup5\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5440:5506  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_146\n      jump\t// in\n    tag_174:\n        /* \"contracts/OZ_contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5517:5533  address operator */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5581:5602  _asSingletonArray(id) */\n      tag_177\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5599:5601  id */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5581:5598  _asSingletonArray */\n      tag_178\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5581:5602  _asSingletonArray(id) */\n      jump\t// in\n    tag_177:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5558:5602  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5612:5636  uint256[] memory amounts */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5639:5664  _asSingletonArray(amount) */\n      tag_179\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5657:5663  amount */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5639:5656  _asSingletonArray */\n      tag_178\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5639:5664  _asSingletonArray(amount) */\n      jump\t// in\n    tag_179:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5612:5664  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5746:5765  uint256 fromBalance */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5768:5781  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5768:5787  _balances[id][from] */\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5805:5826  fromBalance >= amount */\n      dup6\n      dup2\n      lt\n      iszero\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5797:5873  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_159\n      jump\t// in\n    tag_181:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5907:5916  _balances */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5907:5920  _balances[id] */\n      dup8\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5907:5926  _balances[id][from] */\n      dup14\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5929:5949  fromBalance - amount */\n      dup10\n      dup6\n      sub\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5907:5949  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5969:5986  _balances[id][to] */\n      swap1\n      dup11\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5969:5996  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5929:5949  fromBalance - amount */\n      dup9\n      swap3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5907:5916  _balances */\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5969:5996  _balances[id][to] += amount */\n      tag_183\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5929:5949  fromBalance - amount */\n      dup5\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5969:5996  _balances[id][to] += amount */\n      tag_135\n      jump\t// in\n    tag_183:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6012:6058  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":15176:15201   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":15232:15234   */\n      0x20\n        /* \"#utility.yul\":15217:15235   */\n      dup2\n      add\n        /* \"#utility.yul\":15210:15244   */\n      dup9\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6012:6058  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup12\n      and\n      swap3\n      dup13\n      dup3\n      and\n      swap3\n      swap2\n      dup9\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":15149:15167   */\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6012:6058  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6139:6207  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_187\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6170:6178  operator */\n      dup5\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6180:6184  from */\n      dup11\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6186:6188  to */\n      dup11\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6190:6192  id */\n      dup11\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6194:6200  amount */\n      dup11\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6202:6206  data */\n      dup11\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6139:6169  _doSafeTransferAcceptanceCheck */\n      tag_188\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6139:6207  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_187:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5430:6214  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5267:6214  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16454:17246  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16686:16699  to.isContract */\n      dup5\n      and\n        /* \"contracts/OZ_contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"contracts/OZ_contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16682:17240  if (to.isContract()) {... */\n      tag_166\n      jumpi\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16721:16800  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16721:16764  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16721:16800  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_195\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16765:16773  operator */\n      dup10\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16775:16779  from */\n      dup10\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16781:16784  ids */\n      dup9\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16786:16793  amounts */\n      dup9\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16795:16799  data */\n      dup9\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16721:16800  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_196\n      jump\t// in\n    tag_195:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_198\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_199\n      swap2\n      dup2\n      add\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      0x01\n    tag_198:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16717:17230  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_201\n      jumpi\n      tag_205\n      tag_206\n      jump\t// in\n    tag_205:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_204\n      jumpi\n      pop\n      tag_207\n      tag_208\n      jump\t// in\n    tag_207:\n      dup1\n      tag_209\n      jumpi\n      pop\n      jump(tag_203)\n    tag_209:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17106:17112  reason */\n      dup1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17099:17113  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16717:17230  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_204:\n      pop\n    tag_203:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17153:17215  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10906:10908   */\n      0x20\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17153:17215  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10888:10909   */\n      mstore\n        /* \"#utility.yul\":10945:10947   */\n      0x34\n        /* \"#utility.yul\":10925:10943   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10918:10948   */\n      mstore\n        /* \"#utility.yul\":10984:11018   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":10964:10982   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10957:11019   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":11035:11053   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11028:11078   */\n      mstore\n        /* \"#utility.yul\":11095:11114   */\n      0x84\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17153:17215  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_55\n        /* \"#utility.yul\":10704:11120   */\n      jump\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16717:17230  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_201:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16879:16939  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16875:17032  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_214\n      jumpi\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16963:17013  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_216\n      jump\t// in\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16875:17032  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_214:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16801:17046  returns (... */\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16454:17246  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17252:17445  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_178:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17371:17387  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17385:17386  1 */\n      0x01\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17371:17387  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17318:17334  uint256[] memory */\n      0x60\n      swap2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17346:17368  uint256[] memory array */\n      0x00\n      swap2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17371:17387  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17346:17387  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17408:17415  element */\n      dup3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17397:17402  array */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17403:17404  0 */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17397:17405  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_222\n      jumpi\n      tag_222\n      tag_94\n      jump\t// in\n    tag_222:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17397:17415  array[0] = element */\n      mstore\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17433:17438  array */\n      swap3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17252:17445  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15723:16448  function _doSafeTransferAcceptanceCheck(... */\n    tag_188:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15930:15943  to.isContract */\n      dup5\n      and\n        /* \"contracts/OZ_contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"contracts/OZ_contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15926:16442  if (to.isContract()) {... */\n      tag_166\n      jumpi\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15965:16037  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15965:16003  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15965:16037  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_226\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16004:16012  operator */\n      dup10\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16014:16018  from */\n      dup10\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16020:16022  id */\n      dup9\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16024:16030  amount */\n      dup9\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16032:16036  data */\n      dup9\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15965:16037  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_227\n      jump\t// in\n    tag_226:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_228\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_228:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_229\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_230\n      swap2\n      dup2\n      add\n      swap1\n      tag_200\n      jump\t// in\n    tag_230:\n      0x01\n    tag_229:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15961:16432  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_231\n      jumpi\n      tag_205\n      tag_206\n      jump\t// in\n    tag_231:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16086:16141  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16082:16234  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_214\n      jumpi\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16165:16215  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_216\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_245:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_247:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:927   */\n    tag_248:\n        /* \"#utility.yul\":246:251   */\n      0x00\n        /* \"#utility.yul\":299:302   */\n      dup3\n        /* \"#utility.yul\":292:296   */\n      0x1f\n        /* \"#utility.yul\":284:290   */\n      dup4\n        /* \"#utility.yul\":280:297   */\n      add\n        /* \"#utility.yul\":276:303   */\n      slt\n        /* \"#utility.yul\":266:321   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":314:315   */\n      dup1\n        /* \"#utility.yul\":307:319   */\n      revert\n        /* \"#utility.yul\":266:321   */\n    tag_250:\n        /* \"#utility.yul\":353:359   */\n      dup2\n        /* \"#utility.yul\":340:360   */\n      calldataload\n        /* \"#utility.yul\":379:383   */\n      0x20\n        /* \"#utility.yul\":402:445   */\n      tag_251\n        /* \"#utility.yul\":442:444   */\n      dup3\n        /* \"#utility.yul\":402:445   */\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":474:476   */\n      0x40\n        /* \"#utility.yul\":468:477   */\n      mload\n        /* \"#utility.yul\":486:517   */\n      tag_253\n        /* \"#utility.yul\":514:516   */\n      dup3\n        /* \"#utility.yul\":506:512   */\n      dup3\n        /* \"#utility.yul\":486:517   */\n      tag_254\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":552:570   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":586:601   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":621:636   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":671:672   */\n      0x05\n        /* \"#utility.yul\":667:677   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":655:678   */\n      dup8\n      add\n        /* \"#utility.yul\":651:683   */\n      dup5\n      add\n        /* \"#utility.yul\":648:689   */\n      dup9\n      lt\n        /* \"#utility.yul\":645:706   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":702:703   */\n      0x00\n        /* \"#utility.yul\":699:700   */\n      dup1\n        /* \"#utility.yul\":692:704   */\n      revert\n        /* \"#utility.yul\":645:706   */\n    tag_255:\n        /* \"#utility.yul\":724:725   */\n      0x00\n        /* \"#utility.yul\":734:897   */\n    tag_256:\n        /* \"#utility.yul\":748:750   */\n      dup6\n        /* \"#utility.yul\":745:746   */\n      dup2\n        /* \"#utility.yul\":742:751   */\n      lt\n        /* \"#utility.yul\":734:897   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":805:822   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":793:823   */\n      dup5\n      mstore\n        /* \"#utility.yul\":843:855   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":875:887   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":766:767   */\n      0x01\n        /* \"#utility.yul\":759:768   */\n      add\n        /* \"#utility.yul\":734:897   */\n      jump(tag_256)\n    tag_258:\n      pop\n        /* \"#utility.yul\":915:921   */\n      swap1\n      swap8\n        /* \"#utility.yul\":192:927   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":932:1487   */\n    tag_259:\n        /* \"#utility.yul\":974:979   */\n      0x00\n        /* \"#utility.yul\":1027:1030   */\n      dup3\n        /* \"#utility.yul\":1020:1024   */\n      0x1f\n        /* \"#utility.yul\":1012:1018   */\n      dup4\n        /* \"#utility.yul\":1008:1025   */\n      add\n        /* \"#utility.yul\":1004:1031   */\n      slt\n        /* \"#utility.yul\":994:1049   */\n      tag_261\n      jumpi\n        /* \"#utility.yul\":1045:1046   */\n      0x00\n        /* \"#utility.yul\":1042:1043   */\n      dup1\n        /* \"#utility.yul\":1035:1047   */\n      revert\n        /* \"#utility.yul\":994:1049   */\n    tag_261:\n        /* \"#utility.yul\":1081:1087   */\n      dup2\n        /* \"#utility.yul\":1068:1088   */\n      calldataload\n        /* \"#utility.yul\":1107:1125   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1103:1105   */\n      dup2\n        /* \"#utility.yul\":1100:1126   */\n      gt\n        /* \"#utility.yul\":1097:1149   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":1129:1147   */\n      tag_263\n      tag_86\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":1178:1180   */\n      0x40\n        /* \"#utility.yul\":1172:1181   */\n      mload\n        /* \"#utility.yul\":1190:1257   */\n      tag_264\n        /* \"#utility.yul\":1245:1247   */\n      0x1f\n        /* \"#utility.yul\":1226:1239   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1222:1249   */\n      and\n        /* \"#utility.yul\":1251:1255   */\n      0x20\n        /* \"#utility.yul\":1218:1256   */\n      add\n        /* \"#utility.yul\":1172:1181   */\n      dup3\n        /* \"#utility.yul\":1190:1257   */\n      tag_254\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":1281:1283   */\n      dup2\n        /* \"#utility.yul\":1273:1279   */\n      dup2\n        /* \"#utility.yul\":1266:1284   */\n      mstore\n        /* \"#utility.yul\":1327:1330   */\n      dup5\n        /* \"#utility.yul\":1320:1324   */\n      0x20\n        /* \"#utility.yul\":1315:1317   */\n      dup4\n        /* \"#utility.yul\":1307:1313   */\n      dup7\n        /* \"#utility.yul\":1303:1318   */\n      add\n        /* \"#utility.yul\":1299:1325   */\n      add\n        /* \"#utility.yul\":1296:1331   */\n      gt\n        /* \"#utility.yul\":1293:1348   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":1344:1345   */\n      0x00\n        /* \"#utility.yul\":1341:1342   */\n      dup1\n        /* \"#utility.yul\":1334:1346   */\n      revert\n        /* \"#utility.yul\":1293:1348   */\n    tag_265:\n        /* \"#utility.yul\":1408:1410   */\n      dup2\n        /* \"#utility.yul\":1401:1405   */\n      0x20\n        /* \"#utility.yul\":1393:1399   */\n      dup6\n        /* \"#utility.yul\":1389:1406   */\n      add\n        /* \"#utility.yul\":1382:1386   */\n      0x20\n        /* \"#utility.yul\":1374:1380   */\n      dup4\n        /* \"#utility.yul\":1370:1387   */\n      add\n        /* \"#utility.yul\":1357:1411   */\n      calldatacopy\n        /* \"#utility.yul\":1455:1456   */\n      0x00\n        /* \"#utility.yul\":1431:1446   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":1448:1452   */\n      0x20\n        /* \"#utility.yul\":1427:1453   */\n      add\n        /* \"#utility.yul\":1420:1457   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1435:1441   */\n      swap4\n        /* \"#utility.yul\":932:1487   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1492:1752   */\n    tag_46:\n        /* \"#utility.yul\":1560:1566   */\n      0x00\n        /* \"#utility.yul\":1568:1574   */\n      dup1\n        /* \"#utility.yul\":1621:1623   */\n      0x40\n        /* \"#utility.yul\":1609:1618   */\n      dup4\n        /* \"#utility.yul\":1600:1607   */\n      dup6\n        /* \"#utility.yul\":1596:1619   */\n      sub\n        /* \"#utility.yul\":1592:1624   */\n      slt\n        /* \"#utility.yul\":1589:1641   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":1637:1638   */\n      0x00\n        /* \"#utility.yul\":1634:1635   */\n      dup1\n        /* \"#utility.yul\":1627:1639   */\n      revert\n        /* \"#utility.yul\":1589:1641   */\n    tag_267:\n        /* \"#utility.yul\":1660:1689   */\n      tag_268\n        /* \"#utility.yul\":1679:1688   */\n      dup4\n        /* \"#utility.yul\":1660:1689   */\n      tag_245\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":1650:1689   */\n      swap2\n      pop\n        /* \"#utility.yul\":1708:1746   */\n      tag_269\n        /* \"#utility.yul\":1742:1744   */\n      0x20\n        /* \"#utility.yul\":1731:1740   */\n      dup5\n        /* \"#utility.yul\":1727:1745   */\n      add\n        /* \"#utility.yul\":1708:1746   */\n      tag_245\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":1698:1746   */\n      swap1\n      pop\n        /* \"#utility.yul\":1492:1752   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1757:2700   */\n    tag_32:\n        /* \"#utility.yul\":1911:1917   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup1\n        /* \"#utility.yul\":1927:1933   */\n      0x00\n        /* \"#utility.yul\":1935:1941   */\n      dup1\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1996:1999   */\n      0xa0\n        /* \"#utility.yul\":1984:1993   */\n      dup7\n        /* \"#utility.yul\":1975:1982   */\n      dup9\n        /* \"#utility.yul\":1971:1994   */\n      sub\n        /* \"#utility.yul\":1967:2000   */\n      slt\n        /* \"#utility.yul\":1964:2017   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2010:2011   */\n      dup1\n        /* \"#utility.yul\":2003:2015   */\n      revert\n        /* \"#utility.yul\":1964:2017   */\n    tag_271:\n        /* \"#utility.yul\":2036:2065   */\n      tag_272\n        /* \"#utility.yul\":2055:2064   */\n      dup7\n        /* \"#utility.yul\":2036:2065   */\n      tag_245\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":2026:2065   */\n      swap5\n      pop\n        /* \"#utility.yul\":2084:2122   */\n      tag_273\n        /* \"#utility.yul\":2118:2120   */\n      0x20\n        /* \"#utility.yul\":2107:2116   */\n      dup8\n        /* \"#utility.yul\":2103:2121   */\n      add\n        /* \"#utility.yul\":2084:2122   */\n      tag_245\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":2074:2122   */\n      swap4\n      pop\n        /* \"#utility.yul\":2173:2175   */\n      0x40\n        /* \"#utility.yul\":2162:2171   */\n      dup7\n        /* \"#utility.yul\":2158:2176   */\n      add\n        /* \"#utility.yul\":2145:2177   */\n      calldataload\n        /* \"#utility.yul\":2196:2214   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2237:2239   */\n      dup1\n        /* \"#utility.yul\":2229:2235   */\n      dup3\n        /* \"#utility.yul\":2226:2240   */\n      gt\n        /* \"#utility.yul\":2223:2257   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":2253:2254   */\n      0x00\n        /* \"#utility.yul\":2250:2251   */\n      dup1\n        /* \"#utility.yul\":2243:2255   */\n      revert\n        /* \"#utility.yul\":2223:2257   */\n    tag_274:\n        /* \"#utility.yul\":2276:2337   */\n      tag_275\n        /* \"#utility.yul\":2329:2336   */\n      dup10\n        /* \"#utility.yul\":2320:2326   */\n      dup4\n        /* \"#utility.yul\":2309:2318   */\n      dup11\n        /* \"#utility.yul\":2305:2327   */\n      add\n        /* \"#utility.yul\":2276:2337   */\n      tag_248\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":2266:2337   */\n      swap5\n      pop\n        /* \"#utility.yul\":2390:2392   */\n      0x60\n        /* \"#utility.yul\":2379:2388   */\n      dup9\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2362:2394   */\n      calldataload\n        /* \"#utility.yul\":2346:2394   */\n      swap2\n      pop\n        /* \"#utility.yul\":2419:2421   */\n      dup1\n        /* \"#utility.yul\":2409:2417   */\n      dup3\n        /* \"#utility.yul\":2406:2422   */\n      gt\n        /* \"#utility.yul\":2403:2439   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":2435:2436   */\n      0x00\n        /* \"#utility.yul\":2432:2433   */\n      dup1\n        /* \"#utility.yul\":2425:2437   */\n      revert\n        /* \"#utility.yul\":2403:2439   */\n    tag_276:\n        /* \"#utility.yul\":2458:2521   */\n      tag_277\n        /* \"#utility.yul\":2513:2520   */\n      dup10\n        /* \"#utility.yul\":2502:2510   */\n      dup4\n        /* \"#utility.yul\":2491:2500   */\n      dup11\n        /* \"#utility.yul\":2487:2511   */\n      add\n        /* \"#utility.yul\":2458:2521   */\n      tag_248\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":2448:2521   */\n      swap4\n      pop\n        /* \"#utility.yul\":2574:2577   */\n      0x80\n        /* \"#utility.yul\":2563:2572   */\n      dup9\n        /* \"#utility.yul\":2559:2578   */\n      add\n        /* \"#utility.yul\":2546:2579   */\n      calldataload\n        /* \"#utility.yul\":2530:2579   */\n      swap2\n      pop\n        /* \"#utility.yul\":2604:2606   */\n      dup1\n        /* \"#utility.yul\":2594:2602   */\n      dup3\n        /* \"#utility.yul\":2591:2607   */\n      gt\n        /* \"#utility.yul\":2588:2624   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2617:2618   */\n      dup1\n        /* \"#utility.yul\":2610:2622   */\n      revert\n        /* \"#utility.yul\":2588:2624   */\n    tag_278:\n      pop\n        /* \"#utility.yul\":2643:2694   */\n      tag_279\n        /* \"#utility.yul\":2686:2693   */\n      dup9\n        /* \"#utility.yul\":2675:2683   */\n      dup3\n        /* \"#utility.yul\":2664:2673   */\n      dup10\n        /* \"#utility.yul\":2660:2684   */\n      add\n        /* \"#utility.yul\":2643:2694   */\n      tag_259\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2633:2694   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1757:2700   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2705:3311   */\n    tag_51:\n        /* \"#utility.yul\":2809:2815   */\n      0x00\n        /* \"#utility.yul\":2817:2823   */\n      dup1\n        /* \"#utility.yul\":2825:2831   */\n      0x00\n        /* \"#utility.yul\":2833:2839   */\n      dup1\n        /* \"#utility.yul\":2841:2847   */\n      0x00\n        /* \"#utility.yul\":2894:2897   */\n      0xa0\n        /* \"#utility.yul\":2882:2891   */\n      dup7\n        /* \"#utility.yul\":2873:2880   */\n      dup9\n        /* \"#utility.yul\":2869:2892   */\n      sub\n        /* \"#utility.yul\":2865:2898   */\n      slt\n        /* \"#utility.yul\":2862:2915   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":2911:2912   */\n      0x00\n        /* \"#utility.yul\":2908:2909   */\n      dup1\n        /* \"#utility.yul\":2901:2913   */\n      revert\n        /* \"#utility.yul\":2862:2915   */\n    tag_281:\n        /* \"#utility.yul\":2934:2963   */\n      tag_282\n        /* \"#utility.yul\":2953:2962   */\n      dup7\n        /* \"#utility.yul\":2934:2963   */\n      tag_245\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":2924:2963   */\n      swap5\n      pop\n        /* \"#utility.yul\":2982:3020   */\n      tag_283\n        /* \"#utility.yul\":3016:3018   */\n      0x20\n        /* \"#utility.yul\":3005:3014   */\n      dup8\n        /* \"#utility.yul\":3001:3019   */\n      add\n        /* \"#utility.yul\":2982:3020   */\n      tag_245\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2972:3020   */\n      swap4\n      pop\n        /* \"#utility.yul\":3067:3069   */\n      0x40\n        /* \"#utility.yul\":3056:3065   */\n      dup7\n        /* \"#utility.yul\":3052:3070   */\n      add\n        /* \"#utility.yul\":3039:3071   */\n      calldataload\n        /* \"#utility.yul\":3029:3071   */\n      swap3\n      pop\n        /* \"#utility.yul\":3118:3120   */\n      0x60\n        /* \"#utility.yul\":3107:3116   */\n      dup7\n        /* \"#utility.yul\":3103:3121   */\n      add\n        /* \"#utility.yul\":3090:3122   */\n      calldataload\n        /* \"#utility.yul\":3080:3122   */\n      swap2\n      pop\n        /* \"#utility.yul\":3173:3176   */\n      0x80\n        /* \"#utility.yul\":3162:3171   */\n      dup7\n        /* \"#utility.yul\":3158:3177   */\n      add\n        /* \"#utility.yul\":3145:3178   */\n      calldataload\n        /* \"#utility.yul\":3201:3219   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3193:3199   */\n      dup2\n        /* \"#utility.yul\":3190:3220   */\n      gt\n        /* \"#utility.yul\":3187:3237   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":3233:3234   */\n      0x00\n        /* \"#utility.yul\":3230:3231   */\n      dup1\n        /* \"#utility.yul\":3223:3235   */\n      revert\n        /* \"#utility.yul\":3187:3237   */\n    tag_284:\n        /* \"#utility.yul\":3256:3305   */\n      tag_279\n        /* \"#utility.yul\":3297:3304   */\n      dup9\n        /* \"#utility.yul\":3288:3294   */\n      dup3\n        /* \"#utility.yul\":3277:3286   */\n      dup10\n        /* \"#utility.yul\":3273:3295   */\n      add\n        /* \"#utility.yul\":3256:3305   */\n      tag_259\n      jump\t// in\n        /* \"#utility.yul\":3316:3663   */\n    tag_42:\n        /* \"#utility.yul\":3381:3387   */\n      0x00\n        /* \"#utility.yul\":3389:3395   */\n      dup1\n        /* \"#utility.yul\":3442:3444   */\n      0x40\n        /* \"#utility.yul\":3430:3439   */\n      dup4\n        /* \"#utility.yul\":3421:3428   */\n      dup6\n        /* \"#utility.yul\":3417:3440   */\n      sub\n        /* \"#utility.yul\":3413:3445   */\n      slt\n        /* \"#utility.yul\":3410:3462   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":3458:3459   */\n      0x00\n        /* \"#utility.yul\":3455:3456   */\n      dup1\n        /* \"#utility.yul\":3448:3460   */\n      revert\n        /* \"#utility.yul\":3410:3462   */\n    tag_287:\n        /* \"#utility.yul\":3481:3510   */\n      tag_288\n        /* \"#utility.yul\":3500:3509   */\n      dup4\n        /* \"#utility.yul\":3481:3510   */\n      tag_245\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":3471:3510   */\n      swap2\n      pop\n        /* \"#utility.yul\":3560:3562   */\n      0x20\n        /* \"#utility.yul\":3549:3558   */\n      dup4\n        /* \"#utility.yul\":3545:3563   */\n      add\n        /* \"#utility.yul\":3532:3564   */\n      calldataload\n        /* \"#utility.yul\":3607:3612   */\n      dup1\n        /* \"#utility.yul\":3600:3613   */\n      iszero\n        /* \"#utility.yul\":3593:3614   */\n      iszero\n        /* \"#utility.yul\":3586:3591   */\n      dup2\n        /* \"#utility.yul\":3583:3615   */\n      eq\n        /* \"#utility.yul\":3573:3633   */\n      tag_289\n      jumpi\n        /* \"#utility.yul\":3629:3630   */\n      0x00\n        /* \"#utility.yul\":3626:3627   */\n      dup1\n        /* \"#utility.yul\":3619:3631   */\n      revert\n        /* \"#utility.yul\":3573:3633   */\n    tag_289:\n        /* \"#utility.yul\":3652:3657   */\n      dup1\n        /* \"#utility.yul\":3642:3657   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3316:3663   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3668:3922   */\n    tag_14:\n        /* \"#utility.yul\":3736:3742   */\n      0x00\n        /* \"#utility.yul\":3744:3750   */\n      dup1\n        /* \"#utility.yul\":3797:3799   */\n      0x40\n        /* \"#utility.yul\":3785:3794   */\n      dup4\n        /* \"#utility.yul\":3776:3783   */\n      dup6\n        /* \"#utility.yul\":3772:3795   */\n      sub\n        /* \"#utility.yul\":3768:3800   */\n      slt\n        /* \"#utility.yul\":3765:3817   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":3813:3814   */\n      0x00\n        /* \"#utility.yul\":3810:3811   */\n      dup1\n        /* \"#utility.yul\":3803:3815   */\n      revert\n        /* \"#utility.yul\":3765:3817   */\n    tag_291:\n        /* \"#utility.yul\":3836:3865   */\n      tag_292\n        /* \"#utility.yul\":3855:3864   */\n      dup4\n        /* \"#utility.yul\":3836:3865   */\n      tag_245\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":3826:3865   */\n      swap5\n        /* \"#utility.yul\":3912:3914   */\n      0x20\n        /* \"#utility.yul\":3897:3915   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3884:3916   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3668:3922   */\n      jump\t// out\n        /* \"#utility.yul\":3927:5146   */\n    tag_36:\n        /* \"#utility.yul\":4045:4051   */\n      0x00\n        /* \"#utility.yul\":4053:4059   */\n      dup1\n        /* \"#utility.yul\":4106:4108   */\n      0x40\n        /* \"#utility.yul\":4094:4103   */\n      dup4\n        /* \"#utility.yul\":4085:4092   */\n      dup6\n        /* \"#utility.yul\":4081:4104   */\n      sub\n        /* \"#utility.yul\":4077:4109   */\n      slt\n        /* \"#utility.yul\":4074:4126   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":4122:4123   */\n      0x00\n        /* \"#utility.yul\":4119:4120   */\n      dup1\n        /* \"#utility.yul\":4112:4124   */\n      revert\n        /* \"#utility.yul\":4074:4126   */\n    tag_294:\n        /* \"#utility.yul\":4162:4171   */\n      dup3\n        /* \"#utility.yul\":4149:4172   */\n      calldataload\n        /* \"#utility.yul\":4191:4209   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4232:4234   */\n      dup1\n        /* \"#utility.yul\":4224:4230   */\n      dup3\n        /* \"#utility.yul\":4221:4235   */\n      gt\n        /* \"#utility.yul\":4218:4252   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":4248:4249   */\n      0x00\n        /* \"#utility.yul\":4245:4246   */\n      dup1\n        /* \"#utility.yul\":4238:4250   */\n      revert\n        /* \"#utility.yul\":4218:4252   */\n    tag_295:\n        /* \"#utility.yul\":4286:4292   */\n      dup2\n        /* \"#utility.yul\":4275:4284   */\n      dup6\n        /* \"#utility.yul\":4271:4293   */\n      add\n        /* \"#utility.yul\":4261:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4331:4338   */\n      dup6\n        /* \"#utility.yul\":4324:4328   */\n      0x1f\n        /* \"#utility.yul\":4320:4322   */\n      dup4\n        /* \"#utility.yul\":4316:4329   */\n      add\n        /* \"#utility.yul\":4312:4339   */\n      slt\n        /* \"#utility.yul\":4302:4357   */\n      tag_296\n      jumpi\n        /* \"#utility.yul\":4353:4354   */\n      0x00\n        /* \"#utility.yul\":4350:4351   */\n      dup1\n        /* \"#utility.yul\":4343:4355   */\n      revert\n        /* \"#utility.yul\":4302:4357   */\n    tag_296:\n        /* \"#utility.yul\":4389:4391   */\n      dup2\n        /* \"#utility.yul\":4376:4392   */\n      calldataload\n        /* \"#utility.yul\":4411:4415   */\n      0x20\n        /* \"#utility.yul\":4434:4477   */\n      tag_297\n        /* \"#utility.yul\":4474:4476   */\n      dup3\n        /* \"#utility.yul\":4434:4477   */\n      tag_252\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":4506:4508   */\n      0x40\n        /* \"#utility.yul\":4500:4509   */\n      mload\n        /* \"#utility.yul\":4518:4549   */\n      tag_298\n        /* \"#utility.yul\":4546:4548   */\n      dup3\n        /* \"#utility.yul\":4538:4544   */\n      dup3\n        /* \"#utility.yul\":4518:4549   */\n      tag_254\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4584:4602   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":4618:4633   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":4653:4664   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":4695:4696   */\n      0x05\n        /* \"#utility.yul\":4691:4701   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":4683:4702   */\n      dup8\n      add\n        /* \"#utility.yul\":4679:4707   */\n      dup5\n      add\n        /* \"#utility.yul\":4676:4717   */\n      dup12\n      lt\n        /* \"#utility.yul\":4673:4734   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4727:4728   */\n      dup1\n        /* \"#utility.yul\":4720:4732   */\n      revert\n        /* \"#utility.yul\":4673:4734   */\n    tag_299:\n        /* \"#utility.yul\":4752:4753   */\n      0x00\n        /* \"#utility.yul\":4743:4753   */\n      swap7\n      pop\n        /* \"#utility.yul\":4762:4931   */\n    tag_300:\n        /* \"#utility.yul\":4776:4778   */\n      dup5\n        /* \"#utility.yul\":4773:4774   */\n      dup8\n        /* \"#utility.yul\":4770:4779   */\n      lt\n        /* \"#utility.yul\":4762:4931   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":4833:4856   */\n      tag_303\n        /* \"#utility.yul\":4852:4855   */\n      dup2\n        /* \"#utility.yul\":4833:4856   */\n      tag_245\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":4821:4857   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4794:4795   */\n      0x01\n        /* \"#utility.yul\":4787:4796   */\n      swap7\n      swap1\n      swap7\n      add\n      swap6\n        /* \"#utility.yul\":4877:4889   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":4909:4921   */\n      dup4\n      add\n        /* \"#utility.yul\":4762:4931   */\n      jump(tag_300)\n    tag_302:\n      pop\n        /* \"#utility.yul\":4950:4956   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":4994:5012   */\n      dup7\n      add\n        /* \"#utility.yul\":4981:5013   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5025:5041   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5022:5058   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":5054:5055   */\n      0x00\n        /* \"#utility.yul\":5051:5052   */\n      dup1\n        /* \"#utility.yul\":5044:5056   */\n      revert\n        /* \"#utility.yul\":5022:5058   */\n    tag_304:\n      pop\n        /* \"#utility.yul\":5077:5140   */\n      tag_305\n        /* \"#utility.yul\":5132:5139   */\n      dup6\n        /* \"#utility.yul\":5121:5129   */\n      dup3\n        /* \"#utility.yul\":5110:5119   */\n      dup7\n        /* \"#utility.yul\":5106:5130   */\n      add\n        /* \"#utility.yul\":5077:5140   */\n      tag_248\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":5067:5140   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3927:5146   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5151:5396   */\n    tag_20:\n        /* \"#utility.yul\":5209:5215   */\n      0x00\n        /* \"#utility.yul\":5262:5264   */\n      0x20\n        /* \"#utility.yul\":5250:5259   */\n      dup3\n        /* \"#utility.yul\":5241:5248   */\n      dup5\n        /* \"#utility.yul\":5237:5260   */\n      sub\n        /* \"#utility.yul\":5233:5265   */\n      slt\n        /* \"#utility.yul\":5230:5282   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":5278:5279   */\n      0x00\n        /* \"#utility.yul\":5275:5276   */\n      dup1\n        /* \"#utility.yul\":5268:5280   */\n      revert\n        /* \"#utility.yul\":5230:5282   */\n    tag_307:\n        /* \"#utility.yul\":5317:5326   */\n      dup2\n        /* \"#utility.yul\":5304:5327   */\n      calldataload\n        /* \"#utility.yul\":5336:5366   */\n      tag_57\n        /* \"#utility.yul\":5360:5365   */\n      dup2\n        /* \"#utility.yul\":5336:5366   */\n      tag_309\n      jump\t// in\n        /* \"#utility.yul\":5401:5650   */\n    tag_200:\n        /* \"#utility.yul\":5470:5476   */\n      0x00\n        /* \"#utility.yul\":5523:5525   */\n      0x20\n        /* \"#utility.yul\":5511:5520   */\n      dup3\n        /* \"#utility.yul\":5502:5509   */\n      dup5\n        /* \"#utility.yul\":5498:5521   */\n      sub\n        /* \"#utility.yul\":5494:5526   */\n      slt\n        /* \"#utility.yul\":5491:5543   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":5539:5540   */\n      0x00\n        /* \"#utility.yul\":5536:5537   */\n      dup1\n        /* \"#utility.yul\":5529:5541   */\n      revert\n        /* \"#utility.yul\":5491:5543   */\n    tag_311:\n        /* \"#utility.yul\":5571:5580   */\n      dup2\n        /* \"#utility.yul\":5565:5581   */\n      mload\n        /* \"#utility.yul\":5590:5620   */\n      tag_57\n        /* \"#utility.yul\":5614:5619   */\n      dup2\n        /* \"#utility.yul\":5590:5620   */\n      tag_309\n      jump\t// in\n        /* \"#utility.yul\":5655:5835   */\n    tag_26:\n        /* \"#utility.yul\":5714:5720   */\n      0x00\n        /* \"#utility.yul\":5767:5769   */\n      0x20\n        /* \"#utility.yul\":5755:5764   */\n      dup3\n        /* \"#utility.yul\":5746:5753   */\n      dup5\n        /* \"#utility.yul\":5742:5765   */\n      sub\n        /* \"#utility.yul\":5738:5770   */\n      slt\n        /* \"#utility.yul\":5735:5787   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":5783:5784   */\n      0x00\n        /* \"#utility.yul\":5780:5781   */\n      dup1\n        /* \"#utility.yul\":5773:5785   */\n      revert\n        /* \"#utility.yul\":5735:5787   */\n    tag_314:\n      pop\n        /* \"#utility.yul\":5806:5829   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":5655:5835   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5840:6275   */\n    tag_315:\n        /* \"#utility.yul\":5893:5896   */\n      0x00\n        /* \"#utility.yul\":5931:5936   */\n      dup2\n        /* \"#utility.yul\":5925:5937   */\n      mload\n        /* \"#utility.yul\":5958:5964   */\n      dup1\n        /* \"#utility.yul\":5953:5956   */\n      dup5\n        /* \"#utility.yul\":5946:5965   */\n      mstore\n        /* \"#utility.yul\":5984:5988   */\n      0x20\n        /* \"#utility.yul\":6013:6015   */\n      dup1\n        /* \"#utility.yul\":6008:6011   */\n      dup6\n        /* \"#utility.yul\":6004:6016   */\n      add\n        /* \"#utility.yul\":5997:6016   */\n      swap5\n      pop\n        /* \"#utility.yul\":6050:6052   */\n      dup1\n        /* \"#utility.yul\":6043:6048   */\n      dup5\n        /* \"#utility.yul\":6039:6053   */\n      add\n        /* \"#utility.yul\":6071:6072   */\n      0x00\n        /* \"#utility.yul\":6081:6250   */\n    tag_317:\n        /* \"#utility.yul\":6095:6101   */\n      dup4\n        /* \"#utility.yul\":6092:6093   */\n      dup2\n        /* \"#utility.yul\":6089:6102   */\n      lt\n        /* \"#utility.yul\":6081:6250   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":6156:6169   */\n      dup2\n      mload\n        /* \"#utility.yul\":6144:6170   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6190:6202   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6225:6240   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6117:6118   */\n      0x01\n        /* \"#utility.yul\":6110:6119   */\n      add\n        /* \"#utility.yul\":6081:6250   */\n      jump(tag_317)\n    tag_319:\n      pop\n        /* \"#utility.yul\":6266:6269   */\n      swap5\n      swap6\n        /* \"#utility.yul\":5840:6275   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6280:6537   */\n    tag_320:\n        /* \"#utility.yul\":6321:6324   */\n      0x00\n        /* \"#utility.yul\":6359:6364   */\n      dup2\n        /* \"#utility.yul\":6353:6365   */\n      mload\n        /* \"#utility.yul\":6386:6392   */\n      dup1\n        /* \"#utility.yul\":6381:6384   */\n      dup5\n        /* \"#utility.yul\":6374:6393   */\n      mstore\n        /* \"#utility.yul\":6402:6465   */\n      tag_322\n        /* \"#utility.yul\":6458:6464   */\n      dup2\n        /* \"#utility.yul\":6451:6455   */\n      0x20\n        /* \"#utility.yul\":6446:6449   */\n      dup7\n        /* \"#utility.yul\":6442:6456   */\n      add\n        /* \"#utility.yul\":6435:6439   */\n      0x20\n        /* \"#utility.yul\":6428:6433   */\n      dup7\n        /* \"#utility.yul\":6424:6440   */\n      add\n        /* \"#utility.yul\":6402:6465   */\n      tag_323\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":6519:6521   */\n      0x1f\n        /* \"#utility.yul\":6498:6513   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":6494:6523   */\n      and\n        /* \"#utility.yul\":6485:6524   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":6526:6530   */\n      0x20\n        /* \"#utility.yul\":6481:6531   */\n      add\n      swap3\n        /* \"#utility.yul\":6280:6537   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6542:6727   */\n    tag_324:\n        /* \"#utility.yul\":6584:6587   */\n      0x00\n        /* \"#utility.yul\":6622:6627   */\n      dup2\n        /* \"#utility.yul\":6616:6628   */\n      mload\n        /* \"#utility.yul\":6637:6689   */\n      tag_326\n        /* \"#utility.yul\":6682:6688   */\n      dup2\n        /* \"#utility.yul\":6677:6680   */\n      dup6\n        /* \"#utility.yul\":6670:6674   */\n      0x20\n        /* \"#utility.yul\":6663:6668   */\n      dup7\n        /* \"#utility.yul\":6659:6675   */\n      add\n        /* \"#utility.yul\":6637:6689   */\n      tag_323\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":6705:6721   */\n      swap3\n      swap1\n      swap3\n      add\n      swap3\n        /* \"#utility.yul\":6542:6727   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6850:8151   */\n    tag_68:\n        /* \"#utility.yul\":7127:7130   */\n      0x00\n        /* \"#utility.yul\":7156:7157   */\n      dup1\n        /* \"#utility.yul\":7189:7195   */\n      dup5\n        /* \"#utility.yul\":7183:7196   */\n      sload\n        /* \"#utility.yul\":7219:7222   */\n      dup2\n        /* \"#utility.yul\":7241:7242   */\n      0x01\n        /* \"#utility.yul\":7269:7278   */\n      dup3\n        /* \"#utility.yul\":7265:7267   */\n      dup2\n        /* \"#utility.yul\":7261:7279   */\n      shr\n        /* \"#utility.yul\":7251:7279   */\n      swap2\n      pop\n        /* \"#utility.yul\":7329:7331   */\n      dup1\n        /* \"#utility.yul\":7318:7327   */\n      dup4\n        /* \"#utility.yul\":7314:7332   */\n      and\n        /* \"#utility.yul\":7351:7369   */\n      dup1\n        /* \"#utility.yul\":7341:7402   */\n      tag_330\n      jumpi\n        /* \"#utility.yul\":7395:7399   */\n      0x7f\n        /* \"#utility.yul\":7387:7393   */\n      dup4\n        /* \"#utility.yul\":7383:7400   */\n      and\n        /* \"#utility.yul\":7373:7400   */\n      swap3\n      pop\n        /* \"#utility.yul\":7341:7402   */\n    tag_330:\n        /* \"#utility.yul\":7421:7423   */\n      0x20\n        /* \"#utility.yul\":7469:7471   */\n      dup1\n        /* \"#utility.yul\":7461:7467   */\n      dup5\n        /* \"#utility.yul\":7458:7472   */\n      lt\n        /* \"#utility.yul\":7438:7456   */\n      dup3\n        /* \"#utility.yul\":7435:7473   */\n      eq\n        /* \"#utility.yul\":7432:7597   */\n      iszero\n      tag_331\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":7496:7529   */\n      dup7\n      mstore\n        /* \"#utility.yul\":7552:7556   */\n      0x22\n        /* \"#utility.yul\":7549:7550   */\n      0x04\n        /* \"#utility.yul\":7542:7557   */\n      mstore\n        /* \"#utility.yul\":7582:7586   */\n      0x24\n        /* \"#utility.yul\":7503:7506   */\n      dup7\n        /* \"#utility.yul\":7570:7587   */\n      revert\n        /* \"#utility.yul\":7432:7597   */\n    tag_331:\n        /* \"#utility.yul\":7613:7631   */\n      dup2\n        /* \"#utility.yul\":7640:7744   */\n      dup1\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":7758:7759   */\n      0x01\n        /* \"#utility.yul\":7753:8073   */\n      dup2\n      eq\n      tag_334\n      jumpi\n        /* \"#utility.yul\":7606:8073   */\n      jump(tag_332)\n        /* \"#utility.yul\":7640:7744   */\n    tag_333:\n      not(0xff)\n        /* \"#utility.yul\":7673:7697   */\n      dup7\n      and\n        /* \"#utility.yul\":7661:7698   */\n      dup10\n      mstore\n        /* \"#utility.yul\":7718:7734   */\n      dup5\n      dup10\n      add\n      swap7\n      pop\n        /* \"#utility.yul\":7640:7744   */\n      jump(tag_332)\n        /* \"#utility.yul\":7753:8073   */\n    tag_334:\n        /* \"#utility.yul\":15516:15517   */\n      0x00\n        /* \"#utility.yul\":15509:15523   */\n      dup12\n      dup2\n      mstore\n        /* \"#utility.yul\":15553:15557   */\n      0x20\n        /* \"#utility.yul\":15540:15558   */\n      swap1\n      keccak256\n        /* \"#utility.yul\":7848:7849   */\n      0x00\n        /* \"#utility.yul\":7862:8027   */\n    tag_337:\n        /* \"#utility.yul\":7876:7882   */\n      dup7\n        /* \"#utility.yul\":7873:7874   */\n      dup2\n        /* \"#utility.yul\":7870:7883   */\n      lt\n        /* \"#utility.yul\":7862:8027   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":7954:7968   */\n      dup2\n      sload\n        /* \"#utility.yul\":7941:7952   */\n      dup12\n      dup3\n      add\n        /* \"#utility.yul\":7934:7969   */\n      mstore\n        /* \"#utility.yul\":7997:8013   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":7891:7901   */\n      dup4\n      add\n        /* \"#utility.yul\":7862:8027   */\n      jump(tag_337)\n    tag_339:\n        /* \"#utility.yul\":7866:7869   */\n      pop\n      pop\n        /* \"#utility.yul\":8056:8062   */\n      dup5\n        /* \"#utility.yul\":8051:8054   */\n      dup10\n        /* \"#utility.yul\":8047:8063   */\n      add\n        /* \"#utility.yul\":8040:8063   */\n      swap7\n      pop\n        /* \"#utility.yul\":7606:8073   */\n    tag_332:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8089:8145   */\n      tag_340\n        /* \"#utility.yul\":8114:8144   */\n      tag_341\n        /* \"#utility.yul\":8140:8143   */\n      dup3\n        /* \"#utility.yul\":8132:8138   */\n      dup7\n        /* \"#utility.yul\":8114:8144   */\n      tag_324\n      jump\t// in\n    tag_341:\n      shl(0xd9, 0x173539b7b7)\n        /* \"#utility.yul\":6792:6812   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6837:6838   */\n      0x05\n        /* \"#utility.yul\":6828:6839   */\n      add\n      swap1\n        /* \"#utility.yul\":6732:6845   */\n      jump\n        /* \"#utility.yul\":8089:8145   */\n    tag_340:\n        /* \"#utility.yul\":8082:8145   */\n      swap6\n        /* \"#utility.yul\":6850:8151   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8156:8982   */\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8553:8568   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":8535:8569   */\n      dup3\n      mstore\n        /* \"#utility.yul\":8605:8620   */\n      dup6\n      and\n        /* \"#utility.yul\":8600:8602   */\n      0x20\n        /* \"#utility.yul\":8585:8603   */\n      dup3\n      add\n        /* \"#utility.yul\":8578:8621   */\n      mstore\n        /* \"#utility.yul\":8515:8518   */\n      0xa0\n        /* \"#utility.yul\":8652:8654   */\n      0x40\n        /* \"#utility.yul\":8637:8655   */\n      dup3\n      add\n        /* \"#utility.yul\":8630:8661   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8478:8482   */\n      0x00\n      swap1\n        /* \"#utility.yul\":8684:8741   */\n      tag_343\n      swap1\n        /* \"#utility.yul\":8721:8740   */\n      dup4\n      add\n        /* \"#utility.yul\":8713:8719   */\n      dup7\n        /* \"#utility.yul\":8684:8741   */\n      tag_315\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":8789:8798   */\n      dup3\n        /* \"#utility.yul\":8781:8787   */\n      dup2\n        /* \"#utility.yul\":8777:8799   */\n      sub\n        /* \"#utility.yul\":8772:8774   */\n      0x60\n        /* \"#utility.yul\":8761:8770   */\n      dup5\n        /* \"#utility.yul\":8757:8775   */\n      add\n        /* \"#utility.yul\":8750:8800   */\n      mstore\n        /* \"#utility.yul\":8823:8867   */\n      tag_344\n        /* \"#utility.yul\":8860:8866   */\n      dup2\n        /* \"#utility.yul\":8852:8858   */\n      dup7\n        /* \"#utility.yul\":8823:8867   */\n      tag_315\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":8809:8867   */\n      swap1\n      pop\n        /* \"#utility.yul\":8916:8925   */\n      dup3\n        /* \"#utility.yul\":8908:8914   */\n      dup2\n        /* \"#utility.yul\":8904:8926   */\n      sub\n        /* \"#utility.yul\":8898:8901   */\n      0x80\n        /* \"#utility.yul\":8887:8896   */\n      dup5\n        /* \"#utility.yul\":8883:8902   */\n      add\n        /* \"#utility.yul\":8876:8927   */\n      mstore\n        /* \"#utility.yul\":8944:8976   */\n      tag_345\n        /* \"#utility.yul\":8969:8975   */\n      dup2\n        /* \"#utility.yul\":8961:8967   */\n      dup6\n        /* \"#utility.yul\":8944:8976   */\n      tag_320\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":8936:8976   */\n      swap9\n        /* \"#utility.yul\":8156:8982   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8987:9547   */\n    tag_227:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9284:9299   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":9266:9300   */\n      dup3\n      mstore\n        /* \"#utility.yul\":9336:9351   */\n      dup6\n      and\n        /* \"#utility.yul\":9331:9333   */\n      0x20\n        /* \"#utility.yul\":9316:9334   */\n      dup3\n      add\n        /* \"#utility.yul\":9309:9352   */\n      mstore\n        /* \"#utility.yul\":9383:9385   */\n      0x40\n        /* \"#utility.yul\":9368:9386   */\n      dup2\n      add\n        /* \"#utility.yul\":9361:9395   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":9426:9428   */\n      0x60\n        /* \"#utility.yul\":9411:9429   */\n      dup2\n      add\n        /* \"#utility.yul\":9404:9438   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":9246:9249   */\n      0xa0\n        /* \"#utility.yul\":9469:9472   */\n      0x80\n        /* \"#utility.yul\":9454:9473   */\n      dup3\n      add\n        /* \"#utility.yul\":9447:9479   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9209:9213   */\n      0x00\n      swap1\n        /* \"#utility.yul\":9496:9541   */\n      tag_347\n      swap1\n        /* \"#utility.yul\":9521:9540   */\n      dup4\n      add\n        /* \"#utility.yul\":9513:9519   */\n      dup5\n        /* \"#utility.yul\":9496:9541   */\n      tag_320\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":9488:9541   */\n      swap8\n        /* \"#utility.yul\":8987:9547   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9552:9813   */\n    tag_39:\n        /* \"#utility.yul\":9731:9733   */\n      0x20\n        /* \"#utility.yul\":9720:9729   */\n      dup2\n        /* \"#utility.yul\":9713:9734   */\n      mstore\n        /* \"#utility.yul\":9694:9698   */\n      0x00\n        /* \"#utility.yul\":9751:9807   */\n      tag_57\n        /* \"#utility.yul\":9803:9805   */\n      0x20\n        /* \"#utility.yul\":9792:9801   */\n      dup4\n        /* \"#utility.yul\":9788:9806   */\n      add\n        /* \"#utility.yul\":9780:9786   */\n      dup5\n        /* \"#utility.yul\":9751:9807   */\n      tag_315\n      jump\t// in\n        /* \"#utility.yul\":9818:10283   */\n    tag_163:\n        /* \"#utility.yul\":10075:10077   */\n      0x40\n        /* \"#utility.yul\":10064:10073   */\n      dup2\n        /* \"#utility.yul\":10057:10078   */\n      mstore\n        /* \"#utility.yul\":10038:10042   */\n      0x00\n        /* \"#utility.yul\":10101:10157   */\n      tag_351\n        /* \"#utility.yul\":10153:10155   */\n      0x40\n        /* \"#utility.yul\":10142:10151   */\n      dup4\n        /* \"#utility.yul\":10138:10156   */\n      add\n        /* \"#utility.yul\":10130:10136   */\n      dup6\n        /* \"#utility.yul\":10101:10157   */\n      tag_315\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":10205:10214   */\n      dup3\n        /* \"#utility.yul\":10197:10203   */\n      dup2\n        /* \"#utility.yul\":10193:10215   */\n      sub\n        /* \"#utility.yul\":10188:10190   */\n      0x20\n        /* \"#utility.yul\":10177:10186   */\n      dup5\n        /* \"#utility.yul\":10173:10191   */\n      add\n        /* \"#utility.yul\":10166:10216   */\n      mstore\n        /* \"#utility.yul\":10233:10277   */\n      tag_340\n        /* \"#utility.yul\":10270:10276   */\n      dup2\n        /* \"#utility.yul\":10262:10268   */\n      dup6\n        /* \"#utility.yul\":10233:10277   */\n      tag_315\n      jump\t// in\n        /* \"#utility.yul\":10480:10699   */\n    tag_29:\n        /* \"#utility.yul\":10629:10631   */\n      0x20\n        /* \"#utility.yul\":10618:10627   */\n      dup2\n        /* \"#utility.yul\":10611:10632   */\n      mstore\n        /* \"#utility.yul\":10592:10596   */\n      0x00\n        /* \"#utility.yul\":10649:10693   */\n      tag_57\n        /* \"#utility.yul\":10689:10691   */\n      0x20\n        /* \"#utility.yul\":10678:10687   */\n      dup4\n        /* \"#utility.yul\":10674:10692   */\n      add\n        /* \"#utility.yul\":10666:10672   */\n      dup5\n        /* \"#utility.yul\":10649:10693   */\n      tag_320\n      jump\t// in\n        /* \"#utility.yul\":11125:11529   */\n    tag_216:\n        /* \"#utility.yul\":11327:11329   */\n      0x20\n        /* \"#utility.yul\":11309:11330   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11366:11368   */\n      0x28\n        /* \"#utility.yul\":11346:11364   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11339:11369   */\n      mstore\n        /* \"#utility.yul\":11405:11439   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":11400:11402   */\n      0x40\n        /* \"#utility.yul\":11385:11403   */\n      dup3\n      add\n        /* \"#utility.yul\":11378:11440   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":11471:11473   */\n      0x60\n        /* \"#utility.yul\":11456:11474   */\n      dup3\n      add\n        /* \"#utility.yul\":11449:11487   */\n      mstore\n        /* \"#utility.yul\":11519:11522   */\n      0x80\n        /* \"#utility.yul\":11504:11523   */\n      add\n      swap1\n        /* \"#utility.yul\":11125:11529   */\n      jump\t// out\n        /* \"#utility.yul\":12355:12756   */\n    tag_146:\n        /* \"#utility.yul\":12557:12559   */\n      0x20\n        /* \"#utility.yul\":12539:12560   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12596:12598   */\n      0x25\n        /* \"#utility.yul\":12576:12594   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12569:12599   */\n      mstore\n        /* \"#utility.yul\":12635:12669   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":12630:12632   */\n      0x40\n        /* \"#utility.yul\":12615:12633   */\n      dup3\n      add\n        /* \"#utility.yul\":12608:12670   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":12701:12703   */\n      0x60\n        /* \"#utility.yul\":12686:12704   */\n      dup3\n      add\n        /* \"#utility.yul\":12679:12714   */\n      mstore\n        /* \"#utility.yul\":12746:12749   */\n      0x80\n        /* \"#utility.yul\":12731:12750   */\n      add\n      swap1\n        /* \"#utility.yul\":12355:12756   */\n      jump\t// out\n        /* \"#utility.yul\":13180:13586   */\n    tag_159:\n        /* \"#utility.yul\":13382:13384   */\n      0x20\n        /* \"#utility.yul\":13364:13385   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13421:13423   */\n      0x2a\n        /* \"#utility.yul\":13401:13419   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13394:13424   */\n      mstore\n        /* \"#utility.yul\":13460:13494   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":13455:13457   */\n      0x40\n        /* \"#utility.yul\":13440:13458   */\n      dup3\n      add\n        /* \"#utility.yul\":13433:13495   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":13526:13528   */\n      0x60\n        /* \"#utility.yul\":13511:13529   */\n      dup3\n      add\n        /* \"#utility.yul\":13504:13544   */\n      mstore\n        /* \"#utility.yul\":13576:13579   */\n      0x80\n        /* \"#utility.yul\":13561:13580   */\n      add\n      swap1\n        /* \"#utility.yul\":13180:13586   */\n      jump\t// out\n        /* \"#utility.yul\":15255:15438   */\n    tag_252:\n        /* \"#utility.yul\":15315:15319   */\n      0x00\n        /* \"#utility.yul\":15348:15366   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15340:15346   */\n      dup3\n        /* \"#utility.yul\":15337:15367   */\n      gt\n        /* \"#utility.yul\":15334:15390   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":15370:15388   */\n      tag_370\n      tag_86\n      jump\t// in\n    tag_370:\n      pop\n        /* \"#utility.yul\":15415:15416   */\n      0x05\n        /* \"#utility.yul\":15411:15425   */\n      shl\n        /* \"#utility.yul\":15427:15431   */\n      0x20\n        /* \"#utility.yul\":15407:15432   */\n      add\n      swap1\n        /* \"#utility.yul\":15255:15438   */\n      jump\t// out\n        /* \"#utility.yul\":15569:15697   */\n    tag_135:\n        /* \"#utility.yul\":15609:15612   */\n      0x00\n        /* \"#utility.yul\":15640:15641   */\n      dup3\n        /* \"#utility.yul\":15636:15642   */\n      not\n        /* \"#utility.yul\":15633:15634   */\n      dup3\n        /* \"#utility.yul\":15630:15643   */\n      gt\n        /* \"#utility.yul\":15627:15666   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":15646:15664   */\n      tag_374\n      tag_375\n      jump\t// in\n    tag_374:\n      pop\n        /* \"#utility.yul\":15682:15691   */\n      add\n      swap1\n        /* \"#utility.yul\":15569:15697   */\n      jump\t// out\n        /* \"#utility.yul\":15702:15822   */\n    tag_124:\n        /* \"#utility.yul\":15742:15743   */\n      0x00\n        /* \"#utility.yul\":15768:15769   */\n      dup3\n        /* \"#utility.yul\":15758:15793   */\n      tag_378\n      jumpi\n        /* \"#utility.yul\":15773:15791   */\n      tag_378\n      tag_379\n      jump\t// in\n    tag_378:\n      pop\n        /* \"#utility.yul\":15807:15816   */\n      div\n      swap1\n        /* \"#utility.yul\":15702:15822   */\n      jump\t// out\n        /* \"#utility.yul\":15827:15952   */\n    tag_131:\n        /* \"#utility.yul\":15867:15871   */\n      0x00\n        /* \"#utility.yul\":15895:15896   */\n      dup3\n        /* \"#utility.yul\":15892:15893   */\n      dup3\n        /* \"#utility.yul\":15889:15897   */\n      lt\n        /* \"#utility.yul\":15886:15920   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":15900:15918   */\n      tag_382\n      tag_375\n      jump\t// in\n    tag_382:\n      pop\n        /* \"#utility.yul\":15937:15946   */\n      sub\n      swap1\n        /* \"#utility.yul\":15827:15952   */\n      jump\t// out\n        /* \"#utility.yul\":15957:16215   */\n    tag_323:\n        /* \"#utility.yul\":16029:16030   */\n      0x00\n        /* \"#utility.yul\":16039:16152   */\n    tag_384:\n        /* \"#utility.yul\":16053:16059   */\n      dup4\n        /* \"#utility.yul\":16050:16051   */\n      dup2\n        /* \"#utility.yul\":16047:16060   */\n      lt\n        /* \"#utility.yul\":16039:16152   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":16129:16140   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":16123:16141   */\n      mload\n        /* \"#utility.yul\":16110:16121   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":16103:16142   */\n      mstore\n        /* \"#utility.yul\":16075:16077   */\n      0x20\n        /* \"#utility.yul\":16068:16078   */\n      add\n        /* \"#utility.yul\":16039:16152   */\n      jump(tag_384)\n    tag_386:\n        /* \"#utility.yul\":16170:16176   */\n      dup4\n        /* \"#utility.yul\":16167:16168   */\n      dup2\n        /* \"#utility.yul\":16164:16177   */\n      gt\n        /* \"#utility.yul\":16161:16209   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":16205:16206   */\n      0x00\n        /* \"#utility.yul\":16196:16202   */\n      dup5\n        /* \"#utility.yul\":16191:16194   */\n      dup5\n        /* \"#utility.yul\":16187:16203   */\n      add\n        /* \"#utility.yul\":16180:16207   */\n      mstore\n        /* \"#utility.yul\":16161:16209   */\n    tag_387:\n      pop\n        /* \"#utility.yul\":15957:16215   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16220:16469   */\n    tag_254:\n        /* \"#utility.yul\":16330:16332   */\n      0x1f\n        /* \"#utility.yul\":16311:16324   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":16307:16334   */\n      and\n        /* \"#utility.yul\":16295:16335   */\n      dup2\n      add\n        /* \"#utility.yul\":16365:16383   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16350:16384   */\n      dup2\n      gt\n        /* \"#utility.yul\":16386:16408   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":16347:16409   */\n      or\n        /* \"#utility.yul\":16344:16432   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":16412:16430   */\n      tag_390\n      tag_86\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":16448:16450   */\n      0x40\n        /* \"#utility.yul\":16441:16463   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":16220:16469   */\n      jump\t// out\n        /* \"#utility.yul\":16474:16609   */\n    tag_100:\n        /* \"#utility.yul\":16513:16516   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":16534:16551   */\n      dup3\n      eq\n        /* \"#utility.yul\":16531:16574   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":16554:16572   */\n      tag_393\n      tag_375\n      jump\t// in\n    tag_393:\n      pop\n        /* \"#utility.yul\":16601:16602   */\n      0x01\n        /* \"#utility.yul\":16590:16603   */\n      add\n      swap1\n        /* \"#utility.yul\":16474:16609   */\n      jump\t// out\n        /* \"#utility.yul\":16614:16726   */\n    tag_133:\n        /* \"#utility.yul\":16646:16647   */\n      0x00\n        /* \"#utility.yul\":16672:16673   */\n      dup3\n        /* \"#utility.yul\":16662:16697   */\n      tag_396\n      jumpi\n        /* \"#utility.yul\":16677:16695   */\n      tag_396\n      tag_379\n      jump\t// in\n    tag_396:\n      pop\n        /* \"#utility.yul\":16711:16720   */\n      mod\n      swap1\n        /* \"#utility.yul\":16614:16726   */\n      jump\t// out\n        /* \"#utility.yul\":16731:16858   */\n    tag_375:\n        /* \"#utility.yul\":16792:16802   */\n      0x4e487b71\n        /* \"#utility.yul\":16787:16790   */\n      0xe0\n        /* \"#utility.yul\":16783:16803   */\n      shl\n        /* \"#utility.yul\":16780:16781   */\n      0x00\n        /* \"#utility.yul\":16773:16804   */\n      mstore\n        /* \"#utility.yul\":16823:16827   */\n      0x11\n        /* \"#utility.yul\":16820:16821   */\n      0x04\n        /* \"#utility.yul\":16813:16828   */\n      mstore\n        /* \"#utility.yul\":16847:16851   */\n      0x24\n        /* \"#utility.yul\":16844:16845   */\n      0x00\n        /* \"#utility.yul\":16837:16852   */\n      revert\n        /* \"#utility.yul\":16863:16990   */\n    tag_379:\n        /* \"#utility.yul\":16924:16934   */\n      0x4e487b71\n        /* \"#utility.yul\":16919:16922   */\n      0xe0\n        /* \"#utility.yul\":16915:16935   */\n      shl\n        /* \"#utility.yul\":16912:16913   */\n      0x00\n        /* \"#utility.yul\":16905:16936   */\n      mstore\n        /* \"#utility.yul\":16955:16959   */\n      0x12\n        /* \"#utility.yul\":16952:16953   */\n      0x04\n        /* \"#utility.yul\":16945:16960   */\n      mstore\n        /* \"#utility.yul\":16979:16983   */\n      0x24\n        /* \"#utility.yul\":16976:16977   */\n      0x00\n        /* \"#utility.yul\":16969:16984   */\n      revert\n        /* \"#utility.yul\":16995:17122   */\n    tag_94:\n        /* \"#utility.yul\":17056:17066   */\n      0x4e487b71\n        /* \"#utility.yul\":17051:17054   */\n      0xe0\n        /* \"#utility.yul\":17047:17067   */\n      shl\n        /* \"#utility.yul\":17044:17045   */\n      0x00\n        /* \"#utility.yul\":17037:17068   */\n      mstore\n        /* \"#utility.yul\":17087:17091   */\n      0x32\n        /* \"#utility.yul\":17084:17085   */\n      0x04\n        /* \"#utility.yul\":17077:17092   */\n      mstore\n        /* \"#utility.yul\":17111:17115   */\n      0x24\n        /* \"#utility.yul\":17108:17109   */\n      0x00\n        /* \"#utility.yul\":17101:17116   */\n      revert\n        /* \"#utility.yul\":17127:17254   */\n    tag_86:\n        /* \"#utility.yul\":17188:17198   */\n      0x4e487b71\n        /* \"#utility.yul\":17183:17186   */\n      0xe0\n        /* \"#utility.yul\":17179:17199   */\n      shl\n        /* \"#utility.yul\":17176:17177   */\n      0x00\n        /* \"#utility.yul\":17169:17200   */\n      mstore\n        /* \"#utility.yul\":17219:17223   */\n      0x41\n        /* \"#utility.yul\":17216:17217   */\n      0x04\n        /* \"#utility.yul\":17209:17224   */\n      mstore\n        /* \"#utility.yul\":17243:17247   */\n      0x24\n        /* \"#utility.yul\":17240:17241   */\n      0x00\n        /* \"#utility.yul\":17233:17248   */\n      revert\n        /* \"#utility.yul\":17259:17438   */\n    tag_206:\n        /* \"#utility.yul\":17294:17297   */\n      0x00\n        /* \"#utility.yul\":17336:17337   */\n      0x03\n        /* \"#utility.yul\":17318:17334   */\n      returndatasize\n        /* \"#utility.yul\":17315:17338   */\n      gt\n        /* \"#utility.yul\":17312:17432   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":17382:17383   */\n      0x04\n        /* \"#utility.yul\":17379:17380   */\n      0x00\n        /* \"#utility.yul\":17376:17377   */\n      dup1\n        /* \"#utility.yul\":17361:17384   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":17419:17420   */\n      0x00\n        /* \"#utility.yul\":17413:17421   */\n      mload\n        /* \"#utility.yul\":17408:17411   */\n      0xe0\n        /* \"#utility.yul\":17404:17422   */\n      shr\n        /* \"#utility.yul\":17312:17432   */\n    tag_402:\n        /* \"#utility.yul\":17259:17438   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17443:18114   */\n    tag_208:\n        /* \"#utility.yul\":17482:17485   */\n      0x00\n        /* \"#utility.yul\":17524:17528   */\n      0x44\n        /* \"#utility.yul\":17506:17522   */\n      returndatasize\n        /* \"#utility.yul\":17503:17529   */\n      lt\n        /* \"#utility.yul\":17500:17539   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":17443:18114   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17500:17539   */\n    tag_404:\n        /* \"#utility.yul\":17566:17568   */\n      0x40\n        /* \"#utility.yul\":17560:17569   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":17631:17647   */\n      returndatasize\n        /* \"#utility.yul\":17627:17652   */\n      dup2\n      add\n        /* \"#utility.yul\":17624:17625   */\n      0x04\n        /* \"#utility.yul\":17560:17569   */\n      dup4\n        /* \"#utility.yul\":17603:17653   */\n      returndatacopy\n        /* \"#utility.yul\":17682:17686   */\n      dup2\n        /* \"#utility.yul\":17676:17687   */\n      mload\n        /* \"#utility.yul\":17706:17722   */\n      returndatasize\n        /* \"#utility.yul\":17741:17759   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17812:17814   */\n      dup2\n        /* \"#utility.yul\":17805:17809   */\n      0x24\n        /* \"#utility.yul\":17797:17803   */\n      dup5\n        /* \"#utility.yul\":17793:17810   */\n      add\n        /* \"#utility.yul\":17790:17815   */\n      gt\n        /* \"#utility.yul\":17785:17787   */\n      dup2\n        /* \"#utility.yul\":17777:17783   */\n      dup5\n        /* \"#utility.yul\":17774:17788   */\n      gt\n        /* \"#utility.yul\":17771:17816   */\n      or\n        /* \"#utility.yul\":17768:17826   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":17819:17824   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17443:18114   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17768:17826   */\n    tag_405:\n        /* \"#utility.yul\":17856:17862   */\n      dup3\n        /* \"#utility.yul\":17850:17854   */\n      dup6\n        /* \"#utility.yul\":17846:17863   */\n      add\n        /* \"#utility.yul\":17835:17863   */\n      swap2\n      pop\n        /* \"#utility.yul\":17892:17895   */\n      dup2\n        /* \"#utility.yul\":17886:17896   */\n      mload\n        /* \"#utility.yul\":17919:17921   */\n      dup2\n        /* \"#utility.yul\":17911:17917   */\n      dup2\n        /* \"#utility.yul\":17908:17922   */\n      gt\n        /* \"#utility.yul\":17905:17932   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":17925:17930   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17443:18114   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17905:17932   */\n    tag_406:\n        /* \"#utility.yul\":18009:18011   */\n      dup5\n        /* \"#utility.yul\":17990:18006   */\n      returndatasize\n        /* \"#utility.yul\":17984:17988   */\n      dup8\n        /* \"#utility.yul\":17980:18007   */\n      add\n        /* \"#utility.yul\":17976:18012   */\n      add\n        /* \"#utility.yul\":17969:17973   */\n      0x20\n        /* \"#utility.yul\":17960:17966   */\n      dup3\n        /* \"#utility.yul\":17955:17958   */\n      dup6\n        /* \"#utility.yul\":17951:17967   */\n      add\n        /* \"#utility.yul\":17947:17974   */\n      add\n        /* \"#utility.yul\":17944:18013   */\n      gt\n        /* \"#utility.yul\":17941:18023   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":18016:18021   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17443:18114   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17941:18023   */\n    tag_407:\n        /* \"#utility.yul\":18032:18089   */\n      tag_408\n        /* \"#utility.yul\":18083:18087   */\n      0x20\n        /* \"#utility.yul\":18074:18080   */\n      dup3\n        /* \"#utility.yul\":18066:18072   */\n      dup7\n        /* \"#utility.yul\":18062:18081   */\n      add\n        /* \"#utility.yul\":18058:18088   */\n      add\n        /* \"#utility.yul\":18052:18056   */\n      dup8\n        /* \"#utility.yul\":18032:18089   */\n      tag_254\n      jump\t// in\n    tag_408:\n      pop\n        /* \"#utility.yul\":18105:18108   */\n      swap1\n      swap6\n        /* \"#utility.yul\":17443:18114   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18119:18250   */\n    tag_309:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":18193:18225   */\n      dup2\n      and\n        /* \"#utility.yul\":18183:18226   */\n      dup2\n      eq\n        /* \"#utility.yul\":18173:18244   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":18240:18241   */\n      0x00\n        /* \"#utility.yul\":18237:18238   */\n      dup1\n        /* \"#utility.yul\":18230:18242   */\n      revert\n        /* \"#utility.yul\":18173:18244   */\n    tag_410:\n        /* \"#utility.yul\":18119:18250   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c061520077c81de3d091dfd0a7a50a043b840232facc27c811879bf168a3213864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_45": {
									"entryPoint": null,
									"id": 45,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_582": {
									"entryPoint": 70,
									"id": 582,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1620:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "105:996:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "115:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "125:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "119:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "172:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "184:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "174:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "174:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "174:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "147:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "156:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "143:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "143:23:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "168:2:10"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "139:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "139:32:10"
															},
															"nodeType": "YulIf",
															"src": "136:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "197:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "217:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "211:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "211:16:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "201:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "236:28:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "254:2:10",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "258:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:18:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "240:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "300:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "303:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "293:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "279:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "287:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "276:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:14:10"
															},
															"nodeType": "YulIf",
															"src": "273:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "330:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "341:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:22:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "320:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "396:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "405:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "408:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "398:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "398:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "398:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "375:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "379:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "371:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "371:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "386:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "360:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:35:10"
															},
															"nodeType": "YulIf",
															"src": "357:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "421:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "437:2:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "431:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:9:10"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "425:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "463:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "465:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "465:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "465:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "455:2:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "459:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "452:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "452:10:10"
															},
															"nodeType": "YulIf",
															"src": "449:36:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "494:17:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "504:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "504:7:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "498:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "520:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "540:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "534:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "524:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "552:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "574:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "598:2:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "602:4:10",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "594:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "594:13:10"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "609:2:10"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "590:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "590:22:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "614:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "586:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "586:31:10"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "619:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "582:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:40:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:53:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "556:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "682:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "684:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "684:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "684:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "641:10:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "653:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "638:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "661:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "673:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "658:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "658:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "635:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:46:10"
															},
															"nodeType": "YulIf",
															"src": "632:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "720:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "724:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "713:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "713:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "713:22:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "751:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "759:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "744:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "744:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "744:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "808:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "817:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "820:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "810:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "810:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "810:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "785:2:10"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "789:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "781:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "781:11:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "794:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "777:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "777:20:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "799:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "774:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:33:10"
															},
															"nodeType": "YulIf",
															"src": "771:53:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "833:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "842:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "837:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "898:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "927:6:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "935:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "923:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "923:14:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "939:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "919:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "919:23:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "958:2:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "962:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "954:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "954:10:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "966:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "950:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "950:19:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "944:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "944:26:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "912:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "912:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "912:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "863:1:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "866:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "860:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "860:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "870:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "872:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "881:1:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "884:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "877:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "877:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "872:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "856:3:10",
																"statements": []
															},
															"src": "852:129:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1011:59:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1040:6:10"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1048:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1036:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1036:15:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1053:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1032:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1032:24:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1058:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:35:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:35:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "996:1:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "999:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "993:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "993:9:10"
															},
															"nodeType": "YulIf",
															"src": "990:80:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1079:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1089:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1079:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "71:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "82:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "94:6:10",
														"type": ""
													}
												],
												"src": "14:1087:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1161:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1171:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1185:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1188:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1181:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1181:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1171:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1202:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1232:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1228:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1228:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1206:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1279:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1281:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1295:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1303:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1291:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1291:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1281:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1259:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1252:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:26:10"
															},
															"nodeType": "YulIf",
															"src": "1249:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1369:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1390:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1397:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1402:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1393:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1393:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1383:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1383:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1383:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1434:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1437:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1427:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1427:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1427:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1462:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1465:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1455:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1455:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1455:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1325:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1348:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1356:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1345:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1345:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1322:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1322:38:10"
															},
															"nodeType": "YulIf",
															"src": "1319:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1141:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1150:6:10",
														"type": ""
													}
												],
												"src": "1106:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1523:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1540:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1552:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1543:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1543:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1533:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1533:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1533:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1580:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1583:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1573:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1573:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1573:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1604:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1597:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1597:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1597:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1491:127:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), 0)\n        }\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620017d3380380620017d3833981016040819052620000349162000105565b6200003f8162000046565b5062000234565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001e1565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b600060208083850312156200011957600080fd5b82516001600160401b03808211156200013157600080fd5b818501915085601f8301126200014657600080fd5b8151818111156200015b576200015b6200021e565b604051601f8201601f19908116603f011681019083821181831017156200018657620001866200021e565b8160405282815288868487010111156200019f57600080fd5b600093505b82841015620001c35784840186015181850187015292850192620001a4565b82841115620001d55760008684830101525b98975050505050505050565b600181811c90821680620001f657607f821691505b602082108114156200021857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61158f80620002446000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610efe565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610ff9565b610225565b60405190151581526020016100a9565b6100e86100e3366004611033565b610277565b6040516100a99190611265565b610108610103366004610db3565b6102ab565b005b61011d610118366004610f28565b610342565b6040516100a9919061122d565b610108610138366004610ec2565b61046c565b6100c561014b366004610d80565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004610e5d565b61047b565b60006001600160a01b0383166101fc5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b6000828152602081815260408083206001600160a01b03871684529091529020545b9392505050565b60006001600160e01b03198216636cdb3d1360e11b148061025657506001600160e01b031982166303a24d0760e21b145b8061027157506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600261028483610502565b6040516020016102959291906110cf565b6040516020818303038152906040529050919050565b6001600160a01b0385163314806102c757506102c7853361014b565b61032e5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f3565b61033b8585858585610608565b5050505050565b606081518351146103a75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f3565b6000835167ffffffffffffffff8111156103c3576103c3611484565b6040519080825280602002602001820160405280156103ec578160200160208202803683370190505b50905060005b8451811015610464576104378582815181106104105761041061146e565b602002602001015185838151811061042a5761042a61146e565b602002602001015161018c565b8282815181106104495761044961146e565b602090810291909101015261045d81611413565b90506103f2565b509392505050565b6104773383836107e5565b5050565b6001600160a01b0385163314806104975750610497853361014b565b6104f55760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f3565b61033b85858585856108c6565b6060816105265750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610550578061053a81611413565b91506105499050600a8361138b565b915061052a565b60008167ffffffffffffffff81111561056b5761056b611484565b6040519080825280601f01601f191660200182016040528015610595576020820181803683370190505b5090505b8415610600576105aa60018361139f565b91506105b7600a8661142e565b6105c2906030611373565b60f81b8183815181106105d7576105d761146e565b60200101906001600160f81b031916908160001a9053506105f9600a8661138b565b9450610599565b949350505050565b815183511461066a5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f3565b6001600160a01b0384166106905760405162461bcd60e51b81526004016101f3906112c0565b3360005b84518110156107775760008582815181106106b1576106b161146e565b6020026020010151905060008583815181106106cf576106cf61146e565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561071f5760405162461bcd60e51b81526004016101f390611305565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061075c908490611373565b925050819055505050508061077090611413565b9050610694565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516107c7929190611240565b60405180910390a46107dd8187878787876109f0565b505050505050565b816001600160a01b0316836001600160a01b031614156108595760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f3565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108ec5760405162461bcd60e51b81526004016101f3906112c0565b3360006108f885610b64565b9050600061090585610b64565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156109485760405162461bcd60e51b81526004016101f390611305565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610985908490611373565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46109e5848a8a8a8a8a610baf565b505050505050505050565b6001600160a01b0384163b156107dd5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610a34908990899088908890889060040161118a565b602060405180830381600087803b158015610a4e57600080fd5b505af1925050508015610a7e575060408051601f3d908101601f19168201909252610a7b91810190611016565b60015b610b2b57610a8a61149a565b806308c379a01415610ac45750610a9f6114b6565b80610aaa5750610ac6565b8060405162461bcd60e51b81526004016101f39190611265565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f3565b6001600160e01b0319811663bc197c8160e01b14610b5b5760405162461bcd60e51b81526004016101f390611278565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610b9e57610b9e61146e565b602090810291909101015292915050565b6001600160a01b0384163b156107dd5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610bf390899089908890889088906004016111e8565b602060405180830381600087803b158015610c0d57600080fd5b505af1925050508015610c3d575060408051601f3d908101601f19168201909252610c3a91810190611016565b60015b610c4957610a8a61149a565b6001600160e01b0319811663f23a6e6160e01b14610b5b5760405162461bcd60e51b81526004016101f390611278565b80356001600160a01b0381168114610c9057600080fd5b919050565b600082601f830112610ca657600080fd5b81356020610cb38261134f565b604051610cc082826113e6565b8381528281019150858301600585901b87018401881015610ce057600080fd5b60005b85811015610cff57813584529284019290840190600101610ce3565b5090979650505050505050565b600082601f830112610d1d57600080fd5b813567ffffffffffffffff811115610d3757610d37611484565b604051610d4e601f8301601f1916602001826113e6565b818152846020838601011115610d6357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610d9357600080fd5b610d9c83610c79565b9150610daa60208401610c79565b90509250929050565b600080600080600060a08688031215610dcb57600080fd5b610dd486610c79565b9450610de260208701610c79565b9350604086013567ffffffffffffffff80821115610dff57600080fd5b610e0b89838a01610c95565b94506060880135915080821115610e2157600080fd5b610e2d89838a01610c95565b93506080880135915080821115610e4357600080fd5b50610e5088828901610d0c565b9150509295509295909350565b600080600080600060a08688031215610e7557600080fd5b610e7e86610c79565b9450610e8c60208701610c79565b93506040860135925060608601359150608086013567ffffffffffffffff811115610eb657600080fd5b610e5088828901610d0c565b60008060408385031215610ed557600080fd5b610ede83610c79565b915060208301358015158114610ef357600080fd5b809150509250929050565b60008060408385031215610f1157600080fd5b610f1a83610c79565b946020939093013593505050565b60008060408385031215610f3b57600080fd5b823567ffffffffffffffff80821115610f5357600080fd5b818501915085601f830112610f6757600080fd5b81356020610f748261134f565b604051610f8182826113e6565b8381528281019150858301600585901b870184018b1015610fa157600080fd5b600096505b84871015610fcb57610fb781610c79565b835260019690960195918301918301610fa6565b5096505086013592505080821115610fe257600080fd5b50610fef85828601610c95565b9150509250929050565b60006020828403121561100b57600080fd5b813561021e81611540565b60006020828403121561102857600080fd5b815161021e81611540565b60006020828403121561104557600080fd5b5035919050565b600081518084526020808501945080840160005b8381101561107c57815187529582019590820190600101611060565b509495945050505050565b6000815180845261109f8160208601602086016113b6565b601f01601f19169290920160200192915050565b600081516110c58185602086016113b6565b9290920192915050565b600080845481600182811c9150808316806110eb57607f831692505b602080841082141561110b57634e487b7160e01b86526022600452602486fd5b81801561111f57600181146111305761115d565b60ff1986168952848901965061115d565b60008b81526020902060005b868110156111555781548b82015290850190830161113c565b505084890196505b50505050505061118161117082866110b3565b64173539b7b760d91b815260050190565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190526000906111b69083018661104c565b82810360608401526111c8818661104c565b905082810360808401526111dc8185611087565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061122290830184611087565b979650505050505050565b60208152600061021e602083018461104c565b604081526000611253604083018561104c565b8281036020840152611181818561104c565b60208152600061021e6020830184611087565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600067ffffffffffffffff82111561136957611369611484565b5060051b60200190565b6000821982111561138657611386611442565b500190565b60008261139a5761139a611458565b500490565b6000828210156113b1576113b1611442565b500390565b60005b838110156113d15781810151838201526020016113b9565b838111156113e0576000848401525b50505050565b601f8201601f1916810167ffffffffffffffff8111828210171561140c5761140c611484565b6040525050565b600060001982141561142757611427611442565b5060010190565b60008261143d5761143d611458565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d11156114b35760046000803e5060005160e01c5b90565b600060443d10156114c45790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156114f457505050505090565b828501915081518181111561150c5750505050505090565b843d87010160208285010111156115265750505050505090565b611535602082860101876113e6565b509095945050505050565b6001600160e01b03198116811461155657600080fd5b5056fea2646970667358221220c061520077c81de3d091dfd0a7a50a043b840232facc27c811879bf168a3213864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17D3 CODESIZE SUB DUP1 PUSH3 0x17D3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x105 JUMP JUMPDEST PUSH3 0x3F DUP2 PUSH3 0x46 JUMP JUMPDEST POP PUSH3 0x234 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x5B SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x5F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x6D SWAP1 PUSH3 0x1E1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x91 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xAC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xDC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xDC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xBF JUMP JUMPDEST POP PUSH3 0xEA SWAP3 SWAP2 POP PUSH3 0xEE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xEA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xEF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x15B JUMPI PUSH3 0x15B PUSH3 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x186 JUMPI PUSH3 0x186 PUSH3 0x21E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x1C3 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x1A4 JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x1D5 JUMPI PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1F6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x218 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x158F DUP1 PUSH3 0x244 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xEFE JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x1265 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x2AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xF28 JUMP JUMPDEST PUSH2 0x342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x46C JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0x47B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x256 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x271 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH2 0x284 DUP4 PUSH2 0x502 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x295 SWAP3 SWAP2 SWAP1 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x2C7 JUMPI POP PUSH2 0x2C7 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x32E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x33B DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x608 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C3 JUMPI PUSH2 0x3C3 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3EC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x464 JUMPI PUSH2 0x437 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x410 JUMPI PUSH2 0x410 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x42A JUMPI PUSH2 0x42A PUSH2 0x146E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x449 JUMPI PUSH2 0x449 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x45D DUP2 PUSH2 0x1413 JUMP JUMPDEST SWAP1 POP PUSH2 0x3F2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x477 CALLER DUP4 DUP4 PUSH2 0x7E5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x497 JUMPI POP PUSH2 0x497 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x33B DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x526 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x550 JUMPI DUP1 PUSH2 0x53A DUP2 PUSH2 0x1413 JUMP JUMPDEST SWAP2 POP PUSH2 0x549 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x138B JUMP JUMPDEST SWAP2 POP PUSH2 0x52A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x56B JUMPI PUSH2 0x56B PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x600 JUMPI PUSH2 0x5AA PUSH1 0x1 DUP4 PUSH2 0x139F JUMP JUMPDEST SWAP2 POP PUSH2 0x5B7 PUSH1 0xA DUP7 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x5C2 SWAP1 PUSH1 0x30 PUSH2 0x1373 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5D7 JUMPI PUSH2 0x5D7 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x5F9 PUSH1 0xA DUP7 PUSH2 0x138B JUMP JUMPDEST SWAP5 POP PUSH2 0x599 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x66A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x690 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x777 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6B1 JUMPI PUSH2 0x6B1 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6CF JUMPI PUSH2 0x6CF PUSH2 0x146E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x71F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x75C SWAP1 DUP5 SWAP1 PUSH2 0x1373 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x770 SWAP1 PUSH2 0x1413 JUMP JUMPDEST SWAP1 POP PUSH2 0x694 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x7C7 SWAP3 SWAP2 SWAP1 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x7DD DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x9F0 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x859 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x8EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x8F8 DUP6 PUSH2 0xB64 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x905 DUP6 PUSH2 0xB64 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x948 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x985 SWAP1 DUP5 SWAP1 PUSH2 0x1373 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x9E5 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xBAF JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x7DD JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xA34 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x118A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA7E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA7B SWAP2 DUP2 ADD SWAP1 PUSH2 0x1016 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB2B JUMPI PUSH2 0xA8A PUSH2 0x149A JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xAC4 JUMPI POP PUSH2 0xA9F PUSH2 0x14B6 JUMP JUMPDEST DUP1 PUSH2 0xAAA JUMPI POP PUSH2 0xAC6 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1265 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1278 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB9E JUMPI PUSH2 0xB9E PUSH2 0x146E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x7DD JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xBF3 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC3D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC3A SWAP2 DUP2 ADD SWAP1 PUSH2 0x1016 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC49 JUMPI PUSH2 0xA8A PUSH2 0x149A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1278 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xCB3 DUP3 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCC0 DUP3 DUP3 PUSH2 0x13E6 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0xCE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xCFF JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xCE3 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD37 JUMPI PUSH2 0xD37 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4E PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x13E6 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xD63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9C DUP4 PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP PUSH2 0xDAA PUSH1 0x20 DUP5 ADD PUSH2 0xC79 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xDCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD4 DUP7 PUSH2 0xC79 JUMP JUMPDEST SWAP5 POP PUSH2 0xDE2 PUSH1 0x20 DUP8 ADD PUSH2 0xC79 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0B DUP10 DUP4 DUP11 ADD PUSH2 0xC95 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2D DUP10 DUP4 DUP11 ADD PUSH2 0xC95 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE50 DUP9 DUP3 DUP10 ADD PUSH2 0xD0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7E DUP7 PUSH2 0xC79 JUMP JUMPDEST SWAP5 POP PUSH2 0xE8C PUSH1 0x20 DUP8 ADD PUSH2 0xC79 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE50 DUP9 DUP3 DUP10 ADD PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEDE DUP4 PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF1A DUP4 PUSH2 0xC79 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xF74 DUP3 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF81 DUP3 DUP3 PUSH2 0x13E6 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0xFA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0xFCB JUMPI PUSH2 0xFB7 DUP2 PUSH2 0xC79 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xFA6 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xFE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFEF DUP6 DUP3 DUP7 ADD PUSH2 0xC95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x100B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21E DUP2 PUSH2 0x1540 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1028 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x21E DUP2 PUSH2 0x1540 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1045 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x107C JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1060 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x109F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x10C5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13B6 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x10EB JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x110B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x111F JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1130 JUMPI PUSH2 0x115D JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x115D JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1155 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x113C JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP PUSH2 0x1181 PUSH2 0x1170 DUP3 DUP7 PUSH2 0x10B3 JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL DUP2 MSTORE PUSH1 0x5 ADD SWAP1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11B6 SWAP1 DUP4 ADD DUP7 PUSH2 0x104C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x11C8 DUP2 DUP7 PUSH2 0x104C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x11DC DUP2 DUP6 PUSH2 0x1087 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1222 SWAP1 DUP4 ADD DUP5 PUSH2 0x1087 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x21E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1253 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x104C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1181 DUP2 DUP6 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x21E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1087 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1369 JUMPI PUSH2 0x1369 PUSH2 0x1484 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1386 JUMPI PUSH2 0x1386 PUSH2 0x1442 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x139A JUMPI PUSH2 0x139A PUSH2 0x1458 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x13B1 JUMPI PUSH2 0x13B1 PUSH2 0x1442 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13D1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13B9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x13E0 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x140C JUMPI PUSH2 0x140C PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1427 JUMPI PUSH2 0x1427 PUSH2 0x1442 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x143D JUMPI PUSH2 0x143D PUSH2 0x1458 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x14B3 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x14C4 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x14F4 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x150C JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1526 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1535 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x13E6 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 PUSH2 0x5200 PUSH24 0xC81DE3D091DFD0A7A50A043B840232FACC27C811879BF168 LOG3 0x21 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "604:16843:0:-:0;;;1141:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1183:13;1191:4;1183:7;:13::i;:::-;1141:62;604:16843;;8498:86;8564:13;;;;:4;;:13;;;;;:::i;:::-;;8498:86;:::o;604:16843::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;604:16843:0;;;-1:-1:-1;604:16843:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1087:10;94:6;125:2;168;156:9;147:7;143:23;139:32;136:52;;;184:1;181;174:12;136:52;211:16;;-1:-1:-1;;;;;276:14:10;;;273:34;;;303:1;300;293:12;273:34;341:6;330:9;326:22;316:32;;386:7;379:4;375:2;371:13;367:27;357:55;;408:1;405;398:12;357:55;437:2;431:9;459:2;455;452:10;449:36;;;465:18;;:::i;:::-;540:2;534:9;508:2;594:13;;-1:-1:-1;;590:22:10;;;614:2;586:31;582:40;570:53;;;638:18;;;658:22;;;635:46;632:72;;;684:18;;:::i;:::-;724:10;720:2;713:22;759:2;751:6;744:18;799:7;794:2;789;785;781:11;777:20;774:33;771:53;;;820:1;817;810:12;771:53;842:1;833:10;;852:129;866:2;863:1;860:9;852:129;;;954:10;;;950:19;;944:26;923:14;;;919:23;;912:59;877:10;;;;852:129;;;999:2;996:1;993:9;990:80;;;1058:1;1053:2;1048;1040:6;1036:15;1032:24;1025:35;990:80;1089:6;14:1087;-1:-1:-1;;;;;;;;14:1087:10:o;1106:380::-;1185:1;1181:12;;;;1228;;;1249:61;;1303:4;1295:6;1291:17;1281:27;;1249:61;1356:2;1348:6;1345:14;1325:18;1322:38;1319:161;;;1402:10;1397:3;1393:20;1390:1;1383:31;1437:4;1434:1;1427:15;1465:4;1462:1;1455:15;1319:161;;1106:380;;;:::o;1491:127::-;1552:10;1547:3;1543:20;1540:1;1533:31;1583:4;1580:1;1573:15;1607:4;1604:1;1597:15;1491:127;604:16843:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1092": {
									"entryPoint": null,
									"id": 1092,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1248": {
									"entryPoint": 2916,
									"id": 1248,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_balanceOf_142": {
									"entryPoint": null,
									"id": 142,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1073": {
									"entryPoint": null,
									"id": 1073,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1220": {
									"entryPoint": 2544,
									"id": 1220,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1155": {
									"entryPoint": 2991,
									"id": 1155,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1803": {
									"entryPoint": null,
									"id": 1803,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_571": {
									"entryPoint": 1544,
									"id": 571,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_436": {
									"entryPoint": 2246,
									"id": 436,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1054": {
									"entryPoint": 2021,
									"id": 1054,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_206": {
									"entryPoint": 834,
									"id": 206,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_126": {
									"entryPoint": 396,
									"id": 126,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_241": {
									"entryPoint": null,
									"id": 241,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1514": {
									"entryPoint": null,
									"id": 1514,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_319": {
									"entryPoint": 683,
									"id": 319,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_279": {
									"entryPoint": 1147,
									"id": 279,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_223": {
									"entryPoint": 1132,
									"id": 223,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_2039": {
									"entryPoint": null,
									"id": 2039,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_76": {
									"entryPoint": 549,
									"id": 76,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toString_1898": {
									"entryPoint": 1282,
									"id": 1898,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_99": {
									"entryPoint": 631,
									"id": 99,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 3340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 3507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 3677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 4172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 4231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_stringliteral": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4303,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4490,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4584,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4672,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 4943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 5046,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 5094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 5139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 5166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5186,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5208,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5230,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5252,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 5274,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 5302,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 5440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18252:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:10"
															},
															"nodeType": "YulIf",
															"src": "111:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "14:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "256:671:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "305:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "314:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "307:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "307:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "307:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "284:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "292:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "280:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "280:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "299:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "276:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "276:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "269:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "269:35:10"
															},
															"nodeType": "YulIf",
															"src": "266:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "330:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "353:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "340:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "340:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "334:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "369:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "379:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "373:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "392:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "442:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "402:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "402:43:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "396:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "454:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "474:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "468:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "468:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "458:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "506:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "514:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "486:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "486:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "486:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "526:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "537:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "530:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "559:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "567:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "552:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "552:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "552:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "579:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "590:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "598:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "586:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "586:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "579:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "610:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "625:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "633:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "621:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "621:15:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "614:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "690:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "699:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "702:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "692:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "692:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "692:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "659:6:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "671:1:10",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "674:2:10"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "667:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "667:10:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "655:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "655:23:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "680:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "651:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "651:32:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "685:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "648:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:41:10"
															},
															"nodeType": "YulIf",
															"src": "645:61:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "715:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "724:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "719:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "779:118:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "800:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "818:3:10"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "805:12:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "805:17:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "793:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "793:30:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "793:30:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "836:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "847:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "852:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "843:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "843:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "836:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "868:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "879:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "884:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "875:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "875:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "868:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "745:1:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "748:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "742:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "742:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "752:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "754:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "763:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "766:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "759:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "759:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "754:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "738:3:10",
																"statements": []
															},
															"src": "734:163:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "906:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "915:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "906:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "230:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "238:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "246:5:10",
														"type": ""
													}
												],
												"src": "192:735:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "984:503:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1033:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1042:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1045:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1035:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1035:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1035:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1012:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1020:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1008:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1008:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1004:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1004:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "997:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:35:10"
															},
															"nodeType": "YulIf",
															"src": "994:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1058:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1081:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1068:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1068:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1062:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1127:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1129:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1129:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1129:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1103:2:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1100:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:26:10"
															},
															"nodeType": "YulIf",
															"src": "1097:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1158:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1178:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1172:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1162:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1210:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1230:2:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1234:4:10",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1226:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1226:13:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1245:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1241:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1241:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1222:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1222:27:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1251:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1218:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1218:38:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1190:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1190:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1190:67:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1273:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1281:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1266:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1266:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1332:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1341:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1344:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1334:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1334:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1334:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1307:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1315:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1320:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1299:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1299:26:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1327:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1296:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:35:10"
															},
															"nodeType": "YulIf",
															"src": "1293:55:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1374:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1382:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1370:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1370:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1393:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1401:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1389:17:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1408:2:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1357:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1357:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1357:54:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1435:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1443:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1431:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1448:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1427:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1427:26:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1420:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1420:37:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1466:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1475:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1466:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "958:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "966:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "974:5:10",
														"type": ""
													}
												],
												"src": "932:555:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1579:173:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1625:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1634:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1637:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1627:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1627:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1627:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1600:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1609:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1596:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1596:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1621:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1592:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1592:32:10"
															},
															"nodeType": "YulIf",
															"src": "1589:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1679:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1698:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1731:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1742:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1727:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1727:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1708:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1708:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1698:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1537:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1548:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1560:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1568:6:10",
														"type": ""
													}
												],
												"src": "1492:260:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1954:746:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2001:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2010:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2013:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2003:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2003:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2003:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1975:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1984:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1971:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1971:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1996:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1967:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1967:33:10"
															},
															"nodeType": "YulIf",
															"src": "1964:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2026:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2055:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2036:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2036:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2026:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2074:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2107:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2118:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2103:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2103:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2084:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2084:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2074:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2131:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2162:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2173:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2158:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2158:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2145:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2145:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2135:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2186:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2196:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2190:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2241:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2250:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2253:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2243:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2243:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2243:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2229:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2237:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2226:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2226:14:10"
															},
															"nodeType": "YulIf",
															"src": "2223:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2266:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2309:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2320:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2305:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2305:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2329:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2276:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2276:61:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2266:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2346:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2362:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2362:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2350:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2423:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2432:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2435:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2425:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2425:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2425:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2409:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2419:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2406:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2406:16:10"
															},
															"nodeType": "YulIf",
															"src": "2403:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2448:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2491:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2502:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2487:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2487:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2513:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2458:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2458:63:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2448:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2563:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2574:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2559:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2559:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2546:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2546:33:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "2534:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2608:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2617:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2620:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2610:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2610:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2610:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "2594:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2604:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2591:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2591:16:10"
															},
															"nodeType": "YulIf",
															"src": "2588:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2633:61:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2664:9:10"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "2675:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2660:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2660:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2686:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2643:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2643:51:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2633:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1888:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1899:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1911:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1919:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1927:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1935:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1943:6:10",
														"type": ""
													}
												],
												"src": "1757:943:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2852:459:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2899:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2908:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2901:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2901:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2901:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2873:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2882:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2869:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2869:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2894:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2865:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:33:10"
															},
															"nodeType": "YulIf",
															"src": "2862:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2924:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2953:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2934:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2934:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2924:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2972:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3005:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3016:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3001:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3001:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2982:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2982:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2972:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3029:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3056:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3067:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3052:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3052:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3039:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3039:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3029:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3080:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3107:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3118:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3103:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3103:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3090:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3090:32:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3080:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3131:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3162:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3173:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3158:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3158:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3145:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3145:33:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3135:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3221:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3230:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3233:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3223:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3223:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3193:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3201:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3190:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:30:10"
															},
															"nodeType": "YulIf",
															"src": "3187:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3246:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3277:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3288:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3273:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3273:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3297:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3256:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3256:49:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3246:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2786:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2797:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2809:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2817:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2825:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2833:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2841:6:10",
														"type": ""
													}
												],
												"src": "2705:606:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3400:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3446:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3458:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3448:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3448:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3448:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3421:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3430:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3417:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3442:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3413:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3413:32:10"
															},
															"nodeType": "YulIf",
															"src": "3410:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3471:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3500:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3481:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3481:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3471:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3519:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3549:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3560:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3545:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3545:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3532:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3532:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3523:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3617:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3626:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3629:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3619:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3619:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3619:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3586:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3607:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3600:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3600:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3593:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3593:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3583:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3583:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3576:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3576:40:10"
															},
															"nodeType": "YulIf",
															"src": "3573:60:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3642:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3652:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3642:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3358:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3369:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3381:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3389:6:10",
														"type": ""
													}
												],
												"src": "3316:347:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3755:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3801:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3810:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3813:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3803:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3803:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3803:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3776:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3785:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3772:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3772:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3797:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3768:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3768:32:10"
															},
															"nodeType": "YulIf",
															"src": "3765:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3826:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3855:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3836:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3836:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3826:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3874:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3901:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3912:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3897:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3897:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3884:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3884:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3874:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3713:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3724:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3736:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3744:6:10",
														"type": ""
													}
												],
												"src": "3668:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4064:1082:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4110:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4119:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4122:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4112:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4112:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4112:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4085:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4094:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4081:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4081:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4106:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4077:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4077:32:10"
															},
															"nodeType": "YulIf",
															"src": "4074:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4135:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4162:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4149:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4149:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4139:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4181:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4191:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4185:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4236:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4245:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4248:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4238:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4238:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4238:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4224:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4232:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4221:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4221:14:10"
															},
															"nodeType": "YulIf",
															"src": "4218:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4261:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4275:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4286:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4271:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4271:22:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4265:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4341:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4350:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4353:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4343:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4343:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4343:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4320:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4324:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4316:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4316:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4331:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4312:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4312:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4305:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4305:35:10"
															},
															"nodeType": "YulIf",
															"src": "4302:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4366:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4389:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4376:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4376:16:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4370:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4401:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4411:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4405:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4424:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4474:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4434:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4434:43:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "4428:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4486:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4506:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4500:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4490:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4538:6:10"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "4546:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "4518:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4518:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4518:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4558:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4569:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4562:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4591:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4599:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4584:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4584:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4584:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4611:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4622:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4630:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4618:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4618:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4611:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4657:2:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4661:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4653:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4653:11:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4646:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4718:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4727:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4730:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4720:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4720:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4720:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4687:2:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4695:1:10",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "4698:2:10"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4691:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4691:10:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4683:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4683:19:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4704:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4679:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4679:28:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4709:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4676:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4676:41:10"
															},
															"nodeType": "YulIf",
															"src": "4673:61:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4743:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4752:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4747:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4807:124:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4828:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "4852:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "4833:18:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4833:23:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4821:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4821:36:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4821:36:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4870:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4881:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "4886:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4877:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4877:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4870:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4902:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4913:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "4918:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4909:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4909:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4902:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4773:1:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4776:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4770:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4770:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4780:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4782:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4791:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4794:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4787:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4787:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4782:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4766:3:10",
																"statements": []
															},
															"src": "4762:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4940:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4950:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4940:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4965:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4998:9:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5009:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4994:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4994:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4981:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4981:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4969:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5042:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5051:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5054:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5044:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5044:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5044:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5028:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5038:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5025:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5025:16:10"
															},
															"nodeType": "YulIf",
															"src": "5022:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5067:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5110:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5121:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5106:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5106:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5132:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5077:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5077:63:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5067:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4022:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4033:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4045:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4053:6:10",
														"type": ""
													}
												],
												"src": "3927:1219:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5220:176:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5266:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5275:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5278:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5268:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5268:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5268:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5241:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5250:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5237:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5237:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5262:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5233:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5233:32:10"
															},
															"nodeType": "YulIf",
															"src": "5230:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5291:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5317:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5304:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5304:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5295:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5360:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "5336:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5336:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5336:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5375:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5385:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5375:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5186:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5197:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5209:6:10",
														"type": ""
													}
												],
												"src": "5151:245:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5481:169:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5527:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5536:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5539:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5529:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5529:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5529:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5502:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5511:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5498:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5498:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5523:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5494:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5494:32:10"
															},
															"nodeType": "YulIf",
															"src": "5491:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5552:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5571:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5565:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5565:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5556:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5614:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "5590:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5590:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5590:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5629:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5639:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5629:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5447:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5458:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5470:6:10",
														"type": ""
													}
												],
												"src": "5401:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5725:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5771:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5780:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5783:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5773:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5773:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5773:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5746:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5755:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5742:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5742:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5767:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5738:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5738:32:10"
															},
															"nodeType": "YulIf",
															"src": "5735:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5796:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5819:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5806:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5806:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5796:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5691:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5702:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5714:6:10",
														"type": ""
													}
												],
												"src": "5655:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5901:374:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5911:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5931:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5925:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5915:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5953:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5958:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5946:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5946:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5974:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5984:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5978:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5997:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6008:3:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6013:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6004:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6004:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5997:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6025:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6043:5:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6050:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6039:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6039:14:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6029:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6062:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6071:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6066:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6130:120:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6151:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6162:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6156:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6156:13:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6144:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6144:26:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6144:26:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6183:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6194:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6199:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6190:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6190:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6183:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6215:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6229:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6237:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6225:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6225:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6215:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6092:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6095:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6089:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6089:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6103:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6105:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6114:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6117:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6110:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6110:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6105:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6085:3:10",
																"statements": []
															},
															"src": "6081:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6259:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6266:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6259:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5878:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5885:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5893:3:10",
														"type": ""
													}
												],
												"src": "5840:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6329:208:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6339:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6359:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6353:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6353:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6343:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6381:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6386:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6374:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6374:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6374:19:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6428:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6435:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6424:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6424:16:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6446:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6451:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6442:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6442:14:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6458:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6402:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6402:63:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6402:63:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6474:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6489:3:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "6502:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6510:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6498:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6498:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6519:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6515:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6515:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6494:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6494:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6485:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6485:39:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6526:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6481:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6481:50:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6474:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6306:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6313:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6321:3:10",
														"type": ""
													}
												],
												"src": "6280:257:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6592:135:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6602:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6622:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6616:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6616:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6606:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6663:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6670:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6659:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6659:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6677:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6682:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6637:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6637:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6637:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6698:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6709:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6714:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6705:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6705:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6698:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6569:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6576:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6584:3:10",
														"type": ""
													}
												],
												"src": "6542:185:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6782:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6799:3:10"
																	},
																	{
																		"hexValue": "2e6a736f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6804:7:10",
																		"type": "",
																		"value": ".json"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6792:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6792:20:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6792:20:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6821:18:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6832:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6837:1:10",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6828:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6828:11:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6821:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_stringliteral",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6766:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6774:3:10",
														"type": ""
													}
												],
												"src": "6732:113:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7135:1016:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7145:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7156:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "ret",
																	"nodeType": "YulTypedName",
																	"src": "7149:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7166:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7189:6:10"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "7183:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7183:13:10"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "7170:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7205:17:10",
															"value": {
																"name": "ret",
																"nodeType": "YulIdentifier",
																"src": "7219:3:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7209:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7231:11:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7241:1:10",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7235:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7251:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7265:2:10"
																	},
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "7269:9:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7261:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7261:18:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7251:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7288:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "7318:9:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7329:2:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7314:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7314:18:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7292:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7371:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7373:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7387:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7395:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7383:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7383:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7373:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7351:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7344:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7344:26:10"
															},
															"nodeType": "YulIf",
															"src": "7341:61:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7411:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7421:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "7415:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7482:115:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "7503:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7512:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7517:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7508:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7508:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7496:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7496:33:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7496:33:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7549:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7552:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7542:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7542:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7542:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "7577:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7582:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7570:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7570:17:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7570:17:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7438:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7461:6:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "7469:2:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7458:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7458:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7435:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7435:38:10"
															},
															"nodeType": "YulIf",
															"src": "7432:165:10"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7647:97:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "7668:3:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "7677:9:10"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "7692:3:10",
																											"type": "",
																											"value": "255"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "7688:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7688:8:10"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "7673:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7673:24:10"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "7661:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7661:37:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7661:37:10"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "7711:23:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "7722:3:10"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "7727:6:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7718:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7718:16:10"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "7711:3:10"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7640:104:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7645:1:10",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7760:313:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7774:52:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "value0",
																							"nodeType": "YulIdentifier",
																							"src": "7819:6:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7789:29:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7789:37:10"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "7778:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7839:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7848:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7843:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7916:111:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nodeType": "YulIdentifier",
																												"src": "7945:3:10"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "7950:1:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "7941:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7941:11:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "7960:7:10"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "7954:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7954:14:10"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "7934:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7934:35:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7934:35:10"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7986:27:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "8001:7:10"
																									},
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "8010:2:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7997:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7997:16:10"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "7986:7:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7873:1:10"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "7876:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7870:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7870:13:10"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7884:19:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7886:15:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7895:1:10"
																									},
																									{
																										"name": "_2",
																										"nodeType": "YulIdentifier",
																										"src": "7898:2:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7891:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7891:10:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7886:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7866:3:10",
																					"statements": []
																				},
																				"src": "7862:165:10"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "8040:23:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "8051:3:10"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "8056:6:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8047:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8047:16:10"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "8040:3:10"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7753:320:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7758:1:10",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"name": "outOfPlaceEncoding",
																"nodeType": "YulIdentifier",
																"src": "7613:18:10"
															},
															"nodeType": "YulSwitch",
															"src": "7606:467:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8082:63:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8132:6:10"
																			},
																			{
																				"name": "ret",
																				"nodeType": "YulIdentifier",
																				"src": "8140:3:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_string",
																			"nodeType": "YulIdentifier",
																			"src": "8114:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8114:30:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_stringliteral",
																	"nodeType": "YulIdentifier",
																	"src": "8089:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8089:56:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8082:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7103:3:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7108:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7116:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7127:3:10",
														"type": ""
													}
												],
												"src": "6850:1301:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8487:495:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8497:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8515:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8520:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8511:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8511:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8524:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8507:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8507:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8501:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8542:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8557:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8565:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8553:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8553:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8535:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8535:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8535:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8589:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8600:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8585:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8585:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8609:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8617:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8605:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8605:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8578:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8578:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8578:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8641:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8652:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8637:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8637:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8657:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8630:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8630:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8630:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8670:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8713:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8725:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8736:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8721:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8721:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8684:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8684:57:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "8674:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8761:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8772:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8757:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8757:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "8781:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8789:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8777:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8777:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8750:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8750:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8750:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8809:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8852:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "8860:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8823:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8823:44:10"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "8813:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8887:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8898:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8883:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8883:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "8908:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8916:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8904:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8904:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8876:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8876:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8876:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8936:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8961:6:10"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "8969:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8944:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8944:32:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8936:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8424:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8435:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8443:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8451:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8459:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8467:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8478:4:10",
														"type": ""
													}
												],
												"src": "8156:826:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9218:329:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9228:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9246:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9251:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9242:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9242:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9255:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9238:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9238:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9232:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9273:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9288:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9296:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9284:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9284:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9266:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9266:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9266:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9320:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9331:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9316:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9316:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9340:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9348:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9336:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9336:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9309:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9309:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9309:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9372:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9383:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9368:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9368:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9388:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9361:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9361:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9361:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9415:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9426:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9411:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9411:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9431:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9404:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9404:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9404:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9458:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9469:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9454:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9454:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9475:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9447:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9447:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9447:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9488:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "9513:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9525:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9536:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9521:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9521:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "9496:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9496:45:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9488:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9155:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9166:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9174:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9182:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9190:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9198:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9209:4:10",
														"type": ""
													}
												],
												"src": "8987:560:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9703:110:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9720:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9731:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9713:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9713:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9713:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9743:64:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9780:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9792:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9803:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9788:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9788:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "9751:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9751:56:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9743:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9672:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9683:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9694:4:10",
														"type": ""
													}
												],
												"src": "9552:261:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10047:236:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10064:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10075:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10057:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10057:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10057:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10087:70:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10130:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10142:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10153:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10138:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10138:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10101:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10101:56:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "10091:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10177:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10188:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10173:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10173:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "10197:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10205:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10193:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10193:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10166:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10166:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10166:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10225:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10262:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "10270:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10233:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10233:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10225:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10008:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10019:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10027:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10038:4:10",
														"type": ""
													}
												],
												"src": "9818:465:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10383:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10393:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10405:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10416:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10401:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10401:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10393:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10435:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10460:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10453:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10453:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10446:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10446:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10428:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10428:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10428:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10352:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10363:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10374:4:10",
														"type": ""
													}
												],
												"src": "10288:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10601:98:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10618:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10629:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10611:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10611:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10611:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10641:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10666:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10678:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10689:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10674:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10674:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "10649:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10649:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10641:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10570:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10581:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10592:4:10",
														"type": ""
													}
												],
												"src": "10480:219:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10878:242:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10895:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10906:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10888:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10888:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10888:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10929:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10940:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10925:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10925:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10945:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10918:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10918:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10918:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10968:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10979:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10964:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10964:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10984:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10957:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10957:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10957:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11039:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11050:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11035:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11035:18:10"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11055:22:10",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11028:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11028:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11028:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11087:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11099:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11110:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11095:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11095:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11087:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10855:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10869:4:10",
														"type": ""
													}
												],
												"src": "10704:416:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11299:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11316:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11327:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11309:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11309:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11309:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11350:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11361:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11346:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11346:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11366:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11339:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11339:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11339:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11389:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11400:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11385:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11385:18:10"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11405:34:10",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11378:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11378:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11378:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11460:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11471:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11456:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11456:18:10"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11476:10:10",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11449:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11449:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11449:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11496:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11508:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11519:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11504:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11504:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11496:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11276:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11290:4:10",
														"type": ""
													}
												],
												"src": "11125:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11708:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11725:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11736:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11718:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11718:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11718:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11759:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11770:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11755:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11755:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11775:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11748:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11748:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11748:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11798:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11809:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11794:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11794:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11814:34:10",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11787:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11787:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11787:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11869:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11880:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11865:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11865:18:10"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11885:11:10",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11858:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11858:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11858:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11906:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11918:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11929:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11914:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11914:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11906:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11685:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11699:4:10",
														"type": ""
													}
												],
												"src": "11534:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12118:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12135:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12146:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12128:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12128:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12128:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12169:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12180:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12165:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12165:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12185:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12158:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12158:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12158:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12208:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12219:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12204:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12204:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12224:34:10",
																		"type": "",
																		"value": "ERC1155: address zero is not a v"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12197:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12197:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12197:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12279:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12290:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12275:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12275:18:10"
																	},
																	{
																		"hexValue": "616c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12295:12:10",
																		"type": "",
																		"value": "alid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12268:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12268:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12268:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12317:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12329:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12340:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12325:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12325:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12317:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12095:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12109:4:10",
														"type": ""
													}
												],
												"src": "11944:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12529:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12546:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12557:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12539:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12539:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12539:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12580:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12591:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12576:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12576:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12596:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12569:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12569:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12569:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12619:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12630:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12615:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12615:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12635:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12608:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12608:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12608:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12690:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12701:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12686:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12686:18:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12706:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12679:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12679:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12679:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12723:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12735:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12746:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12731:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12731:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12723:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12506:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12520:4:10",
														"type": ""
													}
												],
												"src": "12355:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12935:240:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12952:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12963:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12945:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12945:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12945:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12986:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12997:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12982:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12982:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13002:2:10",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12975:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12975:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12975:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13025:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13036:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13021:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13021:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13041:34:10",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13014:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13014:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13014:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13096:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13107:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13092:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13092:18:10"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13112:20:10",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13085:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13085:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13085:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13142:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13154:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13165:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13150:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13150:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13142:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12912:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12926:4:10",
														"type": ""
													}
												],
												"src": "12761:414:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13354:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13371:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13382:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13364:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13364:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13364:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13405:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13416:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13401:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13401:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13421:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13394:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13394:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13394:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13444:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13455:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13440:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13440:18:10"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13460:34:10",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13433:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13433:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13433:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13515:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13526:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13511:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13511:18:10"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13531:12:10",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13504:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13504:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13504:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13553:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13565:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13576:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13561:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13561:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13553:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13331:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13345:4:10",
														"type": ""
													}
												],
												"src": "13180:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13765:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13782:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13793:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13775:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13775:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13775:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13816:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13827:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13812:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13812:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13832:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13805:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13805:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13805:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13855:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13866:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13851:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13851:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13871:34:10",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13844:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13844:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13844:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13926:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13937:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13922:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13922:18:10"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13942:11:10",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13915:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13915:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13915:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13963:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13975:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13986:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13971:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13971:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13963:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13742:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13756:4:10",
														"type": ""
													}
												],
												"src": "13591:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14175:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14192:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14203:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14185:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14185:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14185:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14226:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14237:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14222:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14222:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14242:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14215:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14215:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14215:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14265:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14276:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14261:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14261:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14281:34:10",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14254:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14254:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14254:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14336:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14347:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14332:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14332:18:10"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14352:11:10",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14325:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14325:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14325:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14373:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14385:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14396:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14381:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14381:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14373:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14152:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14166:4:10",
														"type": ""
													}
												],
												"src": "14001:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14585:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14602:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14613:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14595:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14595:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14595:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14636:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14647:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14632:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14632:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14652:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14625:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14625:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14625:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14675:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14686:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14671:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14671:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14691:34:10",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14664:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14664:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14664:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14746:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14757:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14742:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14742:18:10"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14762:10:10",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14735:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14735:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14735:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14782:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14794:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14805:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14790:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14790:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14782:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14562:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14576:4:10",
														"type": ""
													}
												],
												"src": "14411:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14921:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14931:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14943:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14954:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14939:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14939:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14931:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14973:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14984:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14966:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14966:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14966:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14890:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14901:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14912:4:10",
														"type": ""
													}
												],
												"src": "14820:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15131:119:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15141:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15153:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15164:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15149:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15149:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15141:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15183:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15194:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15176:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15176:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15176:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15221:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15232:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15217:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15217:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15237:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15210:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15210:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15210:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15092:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15103:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15111:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15122:4:10",
														"type": ""
													}
												],
												"src": "15002:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15324:114:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15368:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "15370:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15370:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15370:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15340:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15348:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15337:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15337:30:10"
															},
															"nodeType": "YulIf",
															"src": "15334:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15399:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15415:1:10",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15418:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15411:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15411:14:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15427:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15407:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15407:25:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "15399:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15304:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "15315:4:10",
														"type": ""
													}
												],
												"src": "15255:183:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15499:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15516:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "15519:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15509:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15509:14:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15509:14:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15532:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15550:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15553:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "15540:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15540:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "15532:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "15482:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "15490:4:10",
														"type": ""
													}
												],
												"src": "15443:121:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15617:80:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15644:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15646:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15646:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15646:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15633:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "15640:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15636:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15636:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15630:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15630:13:10"
															},
															"nodeType": "YulIf",
															"src": "15627:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15675:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15686:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15689:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15682:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15682:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "15675:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15600:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15603:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "15609:3:10",
														"type": ""
													}
												],
												"src": "15569:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15748:74:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15771:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "15773:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15773:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15773:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15768:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15761:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15761:9:10"
															},
															"nodeType": "YulIf",
															"src": "15758:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15802:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15811:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15814:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "15807:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15807:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "15802:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15733:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15736:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15742:1:10",
														"type": ""
													}
												],
												"src": "15702:120:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15876:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15898:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15900:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15900:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15900:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15892:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15895:1:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15889:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15889:8:10"
															},
															"nodeType": "YulIf",
															"src": "15886:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15929:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15941:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15944:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15937:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15937:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "15929:4:10"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15858:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15861:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "15867:4:10",
														"type": ""
													}
												],
												"src": "15827:125:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16010:205:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16020:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16029:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "16024:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16089:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "16114:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "16119:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "16110:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16110:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "16133:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "16138:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "16129:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "16129:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "16123:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16123:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16103:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16103:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16103:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "16050:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16053:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "16047:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16047:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "16061:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16063:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "16072:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16075:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "16068:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16068:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "16063:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "16043:3:10",
																"statements": []
															},
															"src": "16039:113:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16178:31:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "16191:3:10"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "16196:6:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "16187:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16187:16:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16205:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16180:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16180:27:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16180:27:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "16167:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16170:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16164:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16164:13:10"
															},
															"nodeType": "YulIf",
															"src": "16161:48:10"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "15988:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "15993:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15998:6:10",
														"type": ""
													}
												],
												"src": "15957:258:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16267:202:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16277:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "16299:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "16315:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16321:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16311:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16311:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16330:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "16326:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16326:7:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16307:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16307:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16295:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16295:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "16281:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16410:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "16412:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16412:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16412:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "16353:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16365:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16350:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16350:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "16389:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16401:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "16386:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16386:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "16347:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16347:62:10"
															},
															"nodeType": "YulIf",
															"src": "16344:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16448:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "16452:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16441:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16441:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16441:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16249:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "16257:4:10",
														"type": ""
													}
												],
												"src": "16220:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16521:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16552:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16554:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16554:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16554:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16537:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16548:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16544:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16544:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "16534:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16534:17:10"
															},
															"nodeType": "YulIf",
															"src": "16531:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16583:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16594:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16601:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16590:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16590:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16583:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16503:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16513:3:10",
														"type": ""
													}
												],
												"src": "16474:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16652:74:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16675:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "16677:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16677:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16677:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16672:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16665:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16665:9:10"
															},
															"nodeType": "YulIf",
															"src": "16662:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16706:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16715:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16718:1:10"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "16711:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16711:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "16706:1:10"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16637:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16640:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "16646:1:10",
														"type": ""
													}
												],
												"src": "16614:112:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16763:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16780:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16787:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16792:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16783:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16783:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16773:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16773:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16773:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16820:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16823:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16813:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16813:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16813:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16844:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16847:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16837:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16837:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16837:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "16731:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16895:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16912:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16919:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16924:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16915:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16915:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16905:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16905:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16905:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16952:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16955:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16945:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16945:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16945:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16976:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16979:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16969:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16969:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16969:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "16863:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17027:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17044:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17051:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17056:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "17047:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17047:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17037:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17037:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17037:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17084:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17087:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17077:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17077:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17077:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17108:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17111:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17101:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17101:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17101:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "16995:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17159:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17176:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17183:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17188:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "17179:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17179:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17169:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17169:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17169:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17216:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17219:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17209:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17209:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17209:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17240:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17243:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17233:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17233:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17233:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "17127:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17302:136:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17347:85:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17376:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17379:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17382:1:10",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "17361:14:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17361:23:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17361:23:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "17397:25:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17408:3:10",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17419:1:10",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "17413:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17413:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "17404:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17404:18:10"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "17397:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "17318:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17318:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17336:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17315:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17315:23:10"
															},
															"nodeType": "YulIf",
															"src": "17312:120:10"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "17294:3:10",
														"type": ""
													}
												],
												"src": "17259:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17490:624:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17530:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "17532:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "17506:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17506:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17524:4:10",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "17503:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17503:26:10"
															},
															"nodeType": "YulIf",
															"src": "17500:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17548:21:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17566:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17560:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17560:9:10"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "17552:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17578:16:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17592:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "17588:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17588:6:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "17582:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17618:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17624:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "17631:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17631:16:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "17649:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17627:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17627:25:10"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "17603:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17603:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17603:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17662:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17682:4:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17676:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17676:11:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "17666:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17696:26:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "17706:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17706:16:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "17700:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17731:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "17741:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "17735:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17817:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "17819:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "17777:6:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "17785:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "17774:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17774:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17797:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17805:4:10",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17793:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17793:17:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "17812:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "17790:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17790:25:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "17771:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17771:45:10"
															},
															"nodeType": "YulIf",
															"src": "17768:58:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17835:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17850:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "17856:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17846:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17846:17:10"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "17839:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17872:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "17892:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17886:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17886:10:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "17876:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17923:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "17925:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17911:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "17919:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17908:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17908:14:10"
															},
															"nodeType": "YulIf",
															"src": "17905:27:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18014:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "18016:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "17955:3:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "17960:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17951:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17951:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17969:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17947:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17947:27:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "17984:4:10"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "17990:14:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17990:16:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17980:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17980:27:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "18009:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17976:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17976:36:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17944:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17944:69:10"
															},
															"nodeType": "YulIf",
															"src": "17941:82:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18052:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18066:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "18074:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18062:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18062:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18083:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18058:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18058:30:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "18032:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18032:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18032:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18098:10:10",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "18105:3:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "18098:3:10"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "17482:3:10",
														"type": ""
													}
												],
												"src": "17443:671:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18163:87:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18228:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18237:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18240:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18230:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18230:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18230:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18186:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18197:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "18208:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "18213:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "18204:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18204:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "18193:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18193:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18183:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18183:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18176:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18176:51:10"
															},
															"nodeType": "YulIf",
															"src": "18173:71:10"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18152:5:10",
														"type": ""
													}
												],
												"src": "18119:131:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_address_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_address_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let src := add(_2, _4)\n        if gt(add(add(_2, shl(5, _3)), _4), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n            src := add(src, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_stringliteral(pos) -> end\n    {\n        mstore(pos, \".json\")\n        end := add(pos, 5)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := ret\n        let _1 := 1\n        length := shr(_1, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        let _2 := 32\n        if eq(outOfPlaceEncoding, lt(length, _2))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(ret, 0x24)\n        }\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, length)\n        }\n        case 1 {\n            let dataPos := array_dataslot_string_storage(value0)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        end := abi_encode_stringliteral(abi_encode_string(value1, ret))\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value4, tail_2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_bytes(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: address zero is not a v\")\n        mstore(add(headStart, 96), \"alid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610efe565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610ff9565b610225565b60405190151581526020016100a9565b6100e86100e3366004611033565b610277565b6040516100a99190611265565b610108610103366004610db3565b6102ab565b005b61011d610118366004610f28565b610342565b6040516100a9919061122d565b610108610138366004610ec2565b61046c565b6100c561014b366004610d80565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004610e5d565b61047b565b60006001600160a01b0383166101fc5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b6000828152602081815260408083206001600160a01b03871684529091529020545b9392505050565b60006001600160e01b03198216636cdb3d1360e11b148061025657506001600160e01b031982166303a24d0760e21b145b8061027157506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600261028483610502565b6040516020016102959291906110cf565b6040516020818303038152906040529050919050565b6001600160a01b0385163314806102c757506102c7853361014b565b61032e5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f3565b61033b8585858585610608565b5050505050565b606081518351146103a75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f3565b6000835167ffffffffffffffff8111156103c3576103c3611484565b6040519080825280602002602001820160405280156103ec578160200160208202803683370190505b50905060005b8451811015610464576104378582815181106104105761041061146e565b602002602001015185838151811061042a5761042a61146e565b602002602001015161018c565b8282815181106104495761044961146e565b602090810291909101015261045d81611413565b90506103f2565b509392505050565b6104773383836107e5565b5050565b6001600160a01b0385163314806104975750610497853361014b565b6104f55760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f3565b61033b85858585856108c6565b6060816105265750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610550578061053a81611413565b91506105499050600a8361138b565b915061052a565b60008167ffffffffffffffff81111561056b5761056b611484565b6040519080825280601f01601f191660200182016040528015610595576020820181803683370190505b5090505b8415610600576105aa60018361139f565b91506105b7600a8661142e565b6105c2906030611373565b60f81b8183815181106105d7576105d761146e565b60200101906001600160f81b031916908160001a9053506105f9600a8661138b565b9450610599565b949350505050565b815183511461066a5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f3565b6001600160a01b0384166106905760405162461bcd60e51b81526004016101f3906112c0565b3360005b84518110156107775760008582815181106106b1576106b161146e565b6020026020010151905060008583815181106106cf576106cf61146e565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561071f5760405162461bcd60e51b81526004016101f390611305565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061075c908490611373565b925050819055505050508061077090611413565b9050610694565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516107c7929190611240565b60405180910390a46107dd8187878787876109f0565b505050505050565b816001600160a01b0316836001600160a01b031614156108595760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f3565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108ec5760405162461bcd60e51b81526004016101f3906112c0565b3360006108f885610b64565b9050600061090585610b64565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156109485760405162461bcd60e51b81526004016101f390611305565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610985908490611373565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46109e5848a8a8a8a8a610baf565b505050505050505050565b6001600160a01b0384163b156107dd5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610a34908990899088908890889060040161118a565b602060405180830381600087803b158015610a4e57600080fd5b505af1925050508015610a7e575060408051601f3d908101601f19168201909252610a7b91810190611016565b60015b610b2b57610a8a61149a565b806308c379a01415610ac45750610a9f6114b6565b80610aaa5750610ac6565b8060405162461bcd60e51b81526004016101f39190611265565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f3565b6001600160e01b0319811663bc197c8160e01b14610b5b5760405162461bcd60e51b81526004016101f390611278565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610b9e57610b9e61146e565b602090810291909101015292915050565b6001600160a01b0384163b156107dd5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610bf390899089908890889088906004016111e8565b602060405180830381600087803b158015610c0d57600080fd5b505af1925050508015610c3d575060408051601f3d908101601f19168201909252610c3a91810190611016565b60015b610c4957610a8a61149a565b6001600160e01b0319811663f23a6e6160e01b14610b5b5760405162461bcd60e51b81526004016101f390611278565b80356001600160a01b0381168114610c9057600080fd5b919050565b600082601f830112610ca657600080fd5b81356020610cb38261134f565b604051610cc082826113e6565b8381528281019150858301600585901b87018401881015610ce057600080fd5b60005b85811015610cff57813584529284019290840190600101610ce3565b5090979650505050505050565b600082601f830112610d1d57600080fd5b813567ffffffffffffffff811115610d3757610d37611484565b604051610d4e601f8301601f1916602001826113e6565b818152846020838601011115610d6357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610d9357600080fd5b610d9c83610c79565b9150610daa60208401610c79565b90509250929050565b600080600080600060a08688031215610dcb57600080fd5b610dd486610c79565b9450610de260208701610c79565b9350604086013567ffffffffffffffff80821115610dff57600080fd5b610e0b89838a01610c95565b94506060880135915080821115610e2157600080fd5b610e2d89838a01610c95565b93506080880135915080821115610e4357600080fd5b50610e5088828901610d0c565b9150509295509295909350565b600080600080600060a08688031215610e7557600080fd5b610e7e86610c79565b9450610e8c60208701610c79565b93506040860135925060608601359150608086013567ffffffffffffffff811115610eb657600080fd5b610e5088828901610d0c565b60008060408385031215610ed557600080fd5b610ede83610c79565b915060208301358015158114610ef357600080fd5b809150509250929050565b60008060408385031215610f1157600080fd5b610f1a83610c79565b946020939093013593505050565b60008060408385031215610f3b57600080fd5b823567ffffffffffffffff80821115610f5357600080fd5b818501915085601f830112610f6757600080fd5b81356020610f748261134f565b604051610f8182826113e6565b8381528281019150858301600585901b870184018b1015610fa157600080fd5b600096505b84871015610fcb57610fb781610c79565b835260019690960195918301918301610fa6565b5096505086013592505080821115610fe257600080fd5b50610fef85828601610c95565b9150509250929050565b60006020828403121561100b57600080fd5b813561021e81611540565b60006020828403121561102857600080fd5b815161021e81611540565b60006020828403121561104557600080fd5b5035919050565b600081518084526020808501945080840160005b8381101561107c57815187529582019590820190600101611060565b509495945050505050565b6000815180845261109f8160208601602086016113b6565b601f01601f19169290920160200192915050565b600081516110c58185602086016113b6565b9290920192915050565b600080845481600182811c9150808316806110eb57607f831692505b602080841082141561110b57634e487b7160e01b86526022600452602486fd5b81801561111f57600181146111305761115d565b60ff1986168952848901965061115d565b60008b81526020902060005b868110156111555781548b82015290850190830161113c565b505084890196505b50505050505061118161117082866110b3565b64173539b7b760d91b815260050190565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190526000906111b69083018661104c565b82810360608401526111c8818661104c565b905082810360808401526111dc8185611087565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061122290830184611087565b979650505050505050565b60208152600061021e602083018461104c565b604081526000611253604083018561104c565b8281036020840152611181818561104c565b60208152600061021e6020830184611087565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600067ffffffffffffffff82111561136957611369611484565b5060051b60200190565b6000821982111561138657611386611442565b500190565b60008261139a5761139a611458565b500490565b6000828210156113b1576113b1611442565b500390565b60005b838110156113d15781810151838201526020016113b9565b838111156113e0576000848401525b50505050565b601f8201601f1916810167ffffffffffffffff8111828210171561140c5761140c611484565b6040525050565b600060001982141561142757611427611442565b5060010190565b60008261143d5761143d611458565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d11156114b35760046000803e5060005160e01c5b90565b600060443d10156114c45790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156114f457505050505090565b828501915081518181111561150c5750505050505090565b843d87010160208285010111156115265750505050505090565b611535602082860101876113e6565b509095945050505050565b6001600160e01b03198116811461155657600080fd5b5056fea2646970667358221220c061520077c81de3d091dfd0a7a50a043b840232facc27c811879bf168a3213864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xEFE JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x1265 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x2AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xF28 JUMP JUMPDEST PUSH2 0x342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x46C JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0x47B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x256 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x271 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH2 0x284 DUP4 PUSH2 0x502 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x295 SWAP3 SWAP2 SWAP1 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x2C7 JUMPI POP PUSH2 0x2C7 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x32E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x33B DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x608 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C3 JUMPI PUSH2 0x3C3 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3EC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x464 JUMPI PUSH2 0x437 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x410 JUMPI PUSH2 0x410 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x42A JUMPI PUSH2 0x42A PUSH2 0x146E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x449 JUMPI PUSH2 0x449 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x45D DUP2 PUSH2 0x1413 JUMP JUMPDEST SWAP1 POP PUSH2 0x3F2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x477 CALLER DUP4 DUP4 PUSH2 0x7E5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x497 JUMPI POP PUSH2 0x497 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x33B DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x526 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x550 JUMPI DUP1 PUSH2 0x53A DUP2 PUSH2 0x1413 JUMP JUMPDEST SWAP2 POP PUSH2 0x549 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x138B JUMP JUMPDEST SWAP2 POP PUSH2 0x52A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x56B JUMPI PUSH2 0x56B PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x600 JUMPI PUSH2 0x5AA PUSH1 0x1 DUP4 PUSH2 0x139F JUMP JUMPDEST SWAP2 POP PUSH2 0x5B7 PUSH1 0xA DUP7 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x5C2 SWAP1 PUSH1 0x30 PUSH2 0x1373 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5D7 JUMPI PUSH2 0x5D7 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x5F9 PUSH1 0xA DUP7 PUSH2 0x138B JUMP JUMPDEST SWAP5 POP PUSH2 0x599 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x66A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x690 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x777 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6B1 JUMPI PUSH2 0x6B1 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6CF JUMPI PUSH2 0x6CF PUSH2 0x146E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x71F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x75C SWAP1 DUP5 SWAP1 PUSH2 0x1373 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x770 SWAP1 PUSH2 0x1413 JUMP JUMPDEST SWAP1 POP PUSH2 0x694 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x7C7 SWAP3 SWAP2 SWAP1 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x7DD DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x9F0 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x859 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x8EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12C0 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x8F8 DUP6 PUSH2 0xB64 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x905 DUP6 PUSH2 0xB64 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x948 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x985 SWAP1 DUP5 SWAP1 PUSH2 0x1373 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x9E5 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xBAF JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x7DD JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xA34 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x118A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA7E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA7B SWAP2 DUP2 ADD SWAP1 PUSH2 0x1016 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB2B JUMPI PUSH2 0xA8A PUSH2 0x149A JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xAC4 JUMPI POP PUSH2 0xA9F PUSH2 0x14B6 JUMP JUMPDEST DUP1 PUSH2 0xAAA JUMPI POP PUSH2 0xAC6 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1265 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1278 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB9E JUMPI PUSH2 0xB9E PUSH2 0x146E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x7DD JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xBF3 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC3D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC3A SWAP2 DUP2 ADD SWAP1 PUSH2 0x1016 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC49 JUMPI PUSH2 0xA8A PUSH2 0x149A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1278 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xCB3 DUP3 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCC0 DUP3 DUP3 PUSH2 0x13E6 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0xCE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xCFF JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xCE3 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD37 JUMPI PUSH2 0xD37 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4E PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x13E6 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xD63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9C DUP4 PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP PUSH2 0xDAA PUSH1 0x20 DUP5 ADD PUSH2 0xC79 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xDCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD4 DUP7 PUSH2 0xC79 JUMP JUMPDEST SWAP5 POP PUSH2 0xDE2 PUSH1 0x20 DUP8 ADD PUSH2 0xC79 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0B DUP10 DUP4 DUP11 ADD PUSH2 0xC95 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2D DUP10 DUP4 DUP11 ADD PUSH2 0xC95 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE50 DUP9 DUP3 DUP10 ADD PUSH2 0xD0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7E DUP7 PUSH2 0xC79 JUMP JUMPDEST SWAP5 POP PUSH2 0xE8C PUSH1 0x20 DUP8 ADD PUSH2 0xC79 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE50 DUP9 DUP3 DUP10 ADD PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEDE DUP4 PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF1A DUP4 PUSH2 0xC79 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xF74 DUP3 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF81 DUP3 DUP3 PUSH2 0x13E6 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0xFA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0xFCB JUMPI PUSH2 0xFB7 DUP2 PUSH2 0xC79 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xFA6 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xFE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFEF DUP6 DUP3 DUP7 ADD PUSH2 0xC95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x100B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21E DUP2 PUSH2 0x1540 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1028 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x21E DUP2 PUSH2 0x1540 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1045 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x107C JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1060 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x109F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x10C5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13B6 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x10EB JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x110B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x111F JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1130 JUMPI PUSH2 0x115D JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x115D JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1155 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x113C JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP PUSH2 0x1181 PUSH2 0x1170 DUP3 DUP7 PUSH2 0x10B3 JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL DUP2 MSTORE PUSH1 0x5 ADD SWAP1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11B6 SWAP1 DUP4 ADD DUP7 PUSH2 0x104C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x11C8 DUP2 DUP7 PUSH2 0x104C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x11DC DUP2 DUP6 PUSH2 0x1087 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1222 SWAP1 DUP4 ADD DUP5 PUSH2 0x1087 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x21E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1253 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x104C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1181 DUP2 DUP6 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x21E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1087 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1369 JUMPI PUSH2 0x1369 PUSH2 0x1484 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1386 JUMPI PUSH2 0x1386 PUSH2 0x1442 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x139A JUMPI PUSH2 0x139A PUSH2 0x1458 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x13B1 JUMPI PUSH2 0x13B1 PUSH2 0x1442 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13D1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13B9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x13E0 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x140C JUMPI PUSH2 0x140C PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1427 JUMPI PUSH2 0x1427 PUSH2 0x1442 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x143D JUMPI PUSH2 0x143D PUSH2 0x1458 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x14B3 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x14C4 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x14F4 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x150C JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1526 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1535 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x13E6 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 PUSH2 0x5200 PUSH24 0xC81DE3D091DFD0A7A50A043B840232FACC27C811879BF168 LOG3 0x21 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "604:16843:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2363:228;;;;;;:::i;:::-;;:::i;:::-;;;14966:25:10;;;14954:2;14939:18;2363:228:0;;;;;;;;1270:305;;;;;;:::i;:::-;;:::i;:::-;;;10453:14:10;;10446:22;10428:41;;10416:2;10401:18;1270:305:0;10288:187:10;1974:247:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4386:430::-;;;;;;:::i;:::-;;:::i;:::-;;2888:516;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3472:153::-;;;;;;:::i;:::-;;:::i;3692:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3814:27:0;;;3791:4;3814:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3692:166;3925:389;;;;;;:::i;:::-;;:::i;2363:228::-;2449:7;-1:-1:-1;;;;;2476:21:0;;2468:76;;;;-1:-1:-1;;;2468:76:0;;12146:2:10;2468:76:0;;;12128:21:10;12185:2;12165:18;;;12158:30;12224:34;12204:18;;;12197:62;-1:-1:-1;;;12275:18:10;;;12268:40;12325:19;;2468:76:0;;;;;;;;;2676:7;2702:13;;;;;;;;;;;-1:-1:-1;;;;;2702:22:0;;;;;;;;;;2561:23;2554:30;2363:228;-1:-1:-1;;;2363:228:0:o;1270:305::-;1372:4;-1:-1:-1;;;;;;1407:41:0;;-1:-1:-1;;;1407:41:0;;:109;;-1:-1:-1;;;;;;;1464:52:0;;-1:-1:-1;;;1464:52:0;1407:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:8;;;1532:36:0;1388:180;1270:305;-1:-1:-1;;1270:305:0:o;1974:247::-;2037:13;2123:4;2145:20;2162:2;2145:16;:20::i;:::-;2089:115;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2062:152;;1974:247;;;:::o;4386:430::-;-1:-1:-1;;;;;4611:20:0;;719:10:6;4611:20:0;;:60;;-1:-1:-1;4635:36:0;4652:4;719:10:6;3692:166:0;:::i;4635:36::-;4590:157;;;;-1:-1:-1;;;4590:157:0;;12963:2:10;4590:157:0;;;12945:21:10;13002:2;12982:18;;;12975:30;13041:34;13021:18;;;13014:62;-1:-1:-1;;;13092:18:10;;;13085:48;13150:19;;4590:157:0;12761:414:10;4590:157:0;4757:52;4780:4;4786:2;4790:3;4795:7;4804:4;4757:22;:52::i;:::-;4386:430;;;;;:::o;2888:516::-;3039:16;3098:3;:10;3079:8;:15;:29;3071:83;;;;-1:-1:-1;;;3071:83:0;;14203:2:10;3071:83:0;;;14185:21:10;14242:2;14222:18;;;14215:30;14281:34;14261:18;;;14254:62;-1:-1:-1;;;14332:18:10;;;14325:39;14381:19;;3071:83:0;14001:405:10;3071:83:0;3173:30;3220:8;:15;3206:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3206:30:0;;3173:63;;3252:9;3247:120;3271:8;:15;3267:1;:19;3247:120;;;3326:30;3336:8;3345:1;3336:11;;;;;;;;:::i;:::-;;;;;;;3349:3;3353:1;3349:6;;;;;;;;:::i;:::-;;;;;;;3326:9;:30::i;:::-;3307:13;3321:1;3307:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;3288:3;;;:::i;:::-;;;3247:120;;;-1:-1:-1;3384:13:0;2888:516;-1:-1:-1;;;2888:516:0:o;3472:153::-;3566:52;719:10:6;3599:8:0;3609;3566:18;:52::i;:::-;3472:153;;:::o;3925:389::-;-1:-1:-1;;;;;4125:20:0;;719:10:6;4125:20:0;;:60;;-1:-1:-1;4149:36:0;4166:4;719:10:6;3692:166:0;:::i;4149:36::-;4104:148;;;;-1:-1:-1;;;4104:148:0;;11736:2:10;4104:148:0;;;11718:21:10;11775:2;11755:18;;;11748:30;11814:34;11794:18;;;11787:62;-1:-1:-1;;;11865:18:10;;;11858:39;11914:19;;4104:148:0;11534:405:10;4104:148:0;4262:45;4280:4;4286:2;4290;4294:6;4302:4;4262:17;:45::i;328:703:7:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:7;;;;;;;;;;;;-1:-1:-1;;;627:10:7;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:7;;-1:-1:-1;773:2:7;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:7;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:7;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:7;;;;;;;;-1:-1:-1;972:11:7;981:2;972:11;;:::i;:::-;;;844:150;;;1017:6;328:703;-1:-1:-1;;;;328:703:7:o;6560:1115:0:-;6780:7;:14;6766:3;:10;:28;6758:81;;;;-1:-1:-1;;;6758:81:0;;14613:2:10;6758:81:0;;;14595:21:10;14652:2;14632:18;;;14625:30;14691:34;14671:18;;;14664:62;-1:-1:-1;;;14742:18:10;;;14735:38;14790:19;;6758:81:0;14411:404:10;6758:81:0;-1:-1:-1;;;;;6857:16:0;;6849:66;;;;-1:-1:-1;;;6849:66:0;;;;;;;:::i;:::-;719:10:6;6926:16:0;7039:411;7063:3;:10;7059:1;:14;7039:411;;;7094:10;7107:3;7111:1;7107:6;;;;;;;;:::i;:::-;;;;;;;7094:19;;7127:14;7144:7;7152:1;7144:10;;;;;;;;:::i;:::-;;;;;;;;;;;;7169:19;7191:13;;;;;;;;;;-1:-1:-1;;;;;7191:19:0;;;;;;;;;;;;7144:10;;-1:-1:-1;7232:21:0;;;;7224:76;;;;-1:-1:-1;;;7224:76:0;;;;;;;:::i;:::-;7342:9;:13;;;;;;;;;;;-1:-1:-1;;;;;7342:19:0;;;;;;;;;;7364:20;;;7342:42;;7412:17;;;;;;;:27;;7364:20;;7342:9;7412:27;;7364:20;;7412:27;:::i;:::-;;;;;;;;7080:370;;;7075:3;;;;:::i;:::-;;;7039:411;;;;7495:2;-1:-1:-1;;;;;7465:47:0;7489:4;-1:-1:-1;;;;;7465:47:0;7479:8;-1:-1:-1;;;;;7465:47:0;;7499:3;7504:7;7465:47;;;;;;;:::i;:::-;;;;;;;;7593:75;7629:8;7639:4;7645:2;7649:3;7654:7;7663:4;7593:35;:75::i;:::-;6748:927;6560:1115;;;;;:::o;13100:323::-;13250:8;-1:-1:-1;;;;;13241:17:0;:5;-1:-1:-1;;;;;13241:17:0;;;13233:71;;;;-1:-1:-1;;;13233:71:0;;13793:2:10;13233:71:0;;;13775:21:10;13832:2;13812:18;;;13805:30;13871:34;13851:18;;;13844:62;-1:-1:-1;;;13922:18:10;;;13915:39;13971:19;;13233:71:0;13591:405:10;13233:71:0;-1:-1:-1;;;;;13314:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13314:46:0;;;;;;;;;;13375:41;;10428::10;;;13375::0;;10401:18:10;13375:41:0;;;;;;;13100:323;;;:::o;5267:947::-;-1:-1:-1;;;;;5448:16:0;;5440:66;;;;-1:-1:-1;;;5440:66:0;;;;;;;:::i;:::-;719:10:6;5517:16:0;5581:21;5599:2;5581:17;:21::i;:::-;5558:44;;5612:24;5639:25;5657:6;5639:17;:25::i;:::-;5612:52;;5746:19;5768:13;;;;;;;;;;;-1:-1:-1;;;;;5768:19:0;;;;;;;;;;5805:21;;;;5797:76;;;;-1:-1:-1;;;5797:76:0;;;;;;;:::i;:::-;5907:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5907:19:0;;;;;;;;;;5929:20;;;5907:42;;5969:17;;;;;;;:27;;5929:20;;5907:9;5969:27;;5929:20;;5969:27;:::i;:::-;;;;-1:-1:-1;;6012:46:0;;;15176:25:10;;;15232:2;15217:18;;15210:34;;;-1:-1:-1;;;;;6012:46:0;;;;;;;;;;;;;;15149:18:10;6012:46:0;;;;;;;6139:68;6170:8;6180:4;6186:2;6190;6194:6;6202:4;6139:30;:68::i;:::-;5430:784;;;;5267:947;;;;;:::o;16454:792::-;-1:-1:-1;;;;;16686:13:0;;1465:19:5;:23;16682:558:0;;16721:79;;-1:-1:-1;;;16721:79:0;;-1:-1:-1;;;;;16721:43:0;;;;;:79;;16765:8;;16775:4;;16781:3;;16786:7;;16795:4;;16721:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16721:79:0;;;;;;;;-1:-1:-1;;16721:79:0;;;;;;;;;;;;:::i;:::-;;;16717:513;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;17106:6;17099:14;;-1:-1:-1;;;17099:14:0;;;;;;;;:::i;16717:513::-;;;17153:62;;-1:-1:-1;;;17153:62:0;;10906:2:10;17153:62:0;;;10888:21:10;10945:2;10925:18;;;10918:30;10984:34;10964:18;;;10957:62;-1:-1:-1;;;11035:18:10;;;11028:50;11095:19;;17153:62:0;10704:416:10;16717:513:0;-1:-1:-1;;;;;;16879:60:0;;-1:-1:-1;;;16879:60:0;16875:157;;16963:50;;-1:-1:-1;;;16963:50:0;;;;;;;:::i;16875:157::-;16801:245;16454:792;;;;;;:::o;17252:193::-;17371:16;;;17385:1;17371:16;;;;;;;;;17318;;17346:22;;17371:16;;;;;;;;;;;;-1:-1:-1;17371:16:0;17346:41;;17408:7;17397:5;17403:1;17397:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17433:5;17252:193;-1:-1:-1;;17252:193:0:o;15723:725::-;-1:-1:-1;;;;;15930:13:0;;1465:19:5;:23;15926:516:0;;15965:72;;-1:-1:-1;;;15965:72:0;;-1:-1:-1;;;;;15965:38:0;;;;;:72;;16004:8;;16014:4;;16020:2;;16024:6;;16032:4;;15965:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15965:72:0;;;;;;;;-1:-1:-1;;15965:72:0;;;;;;;;;;;;:::i;:::-;;;15961:471;;;;:::i;:::-;-1:-1:-1;;;;;;16086:55:0;;-1:-1:-1;;;16086:55:0;16082:152;;16165:50;;-1:-1:-1;;;16165:50:0;;;;;;;:::i;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:735::-;246:5;299:3;292:4;284:6;280:17;276:27;266:55;;317:1;314;307:12;266:55;353:6;340:20;379:4;402:43;442:2;402:43;:::i;:::-;474:2;468:9;486:31;514:2;506:6;486:31;:::i;:::-;552:18;;;586:15;;;;-1:-1:-1;621:15:10;;;671:1;667:10;;;655:23;;651:32;;648:41;-1:-1:-1;645:61:10;;;702:1;699;692:12;645:61;724:1;734:163;748:2;745:1;742:9;734:163;;;805:17;;793:30;;843:12;;;;875;;;;766:1;759:9;734:163;;;-1:-1:-1;915:6:10;;192:735;-1:-1:-1;;;;;;;192:735:10:o;932:555::-;974:5;1027:3;1020:4;1012:6;1008:17;1004:27;994:55;;1045:1;1042;1035:12;994:55;1081:6;1068:20;1107:18;1103:2;1100:26;1097:52;;;1129:18;;:::i;:::-;1178:2;1172:9;1190:67;1245:2;1226:13;;-1:-1:-1;;1222:27:10;1251:4;1218:38;1172:9;1190:67;:::i;:::-;1281:2;1273:6;1266:18;1327:3;1320:4;1315:2;1307:6;1303:15;1299:26;1296:35;1293:55;;;1344:1;1341;1334:12;1293:55;1408:2;1401:4;1393:6;1389:17;1382:4;1374:6;1370:17;1357:54;1455:1;1431:15;;;1448:4;1427:26;1420:37;;;;1435:6;932:555;-1:-1:-1;;;932:555:10:o;1492:260::-;1560:6;1568;1621:2;1609:9;1600:7;1596:23;1592:32;1589:52;;;1637:1;1634;1627:12;1589:52;1660:29;1679:9;1660:29;:::i;:::-;1650:39;;1708:38;1742:2;1731:9;1727:18;1708:38;:::i;:::-;1698:48;;1492:260;;;;;:::o;1757:943::-;1911:6;1919;1927;1935;1943;1996:3;1984:9;1975:7;1971:23;1967:33;1964:53;;;2013:1;2010;2003:12;1964:53;2036:29;2055:9;2036:29;:::i;:::-;2026:39;;2084:38;2118:2;2107:9;2103:18;2084:38;:::i;:::-;2074:48;;2173:2;2162:9;2158:18;2145:32;2196:18;2237:2;2229:6;2226:14;2223:34;;;2253:1;2250;2243:12;2223:34;2276:61;2329:7;2320:6;2309:9;2305:22;2276:61;:::i;:::-;2266:71;;2390:2;2379:9;2375:18;2362:32;2346:48;;2419:2;2409:8;2406:16;2403:36;;;2435:1;2432;2425:12;2403:36;2458:63;2513:7;2502:8;2491:9;2487:24;2458:63;:::i;:::-;2448:73;;2574:3;2563:9;2559:19;2546:33;2530:49;;2604:2;2594:8;2591:16;2588:36;;;2620:1;2617;2610:12;2588:36;;2643:51;2686:7;2675:8;2664:9;2660:24;2643:51;:::i;:::-;2633:61;;;1757:943;;;;;;;;:::o;2705:606::-;2809:6;2817;2825;2833;2841;2894:3;2882:9;2873:7;2869:23;2865:33;2862:53;;;2911:1;2908;2901:12;2862:53;2934:29;2953:9;2934:29;:::i;:::-;2924:39;;2982:38;3016:2;3005:9;3001:18;2982:38;:::i;:::-;2972:48;;3067:2;3056:9;3052:18;3039:32;3029:42;;3118:2;3107:9;3103:18;3090:32;3080:42;;3173:3;3162:9;3158:19;3145:33;3201:18;3193:6;3190:30;3187:50;;;3233:1;3230;3223:12;3187:50;3256:49;3297:7;3288:6;3277:9;3273:22;3256:49;:::i;3316:347::-;3381:6;3389;3442:2;3430:9;3421:7;3417:23;3413:32;3410:52;;;3458:1;3455;3448:12;3410:52;3481:29;3500:9;3481:29;:::i;:::-;3471:39;;3560:2;3549:9;3545:18;3532:32;3607:5;3600:13;3593:21;3586:5;3583:32;3573:60;;3629:1;3626;3619:12;3573:60;3652:5;3642:15;;;3316:347;;;;;:::o;3668:254::-;3736:6;3744;3797:2;3785:9;3776:7;3772:23;3768:32;3765:52;;;3813:1;3810;3803:12;3765:52;3836:29;3855:9;3836:29;:::i;:::-;3826:39;3912:2;3897:18;;;;3884:32;;-1:-1:-1;;;3668:254:10:o;3927:1219::-;4045:6;4053;4106:2;4094:9;4085:7;4081:23;4077:32;4074:52;;;4122:1;4119;4112:12;4074:52;4162:9;4149:23;4191:18;4232:2;4224:6;4221:14;4218:34;;;4248:1;4245;4238:12;4218:34;4286:6;4275:9;4271:22;4261:32;;4331:7;4324:4;4320:2;4316:13;4312:27;4302:55;;4353:1;4350;4343:12;4302:55;4389:2;4376:16;4411:4;4434:43;4474:2;4434:43;:::i;:::-;4506:2;4500:9;4518:31;4546:2;4538:6;4518:31;:::i;:::-;4584:18;;;4618:15;;;;-1:-1:-1;4653:11:10;;;4695:1;4691:10;;;4683:19;;4679:28;;4676:41;-1:-1:-1;4673:61:10;;;4730:1;4727;4720:12;4673:61;4752:1;4743:10;;4762:169;4776:2;4773:1;4770:9;4762:169;;;4833:23;4852:3;4833:23;:::i;:::-;4821:36;;4794:1;4787:9;;;;;4877:12;;;;4909;;4762:169;;;-1:-1:-1;4950:6:10;-1:-1:-1;;4994:18:10;;4981:32;;-1:-1:-1;;5025:16:10;;;5022:36;;;5054:1;5051;5044:12;5022:36;;5077:63;5132:7;5121:8;5110:9;5106:24;5077:63;:::i;:::-;5067:73;;;3927:1219;;;;;:::o;5151:245::-;5209:6;5262:2;5250:9;5241:7;5237:23;5233:32;5230:52;;;5278:1;5275;5268:12;5230:52;5317:9;5304:23;5336:30;5360:5;5336:30;:::i;5401:249::-;5470:6;5523:2;5511:9;5502:7;5498:23;5494:32;5491:52;;;5539:1;5536;5529:12;5491:52;5571:9;5565:16;5590:30;5614:5;5590:30;:::i;5655:180::-;5714:6;5767:2;5755:9;5746:7;5742:23;5738:32;5735:52;;;5783:1;5780;5773:12;5735:52;-1:-1:-1;5806:23:10;;5655:180;-1:-1:-1;5655:180:10:o;5840:435::-;5893:3;5931:5;5925:12;5958:6;5953:3;5946:19;5984:4;6013:2;6008:3;6004:12;5997:19;;6050:2;6043:5;6039:14;6071:1;6081:169;6095:6;6092:1;6089:13;6081:169;;;6156:13;;6144:26;;6190:12;;;;6225:15;;;;6117:1;6110:9;6081:169;;;-1:-1:-1;6266:3:10;;5840:435;-1:-1:-1;;;;;5840:435:10:o;6280:257::-;6321:3;6359:5;6353:12;6386:6;6381:3;6374:19;6402:63;6458:6;6451:4;6446:3;6442:14;6435:4;6428:5;6424:16;6402:63;:::i;:::-;6519:2;6498:15;-1:-1:-1;;6494:29:10;6485:39;;;;6526:4;6481:50;;6280:257;-1:-1:-1;;6280:257:10:o;6542:185::-;6584:3;6622:5;6616:12;6637:52;6682:6;6677:3;6670:4;6663:5;6659:16;6637:52;:::i;:::-;6705:16;;;;;6542:185;-1:-1:-1;;6542:185:10:o;6850:1301::-;7127:3;7156:1;7189:6;7183:13;7219:3;7241:1;7269:9;7265:2;7261:18;7251:28;;7329:2;7318:9;7314:18;7351;7341:61;;7395:4;7387:6;7383:17;7373:27;;7341:61;7421:2;7469;7461:6;7458:14;7438:18;7435:38;7432:165;;;-1:-1:-1;;;7496:33:10;;7552:4;7549:1;7542:15;7582:4;7503:3;7570:17;7432:165;7613:18;7640:104;;;;7758:1;7753:320;;;;7606:467;;7640:104;-1:-1:-1;;7673:24:10;;7661:37;;7718:16;;;;-1:-1:-1;7640:104:10;;7753:320;15516:1;15509:14;;;15553:4;15540:18;;7848:1;7862:165;7876:6;7873:1;7870:13;7862:165;;;7954:14;;7941:11;;;7934:35;7997:16;;;;7891:10;;7862:165;;;7866:3;;8056:6;8051:3;8047:16;8040:23;;7606:467;;;;;;;8089:56;8114:30;8140:3;8132:6;8114:30;:::i;:::-;-1:-1:-1;;;6792:20:10;;6837:1;6828:11;;6732:113;8089:56;8082:63;6850:1301;-1:-1:-1;;;;;6850:1301:10:o;8156:826::-;-1:-1:-1;;;;;8553:15:10;;;8535:34;;8605:15;;8600:2;8585:18;;8578:43;8515:3;8652:2;8637:18;;8630:31;;;8478:4;;8684:57;;8721:19;;8713:6;8684:57;:::i;:::-;8789:9;8781:6;8777:22;8772:2;8761:9;8757:18;8750:50;8823:44;8860:6;8852;8823:44;:::i;:::-;8809:58;;8916:9;8908:6;8904:22;8898:3;8887:9;8883:19;8876:51;8944:32;8969:6;8961;8944:32;:::i;:::-;8936:40;8156:826;-1:-1:-1;;;;;;;;8156:826:10:o;8987:560::-;-1:-1:-1;;;;;9284:15:10;;;9266:34;;9336:15;;9331:2;9316:18;;9309:43;9383:2;9368:18;;9361:34;;;9426:2;9411:18;;9404:34;;;9246:3;9469;9454:19;;9447:32;;;9209:4;;9496:45;;9521:19;;9513:6;9496:45;:::i;:::-;9488:53;8987:560;-1:-1:-1;;;;;;;8987:560:10:o;9552:261::-;9731:2;9720:9;9713:21;9694:4;9751:56;9803:2;9792:9;9788:18;9780:6;9751:56;:::i;9818:465::-;10075:2;10064:9;10057:21;10038:4;10101:56;10153:2;10142:9;10138:18;10130:6;10101:56;:::i;:::-;10205:9;10197:6;10193:22;10188:2;10177:9;10173:18;10166:50;10233:44;10270:6;10262;10233:44;:::i;10480:219::-;10629:2;10618:9;10611:21;10592:4;10649:44;10689:2;10678:9;10674:18;10666:6;10649:44;:::i;11125:404::-;11327:2;11309:21;;;11366:2;11346:18;;;11339:30;11405:34;11400:2;11385:18;;11378:62;-1:-1:-1;;;11471:2:10;11456:18;;11449:38;11519:3;11504:19;;11125:404::o;12355:401::-;12557:2;12539:21;;;12596:2;12576:18;;;12569:30;12635:34;12630:2;12615:18;;12608:62;-1:-1:-1;;;12701:2:10;12686:18;;12679:35;12746:3;12731:19;;12355:401::o;13180:406::-;13382:2;13364:21;;;13421:2;13401:18;;;13394:30;13460:34;13455:2;13440:18;;13433:62;-1:-1:-1;;;13526:2:10;13511:18;;13504:40;13576:3;13561:19;;13180:406::o;15255:183::-;15315:4;15348:18;15340:6;15337:30;15334:56;;;15370:18;;:::i;:::-;-1:-1:-1;15415:1:10;15411:14;15427:4;15407:25;;15255:183::o;15569:128::-;15609:3;15640:1;15636:6;15633:1;15630:13;15627:39;;;15646:18;;:::i;:::-;-1:-1:-1;15682:9:10;;15569:128::o;15702:120::-;15742:1;15768;15758:35;;15773:18;;:::i;:::-;-1:-1:-1;15807:9:10;;15702:120::o;15827:125::-;15867:4;15895:1;15892;15889:8;15886:34;;;15900:18;;:::i;:::-;-1:-1:-1;15937:9:10;;15827:125::o;15957:258::-;16029:1;16039:113;16053:6;16050:1;16047:13;16039:113;;;16129:11;;;16123:18;16110:11;;;16103:39;16075:2;16068:10;16039:113;;;16170:6;16167:1;16164:13;16161:48;;;16205:1;16196:6;16191:3;16187:16;16180:27;16161:48;;15957:258;;;:::o;16220:249::-;16330:2;16311:13;;-1:-1:-1;;16307:27:10;16295:40;;16365:18;16350:34;;16386:22;;;16347:62;16344:88;;;16412:18;;:::i;:::-;16448:2;16441:22;-1:-1:-1;;16220:249:10:o;16474:135::-;16513:3;-1:-1:-1;;16534:17:10;;16531:43;;;16554:18;;:::i;:::-;-1:-1:-1;16601:1:10;16590:13;;16474:135::o;16614:112::-;16646:1;16672;16662:35;;16677:18;;:::i;:::-;-1:-1:-1;16711:9:10;;16614:112::o;16731:127::-;16792:10;16787:3;16783:20;16780:1;16773:31;16823:4;16820:1;16813:15;16847:4;16844:1;16837:15;16863:127;16924:10;16919:3;16915:20;16912:1;16905:31;16955:4;16952:1;16945:15;16979:4;16976:1;16969:15;16995:127;17056:10;17051:3;17047:20;17044:1;17037:31;17087:4;17084:1;17077:15;17111:4;17108:1;17101:15;17127:127;17188:10;17183:3;17179:20;17176:1;17169:31;17219:4;17216:1;17209:15;17243:4;17240:1;17233:15;17259:179;17294:3;17336:1;17318:16;17315:23;17312:120;;;17382:1;17379;17376;17361:23;-1:-1:-1;17419:1:10;17413:8;17408:3;17404:18;17312:120;17259:179;:::o;17443:671::-;17482:3;17524:4;17506:16;17503:26;17500:39;;;17443:671;:::o;17500:39::-;17566:2;17560:9;-1:-1:-1;;17631:16:10;17627:25;;17624:1;17560:9;17603:50;17682:4;17676:11;17706:16;17741:18;17812:2;17805:4;17797:6;17793:17;17790:25;17785:2;17777:6;17774:14;17771:45;17768:58;;;17819:5;;;;;17443:671;:::o;17768:58::-;17856:6;17850:4;17846:17;17835:28;;17892:3;17886:10;17919:2;17911:6;17908:14;17905:27;;;17925:5;;;;;;17443:671;:::o;17905:27::-;18009:2;17990:16;17984:4;17980:27;17976:36;17969:4;17960:6;17955:3;17951:16;17947:27;17944:69;17941:82;;;18016:5;;;;;;17443:671;:::o;17941:82::-;18032:57;18083:4;18074:6;18066;18062:19;18058:30;18052:4;18032:57;:::i;:::-;-1:-1:-1;18105:3:10;;17443:671;-1:-1:-1;;;;;17443:671:10:o;18119:131::-;-1:-1:-1;;;;;;18193:32:10;;18183:43;;18173:71;;18240:1;18237;18230:12;18173:71;18119:131;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1103800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2677",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26708",
								"supportsInterface(bytes4)": "544",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_asSingletonArray(uint256)": "infinite",
								"_balanceOf(address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1183,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1191,
									"end": 1195,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1183,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1183,
									"end": 1196,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1183,
									"end": 1196,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1183,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8498,
									"end": 8584,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8498,
									"end": 8584,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8564,
									"end": 8577,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8564,
									"end": 8577,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8564,
									"end": 8577,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8564,
									"end": 8577,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8564,
									"end": 8568,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8564,
									"end": 8568,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8564,
									"end": 8577,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8564,
									"end": 8577,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8564,
									"end": 8577,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8564,
									"end": 8577,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8564,
									"end": 8577,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 8564,
									"end": 8577,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8564,
									"end": 8577,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8564,
									"end": 8577,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8564,
									"end": 8577,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8498,
									"end": 8584,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8498,
									"end": 8584,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 94,
									"end": 100,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 127,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 168,
									"end": 170,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 156,
									"end": 165,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 147,
									"end": 154,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 143,
									"end": 166,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 139,
									"end": 171,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 136,
									"end": 188,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 136,
									"end": 188,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 136,
									"end": 188,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 184,
									"end": 185,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 182,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 174,
									"end": 186,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 136,
									"end": 188,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 136,
									"end": 188,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 211,
									"end": 227,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 211,
									"end": 227,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 276,
									"end": 290,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 276,
									"end": 290,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 276,
									"end": 290,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 273,
									"end": 307,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 273,
									"end": 307,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 273,
									"end": 307,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 303,
									"end": 304,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 301,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 293,
									"end": 305,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 273,
									"end": 307,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 273,
									"end": 307,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 341,
									"end": 347,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 326,
									"end": 348,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 316,
									"end": 348,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 316,
									"end": 348,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 386,
									"end": 393,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 379,
									"end": 383,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 375,
									"end": 377,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 371,
									"end": 384,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 367,
									"end": 394,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 357,
									"end": 412,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 357,
									"end": 412,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 408,
									"end": 409,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 406,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 398,
									"end": 410,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 357,
									"end": 412,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 357,
									"end": 412,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 437,
									"end": 439,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 431,
									"end": 440,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 459,
									"end": 461,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 455,
									"end": 457,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 452,
									"end": 462,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 449,
									"end": 485,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 449,
									"end": 485,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 449,
									"end": 485,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 465,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 534,
									"end": 543,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 508,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 594,
									"end": 607,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 594,
									"end": 607,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 590,
									"end": 612,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 590,
									"end": 612,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 590,
									"end": 612,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 614,
									"end": 616,
									"name": "PUSH",
									"source": 10,
									"value": "3F"
								},
								{
									"begin": 586,
									"end": 617,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 582,
									"end": 622,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 570,
									"end": 623,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 570,
									"end": 623,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 570,
									"end": 623,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 638,
									"end": 656,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 638,
									"end": 656,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 638,
									"end": 656,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 658,
									"end": 680,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 658,
									"end": 680,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 658,
									"end": 680,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 635,
									"end": 681,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 632,
									"end": 704,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 632,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 632,
									"end": 704,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 684,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 724,
									"end": 734,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 720,
									"end": 722,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 713,
									"end": 735,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 759,
									"end": 761,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 751,
									"end": 757,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 744,
									"end": 762,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 799,
									"end": 806,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 794,
									"end": 796,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 789,
									"end": 791,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 785,
									"end": 787,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 781,
									"end": 792,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 777,
									"end": 797,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 774,
									"end": 807,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 771,
									"end": 824,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 771,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 771,
									"end": 824,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 820,
									"end": 821,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 818,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 810,
									"end": 822,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 771,
									"end": 824,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 771,
									"end": 824,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 842,
									"end": 843,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 843,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 833,
									"end": 843,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 852,
									"end": 981,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 866,
									"end": 868,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 863,
									"end": 864,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 860,
									"end": 869,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 852,
									"end": 981,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 852,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 954,
									"end": 964,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 954,
									"end": 964,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 954,
									"end": 964,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 950,
									"end": 969,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 950,
									"end": 969,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 944,
									"end": 970,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 923,
									"end": 937,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 923,
									"end": 937,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 923,
									"end": 937,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 919,
									"end": 942,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 919,
									"end": 942,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 912,
									"end": 971,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 877,
									"end": 887,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 877,
									"end": 887,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 877,
									"end": 887,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 877,
									"end": 887,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 852,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 852,
									"end": 981,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 999,
									"end": 1001,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 996,
									"end": 997,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 993,
									"end": 1002,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1058,
									"end": 1059,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1053,
									"end": 1055,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1048,
									"end": 1050,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1040,
									"end": 1046,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1036,
									"end": 1051,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1032,
									"end": 1056,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1025,
									"end": 1060,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1095,
									"name": "SWAP9",
									"source": 10
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1185,
									"end": 1186,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1303,
									"end": 1307,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 1295,
									"end": 1301,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1291,
									"end": 1308,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1281,
									"end": 1308,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1281,
									"end": 1308,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1356,
									"end": 1358,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1348,
									"end": 1354,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1345,
									"end": 1359,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1325,
									"end": 1343,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1322,
									"end": 1360,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1402,
									"end": 1412,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1397,
									"end": 1400,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1393,
									"end": 1413,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1390,
									"end": 1391,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1383,
									"end": 1414,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1437,
									"end": 1441,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1434,
									"end": 1435,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1427,
									"end": 1442,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1465,
									"end": 1469,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1462,
									"end": 1463,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1455,
									"end": 1470,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1552,
									"end": 1562,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1547,
									"end": 1550,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1543,
									"end": 1563,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1540,
									"end": 1541,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1533,
									"end": 1564,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1583,
									"end": 1587,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1580,
									"end": 1581,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1573,
									"end": 1588,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1607,
									"end": 1611,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1604,
									"end": 1605,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1597,
									"end": 1612,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 604,
									"end": 17447,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c061520077c81de3d091dfd0a7a50a043b840232facc27c811879bf168a3213864736f6c63430008070033",
									".code": [
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17447,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14966,
											"end": 14991,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14966,
											"end": 14991,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14966,
											"end": 14991,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14954,
											"end": 14956,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14939,
											"end": 14957,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10453,
											"end": 10467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10453,
											"end": 10467,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10446,
											"end": 10468,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10428,
											"end": 10469,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10428,
											"end": 10469,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10416,
											"end": 10418,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10401,
											"end": 10419,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 10288,
											"end": 10475,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3472,
											"end": 3625,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3472,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3472,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3472,
											"end": 3625,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3625,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3472,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3472,
											"end": 3625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3472,
											"end": 3625,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3472,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3472,
											"end": 3625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3692,
											"end": 3858,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3692,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3692,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3692,
											"end": 3858,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3692,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3692,
											"end": 3858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3692,
											"end": 3858,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3692,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3814,
											"end": 3841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3841,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3791,
											"end": 3795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3814,
											"end": 3841,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3814,
											"end": 3841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 3841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3841,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3841,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3858,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4314,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3925,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3925,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3925,
											"end": 4314,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4314,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3925,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3925,
											"end": 4314,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3925,
											"end": 4314,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3925,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3925,
											"end": 4314,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2476,
											"end": 2497,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12146,
											"end": 12148,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12128,
											"end": 12149,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12185,
											"end": 12187,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12158,
											"end": 12188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12224,
											"end": 12258,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2061646472657373207A65726F206973206E6F7420612076"
										},
										{
											"begin": 12204,
											"end": 12222,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12204,
											"end": 12222,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12204,
											"end": 12222,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12197,
											"end": 12259,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12275,
											"end": 12293,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12275,
											"end": 12293,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12275,
											"end": 12293,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12268,
											"end": 12308,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12325,
											"end": 12344,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12325,
											"end": 12344,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2715,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2715,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2702,
											"end": 2715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2702,
											"end": 2715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2715,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2715,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2702,
											"end": 2724,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2724,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2724,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2724,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2724,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2724,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2584,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2561,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2584,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2363,
											"end": 2591,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1407,
											"end": 1448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1407,
											"end": 1448,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1407,
											"end": 1516,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1464,
											"end": 1516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1464,
											"end": 1516,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1516,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1407,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1407,
											"end": 1568,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1568,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1532,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1568,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2050,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2123,
											"end": 2127,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2162,
											"end": 2164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4611,
											"end": 4631,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4611,
											"end": 4631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4611,
											"end": 4631,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4611,
											"end": 4631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4611,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4611,
											"end": 4671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4635,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4652,
											"end": 4656,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3692,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3692,
											"end": 3858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4635,
											"end": 4671,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4635,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4590,
											"end": 4747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4590,
											"end": 4747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4590,
											"end": 4747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4590,
											"end": 4747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4590,
											"end": 4747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4590,
											"end": 4747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12963,
											"end": 12965,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4590,
											"end": 4747,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4590,
											"end": 4747,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4590,
											"end": 4747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12945,
											"end": 12966,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13002,
											"end": 13004,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 12982,
											"end": 13000,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12982,
											"end": 13000,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12982,
											"end": 13000,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12975,
											"end": 13005,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13041,
											"end": 13075,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 13021,
											"end": 13039,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13021,
											"end": 13039,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13021,
											"end": 13039,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13014,
											"end": 13076,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13092,
											"end": 13110,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13092,
											"end": 13110,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13092,
											"end": 13110,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13085,
											"end": 13133,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13150,
											"end": 13169,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 13150,
											"end": 13169,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4590,
											"end": 4747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12761,
											"end": 13175,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4590,
											"end": 4747,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4590,
											"end": 4747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4780,
											"end": 4784,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4786,
											"end": 4788,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4802,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4804,
											"end": 4808,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4757,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4757,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4816,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3055,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3098,
											"end": 3101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3098,
											"end": 3108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3079,
											"end": 3087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3079,
											"end": 3094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3079,
											"end": 3108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3071,
											"end": 3154,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3071,
											"end": 3154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3071,
											"end": 3154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14203,
											"end": 14205,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3071,
											"end": 3154,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3071,
											"end": 3154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14185,
											"end": 14206,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14242,
											"end": 14244,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 14222,
											"end": 14240,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14222,
											"end": 14240,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14222,
											"end": 14240,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14215,
											"end": 14245,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14281,
											"end": 14315,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 14261,
											"end": 14279,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14261,
											"end": 14279,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14261,
											"end": 14279,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14254,
											"end": 14316,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14332,
											"end": 14350,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14332,
											"end": 14350,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14332,
											"end": 14350,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14325,
											"end": 14364,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14381,
											"end": 14400,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 14381,
											"end": 14400,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14001,
											"end": 14406,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3154,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3071,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3203,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3228,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3252,
											"end": 3261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3247,
											"end": 3367,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3247,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3271,
											"end": 3279,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3271,
											"end": 3286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3267,
											"end": 3268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3267,
											"end": 3286,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3367,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3247,
											"end": 3367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3336,
											"end": 3344,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3345,
											"end": 3346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3347,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3336,
											"end": 3347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3336,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3336,
											"end": 3347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3336,
											"end": 3347,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3336,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3347,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3352,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3353,
											"end": 3354,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3326,
											"end": 3356,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3326,
											"end": 3356,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3326,
											"end": 3356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3320,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3322,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3307,
											"end": 3356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3288,
											"end": 3291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3288,
											"end": 3291,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3288,
											"end": 3291,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3288,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3247,
											"end": 3367,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3367,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3247,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3397,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2888,
											"end": 3404,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3472,
											"end": 3625,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3472,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3599,
											"end": 3607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3617,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3625,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3925,
											"end": 4314,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3925,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4125,
											"end": 4145,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4145,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4125,
											"end": 4185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4149,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4166,
											"end": 4170,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3692,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3692,
											"end": 3858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4149,
											"end": 4185,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4149,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4104,
											"end": 4252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4104,
											"end": 4252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4104,
											"end": 4252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11736,
											"end": 11738,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4104,
											"end": 4252,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4104,
											"end": 4252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11718,
											"end": 11739,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11775,
											"end": 11777,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 11755,
											"end": 11773,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11755,
											"end": 11773,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11755,
											"end": 11773,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11778,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11814,
											"end": 11848,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 11794,
											"end": 11812,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11794,
											"end": 11812,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11794,
											"end": 11812,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11787,
											"end": 11849,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11865,
											"end": 11883,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11865,
											"end": 11883,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11865,
											"end": 11883,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11858,
											"end": 11897,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11914,
											"end": 11933,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 11914,
											"end": 11933,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4104,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11534,
											"end": 11939,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4104,
											"end": 4252,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4104,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4262,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4280,
											"end": 4284,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4288,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4292,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4306,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4262,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4262,
											"end": 4307,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 384,
											"end": 397,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 601,
											"end": 611,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 657,
											"end": 669,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 718,
											"end": 727,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 718,
											"end": 727,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 743,
											"end": 751,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 773,
											"end": 775,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 765,
											"end": 775,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 795,
											"end": 814,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 795,
											"end": 834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 795,
											"end": 834,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 844,
											"end": 994,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 851,
											"end": 861,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 851,
											"end": 861,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 945,
											"end": 950,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 919,
											"end": 958,
											"name": "PUSH",
											"source": 7,
											"value": "F8"
										},
										{
											"begin": 919,
											"end": 958,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 902,
											"end": 908,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 902,
											"end": 916,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 902,
											"end": 958,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 902,
											"end": 958,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 958,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 902,
											"end": 958,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 958,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 902,
											"end": 958,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 981,
											"end": 983,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 972,
											"end": 983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 844,
											"end": 994,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1017,
											"end": 1023,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6560,
											"end": 7675,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6560,
											"end": 7675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6766,
											"end": 6769,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6766,
											"end": 6776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6766,
											"end": 6794,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6758,
											"end": 6839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6758,
											"end": 6839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6758,
											"end": 6839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14613,
											"end": 14615,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6758,
											"end": 6839,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6758,
											"end": 6839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14595,
											"end": 14616,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14652,
											"end": 14654,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 14632,
											"end": 14650,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14632,
											"end": 14650,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14632,
											"end": 14650,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14625,
											"end": 14655,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14691,
											"end": 14725,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 14671,
											"end": 14689,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14671,
											"end": 14689,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14671,
											"end": 14689,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14664,
											"end": 14726,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14742,
											"end": 14760,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14742,
											"end": 14760,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14742,
											"end": 14760,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14735,
											"end": 14773,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14790,
											"end": 14809,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 14790,
											"end": 14809,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6758,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14411,
											"end": 14815,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6758,
											"end": 6839,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6758,
											"end": 6839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6857,
											"end": 6873,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6857,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6849,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 6849,
											"end": 6915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6849,
											"end": 6915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6849,
											"end": 6915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6849,
											"end": 6915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6849,
											"end": 6915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6849,
											"end": 6915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6849,
											"end": 6915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6849,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6849,
											"end": 6915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6849,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6849,
											"end": 6915,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6849,
											"end": 6915,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 6849,
											"end": 6915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6926,
											"end": 6942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7039,
											"end": 7450,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 7039,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7063,
											"end": 7066,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7063,
											"end": 7073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7059,
											"end": 7060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7059,
											"end": 7073,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7450,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 7039,
											"end": 7450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7094,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7107,
											"end": 7110,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7112,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7094,
											"end": 7113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7094,
											"end": 7113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7127,
											"end": 7141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7144,
											"end": 7151,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7153,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7169,
											"end": 7188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7191,
											"end": 7204,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7204,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7204,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7204,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7210,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7210,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7210,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7210,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7210,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7210,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7210,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7210,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7232,
											"end": 7253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7253,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7253,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7224,
											"end": 7300,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7300,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7224,
											"end": 7300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7224,
											"end": 7300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7300,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7224,
											"end": 7300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7224,
											"end": 7300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7224,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7224,
											"end": 7300,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7224,
											"end": 7300,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7224,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7355,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7342,
											"end": 7355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7342,
											"end": 7355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7355,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7355,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7342,
											"end": 7361,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7361,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7361,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7361,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7361,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7384,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7384,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7384,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7384,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7412,
											"end": 7429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7412,
											"end": 7429,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 7412,
											"end": 7429,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7412,
											"end": 7429,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7412,
											"end": 7429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7412,
											"end": 7429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7412,
											"end": 7429,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7412,
											"end": 7439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7412,
											"end": 7439,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7384,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7384,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7342,
											"end": 7351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7412,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7412,
											"end": 7439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7384,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7412,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 7412,
											"end": 7439,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7412,
											"end": 7439,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7412,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7412,
											"end": 7439,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7412,
											"end": 7439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7412,
											"end": 7439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7412,
											"end": 7439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7412,
											"end": 7439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7412,
											"end": 7439,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7412,
											"end": 7439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7080,
											"end": 7450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7080,
											"end": 7450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7080,
											"end": 7450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7075,
											"end": 7078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7075,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7075,
											"end": 7078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7075,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7075,
											"end": 7078,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7075,
											"end": 7078,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7075,
											"end": 7078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7075,
											"end": 7078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7075,
											"end": 7078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 7039,
											"end": 7450,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7450,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 7039,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7495,
											"end": 7497,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7489,
											"end": 7493,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7479,
											"end": 7487,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7499,
											"end": 7502,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7511,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7512,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7629,
											"end": 7637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7643,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 7647,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7649,
											"end": 7652,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7661,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7667,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7593,
											"end": 7668,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7593,
											"end": 7668,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7593,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 7675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 7675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 7675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 7675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 7675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 7675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 7675,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13100,
											"end": 13423,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 13100,
											"end": 13423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13250,
											"end": 13258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13241,
											"end": 13258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13241,
											"end": 13246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13241,
											"end": 13258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13241,
											"end": 13258,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13241,
											"end": 13258,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13233,
											"end": 13304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 13233,
											"end": 13304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13233,
											"end": 13304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13233,
											"end": 13304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13233,
											"end": 13304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13233,
											"end": 13304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13793,
											"end": 13795,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13233,
											"end": 13304,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13233,
											"end": 13304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13233,
											"end": 13304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13775,
											"end": 13796,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13832,
											"end": 13834,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 13812,
											"end": 13830,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13812,
											"end": 13830,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13812,
											"end": 13830,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13805,
											"end": 13835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13871,
											"end": 13905,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 13851,
											"end": 13869,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13851,
											"end": 13869,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13851,
											"end": 13869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13844,
											"end": 13906,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13922,
											"end": 13940,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13922,
											"end": 13940,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13922,
											"end": 13940,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13915,
											"end": 13954,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13971,
											"end": 13990,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 13971,
											"end": 13990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13233,
											"end": 13304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13591,
											"end": 13996,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13233,
											"end": 13304,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 13233,
											"end": 13304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13314,
											"end": 13339,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13314,
											"end": 13339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13332,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13314,
											"end": 13339,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13314,
											"end": 13339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13314,
											"end": 13339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13339,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13339,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13349,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13349,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13349,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13349,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13349,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13360,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13314,
											"end": 13360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13360,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13360,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13360,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13360,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13314,
											"end": 13360,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13375,
											"end": 13416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13375,
											"end": 13416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10428,
											"end": 10469,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10428,
											"end": 10469,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10428,
											"end": 10469,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13375,
											"end": 13416,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13375,
											"end": 13416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10401,
											"end": 10419,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13375,
											"end": 13416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13375,
											"end": 13416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13375,
											"end": 13416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13375,
											"end": 13416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13375,
											"end": 13416,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13375,
											"end": 13416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13375,
											"end": 13416,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13100,
											"end": 13423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13100,
											"end": 13423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13100,
											"end": 13423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13100,
											"end": 13423,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5267,
											"end": 6214,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5267,
											"end": 6214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5464,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5448,
											"end": 5464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5440,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5440,
											"end": 5506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5440,
											"end": 5506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5440,
											"end": 5506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5440,
											"end": 5506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5440,
											"end": 5506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5440,
											"end": 5506,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5440,
											"end": 5506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5440,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5440,
											"end": 5506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5440,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5440,
											"end": 5506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5440,
											"end": 5506,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5440,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5581,
											"end": 5602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 5599,
											"end": 5601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5581,
											"end": 5602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5581,
											"end": 5602,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 5581,
											"end": 5602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5558,
											"end": 5602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5558,
											"end": 5602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5612,
											"end": 5636,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5639,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5657,
											"end": 5663,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5639,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5639,
											"end": 5664,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5639,
											"end": 5664,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5639,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5612,
											"end": 5664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5612,
											"end": 5664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5746,
											"end": 5765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5768,
											"end": 5781,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5781,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5768,
											"end": 5781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5781,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5768,
											"end": 5781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5781,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5781,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5768,
											"end": 5787,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5787,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5787,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5787,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5805,
											"end": 5826,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5805,
											"end": 5826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5805,
											"end": 5826,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5805,
											"end": 5826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5797,
											"end": 5873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5873,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5797,
											"end": 5873,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5797,
											"end": 5873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5873,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5797,
											"end": 5873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5797,
											"end": 5873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5797,
											"end": 5873,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5797,
											"end": 5873,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5797,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 5920,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5920,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5907,
											"end": 5920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5907,
											"end": 5920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5920,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5920,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5929,
											"end": 5949,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5929,
											"end": 5949,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5929,
											"end": 5949,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5949,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 5986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 5986,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 5986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 5986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 5986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 5986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 5986,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 5996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 5996,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5929,
											"end": 5949,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5929,
											"end": 5949,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5969,
											"end": 5996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5929,
											"end": 5949,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5929,
											"end": 5949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 5969,
											"end": 5996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5969,
											"end": 5996,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5969,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 5996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 5996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 5996,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15176,
											"end": 15201,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 15176,
											"end": 15201,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15176,
											"end": 15201,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15232,
											"end": 15234,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15217,
											"end": 15235,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15217,
											"end": 15235,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15210,
											"end": 15244,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 15210,
											"end": 15244,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15210,
											"end": 15244,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15149,
											"end": 15167,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6058,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6139,
											"end": 6207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 6170,
											"end": 6178,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6184,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6186,
											"end": 6188,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6190,
											"end": 6192,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6194,
											"end": 6200,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6202,
											"end": 6206,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6139,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 6139,
											"end": 6207,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6139,
											"end": 6207,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 6139,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 6214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 6214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 6214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 6214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5267,
											"end": 6214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5267,
											"end": 6214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5267,
											"end": 6214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5267,
											"end": 6214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5267,
											"end": 6214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5267,
											"end": 6214,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16454,
											"end": 17246,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 16454,
											"end": 17246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16686,
											"end": 16699,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16686,
											"end": 16699,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16682,
											"end": 17240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 16682,
											"end": 17240,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16721,
											"end": 16764,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16764,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 16721,
											"end": 16764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16773,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16765,
											"end": 16773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16779,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16775,
											"end": 16779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16784,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16786,
											"end": 16793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16786,
											"end": 16793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16795,
											"end": 16799,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16795,
											"end": 16799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 16721,
											"end": 16800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17106,
											"end": 17112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17099,
											"end": 17113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17099,
											"end": 17113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17113,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17099,
											"end": 17113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 17099,
											"end": 17113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 17099,
											"end": 17113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17153,
											"end": 17215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17153,
											"end": 17215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17153,
											"end": 17215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17153,
											"end": 17215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10908,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17153,
											"end": 17215,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17153,
											"end": 17215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17153,
											"end": 17215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10888,
											"end": 10909,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10945,
											"end": 10947,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10918,
											"end": 10948,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10984,
											"end": 11018,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10957,
											"end": 11019,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11035,
											"end": 11053,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11035,
											"end": 11053,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11035,
											"end": 11053,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11028,
											"end": 11078,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11095,
											"end": 11114,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 11095,
											"end": 11114,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 10704,
											"end": 11120,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 16717,
											"end": 17230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16879,
											"end": 16939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16879,
											"end": 16939,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16879,
											"end": 16939,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16875,
											"end": 17032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 16875,
											"end": 17032,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16963,
											"end": 17013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16963,
											"end": 17013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16963,
											"end": 17013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16963,
											"end": 17013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16963,
											"end": 17013,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16963,
											"end": 17013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16963,
											"end": 17013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 16963,
											"end": 17013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16963,
											"end": 17013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 16963,
											"end": 17013,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16875,
											"end": 17032,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 16875,
											"end": 17032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16801,
											"end": 17046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16454,
											"end": 17246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16454,
											"end": 17246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16454,
											"end": 17246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16454,
											"end": 17246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16454,
											"end": 17246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16454,
											"end": 17246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16454,
											"end": 17246,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17252,
											"end": 17445,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 17252,
											"end": 17445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17385,
											"end": 17386,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17318,
											"end": 17334,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17318,
											"end": 17334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17346,
											"end": 17368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17371,
											"end": 17387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17408,
											"end": 17415,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17397,
											"end": 17402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17403,
											"end": 17404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17397,
											"end": 17405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17397,
											"end": 17405,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17397,
											"end": 17405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17397,
											"end": 17405,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17397,
											"end": 17405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 17397,
											"end": 17405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17397,
											"end": 17405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 17397,
											"end": 17405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 17397,
											"end": 17405,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17397,
											"end": 17405,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 17397,
											"end": 17405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17397,
											"end": 17405,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17397,
											"end": 17405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17397,
											"end": 17405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17397,
											"end": 17405,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17397,
											"end": 17405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17397,
											"end": 17405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17397,
											"end": 17405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17397,
											"end": 17405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17397,
											"end": 17405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17397,
											"end": 17415,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17438,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17252,
											"end": 17445,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17252,
											"end": 17445,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15723,
											"end": 16448,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 15723,
											"end": 16448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15930,
											"end": 15943,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 15943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15926,
											"end": 16442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 15926,
											"end": 16442,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15965,
											"end": 16003,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16003,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 15965,
											"end": 16003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16004,
											"end": 16012,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16004,
											"end": 16012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16014,
											"end": 16018,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16014,
											"end": 16018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16022,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16024,
											"end": 16030,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16024,
											"end": 16030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16032,
											"end": 16036,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16032,
											"end": 16036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 15965,
											"end": 16037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15961,
											"end": 16432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 15961,
											"end": 16432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15961,
											"end": 16432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 15961,
											"end": 16432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 15961,
											"end": 16432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15961,
											"end": 16432,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 15961,
											"end": 16432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16086,
											"end": 16141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16086,
											"end": 16141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16086,
											"end": 16141,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16082,
											"end": 16234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 16082,
											"end": 16234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16165,
											"end": 16215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16165,
											"end": 16215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16165,
											"end": 16215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16165,
											"end": 16215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16165,
											"end": 16215,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16165,
											"end": 16215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16165,
											"end": 16215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 16165,
											"end": 16215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16165,
											"end": 16215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 16165,
											"end": 16215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 927,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 192,
											"end": 927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 246,
											"end": 251,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 302,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 292,
											"end": 296,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 280,
											"end": 297,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 276,
											"end": 303,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 266,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 266,
											"end": 321,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 315,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 307,
											"end": 319,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 266,
											"end": 321,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 266,
											"end": 321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 353,
											"end": 359,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 340,
											"end": 360,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 379,
											"end": 383,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 402,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 442,
											"end": 444,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 402,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 402,
											"end": 445,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 445,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 402,
											"end": 445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 474,
											"end": 476,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 468,
											"end": 477,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 486,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 514,
											"end": 516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 506,
											"end": 512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 486,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 486,
											"end": 517,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 486,
											"end": 517,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 486,
											"end": 517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 552,
											"end": 570,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 552,
											"end": 570,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 552,
											"end": 570,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 586,
											"end": 601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 586,
											"end": 601,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 586,
											"end": 601,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 586,
											"end": 601,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 621,
											"end": 636,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 621,
											"end": 636,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 621,
											"end": 636,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 671,
											"end": 672,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 667,
											"end": 677,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 667,
											"end": 677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 667,
											"end": 677,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 655,
											"end": 678,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 655,
											"end": 678,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 651,
											"end": 683,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 651,
											"end": 683,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 648,
											"end": 689,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 645,
											"end": 706,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 645,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 645,
											"end": 706,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 702,
											"end": 703,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 700,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 692,
											"end": 704,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 645,
											"end": 706,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 645,
											"end": 706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 724,
											"end": 725,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 748,
											"end": 750,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 745,
											"end": 746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 742,
											"end": 751,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 734,
											"end": 897,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 734,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 793,
											"end": 823,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 793,
											"end": 823,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 843,
											"end": 855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 843,
											"end": 855,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 843,
											"end": 855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 843,
											"end": 855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 875,
											"end": 887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 875,
											"end": 887,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 875,
											"end": 887,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 875,
											"end": 887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 766,
											"end": 767,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 768,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 734,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 734,
											"end": 897,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 915,
											"end": 921,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 915,
											"end": 921,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 192,
											"end": 927,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 927,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 932,
											"end": 1487,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 932,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 974,
											"end": 979,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1020,
											"end": 1024,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1008,
											"end": 1025,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 994,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 994,
											"end": 1049,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1043,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1047,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 994,
											"end": 1049,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 994,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1081,
											"end": 1087,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1088,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1105,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1126,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1245,
											"end": 1247,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1226,
											"end": 1239,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1226,
											"end": 1239,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1249,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1256,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1281,
											"end": 1283,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1266,
											"end": 1284,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1327,
											"end": 1330,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1320,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1317,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1342,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1346,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1408,
											"end": 1410,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1405,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1382,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1370,
											"end": 1387,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1357,
											"end": 1411,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 1455,
											"end": 1456,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 1452,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1453,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1457,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1457,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1457,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1457,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1487,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 932,
											"end": 1487,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1566,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1574,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1623,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1609,
											"end": 1618,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1600,
											"end": 1607,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1624,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1637,
											"end": 1638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1627,
											"end": 1639,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 1679,
											"end": 1688,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 1742,
											"end": 1744,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1731,
											"end": 1740,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1698,
											"end": 1746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1698,
											"end": 1746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1911,
											"end": 1917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1941,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1996,
											"end": 1999,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 1984,
											"end": 1993,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1982,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 1971,
											"end": 1994,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1967,
											"end": 2000,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2011,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2003,
											"end": 2015,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2036,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 2055,
											"end": 2064,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2036,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 2036,
											"end": 2065,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2036,
											"end": 2065,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 2036,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 2118,
											"end": 2120,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2107,
											"end": 2116,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2103,
											"end": 2121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 2084,
											"end": 2122,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2084,
											"end": 2122,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 2084,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2122,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2175,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2171,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2176,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2177,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2196,
											"end": 2214,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2237,
											"end": 2239,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2229,
											"end": 2235,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2240,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2254,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2251,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2243,
											"end": 2255,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 2329,
											"end": 2336,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2327,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2337,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2419,
											"end": 2421,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2417,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2422,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2433,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2425,
											"end": 2437,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 2513,
											"end": 2520,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2502,
											"end": 2510,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2491,
											"end": 2500,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2487,
											"end": 2511,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2521,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2521,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2574,
											"end": 2577,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2563,
											"end": 2572,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2546,
											"end": 2579,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2606,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2591,
											"end": 2607,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2618,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2610,
											"end": 2622,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2675,
											"end": 2683,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2673,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2660,
											"end": 2684,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2633,
											"end": 2694,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2633,
											"end": 2694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2633,
											"end": 2694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2705,
											"end": 3311,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 2705,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2809,
											"end": 2815,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2823,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2825,
											"end": 2831,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2841,
											"end": 2847,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2897,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 2882,
											"end": 2891,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 2880,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 2892,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2865,
											"end": 2898,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2909,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2901,
											"end": 2913,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 2953,
											"end": 2962,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2963,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 3016,
											"end": 3018,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3005,
											"end": 3014,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 2982,
											"end": 3020,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2982,
											"end": 3020,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 2982,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2972,
											"end": 3020,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2972,
											"end": 3020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3067,
											"end": 3069,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3056,
											"end": 3065,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3071,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3029,
											"end": 3071,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3029,
											"end": 3071,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3118,
											"end": 3120,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3107,
											"end": 3116,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3122,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3080,
											"end": 3122,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3080,
											"end": 3122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3173,
											"end": 3176,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3162,
											"end": 3171,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3177,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3178,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3201,
											"end": 3219,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3193,
											"end": 3199,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3190,
											"end": 3220,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3234,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3230,
											"end": 3231,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3235,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3294,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3295,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 3256,
											"end": 3305,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3387,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3395,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3442,
											"end": 3444,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3430,
											"end": 3439,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3428,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3417,
											"end": 3440,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3445,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3410,
											"end": 3462,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3410,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 3410,
											"end": 3462,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3458,
											"end": 3459,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3448,
											"end": 3460,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3410,
											"end": 3462,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 3410,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 3481,
											"end": 3510,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3481,
											"end": 3510,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 3481,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3471,
											"end": 3510,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3471,
											"end": 3510,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3560,
											"end": 3562,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3549,
											"end": 3558,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3545,
											"end": 3563,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3564,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3612,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3600,
											"end": 3613,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3593,
											"end": 3614,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3583,
											"end": 3615,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3573,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 3573,
											"end": 3633,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3629,
											"end": 3630,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3626,
											"end": 3627,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3631,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3573,
											"end": 3633,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 3573,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3668,
											"end": 3922,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 3668,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3736,
											"end": 3742,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3750,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3799,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3785,
											"end": 3794,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3776,
											"end": 3783,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3795,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3800,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3811,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 3855,
											"end": 3864,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3826,
											"end": 3865,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 3914,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3897,
											"end": 3915,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 3915,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 3915,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 3915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3884,
											"end": 3916,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3884,
											"end": 3916,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3668,
											"end": 3922,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4051,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4059,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4108,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4094,
											"end": 4103,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4085,
											"end": 4092,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4081,
											"end": 4104,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4077,
											"end": 4109,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4126,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 4074,
											"end": 4126,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4122,
											"end": 4123,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4120,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4124,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4126,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 4074,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4171,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4172,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4191,
											"end": 4209,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4232,
											"end": 4234,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4224,
											"end": 4230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4221,
											"end": 4235,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4252,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 4218,
											"end": 4252,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4248,
											"end": 4249,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4245,
											"end": 4246,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4238,
											"end": 4250,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4252,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 4218,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4286,
											"end": 4292,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4275,
											"end": 4284,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4271,
											"end": 4293,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4293,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4331,
											"end": 4338,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4324,
											"end": 4328,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4320,
											"end": 4322,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4339,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4302,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 4302,
											"end": 4357,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4351,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4302,
											"end": 4357,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 4302,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4391,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4376,
											"end": 4392,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4411,
											"end": 4415,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4434,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 4474,
											"end": 4476,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 4434,
											"end": 4477,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4434,
											"end": 4477,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 4434,
											"end": 4477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4506,
											"end": 4508,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4500,
											"end": 4509,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 4546,
											"end": 4548,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4544,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4602,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4602,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4602,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4618,
											"end": 4633,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4618,
											"end": 4633,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4618,
											"end": 4633,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4618,
											"end": 4633,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4653,
											"end": 4664,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4664,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4664,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4695,
											"end": 4696,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4691,
											"end": 4701,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4691,
											"end": 4701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4691,
											"end": 4701,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4683,
											"end": 4702,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4683,
											"end": 4702,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4679,
											"end": 4707,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4679,
											"end": 4707,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4676,
											"end": 4717,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4673,
											"end": 4734,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 4673,
											"end": 4734,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4727,
											"end": 4728,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4720,
											"end": 4732,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4734,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 4673,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4752,
											"end": 4753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4743,
											"end": 4753,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4753,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4776,
											"end": 4778,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 4774,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4770,
											"end": 4779,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 4852,
											"end": 4855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 4833,
											"end": 4856,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4833,
											"end": 4856,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 4833,
											"end": 4856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4857,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4857,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4794,
											"end": 4795,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 4889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 4889,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 4889,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 4889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 4921,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 4921,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4994,
											"end": 5012,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4994,
											"end": 5012,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4981,
											"end": 5013,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4981,
											"end": 5013,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5025,
											"end": 5041,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5025,
											"end": 5041,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5025,
											"end": 5041,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5054,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5044,
											"end": 5056,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5077,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 5132,
											"end": 5139,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5129,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5119,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5106,
											"end": 5130,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5077,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 5077,
											"end": 5140,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5077,
											"end": 5140,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 5077,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5140,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5151,
											"end": 5396,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5151,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5209,
											"end": 5215,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5262,
											"end": 5264,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5250,
											"end": 5259,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5248,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5237,
											"end": 5260,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5265,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5282,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 5230,
											"end": 5282,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5278,
											"end": 5279,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5276,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5280,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5282,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 5230,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5317,
											"end": 5326,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5327,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5336,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5336,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 5336,
											"end": 5366,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5401,
											"end": 5650,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 5401,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5525,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5511,
											"end": 5520,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5502,
											"end": 5509,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5521,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5494,
											"end": 5526,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5543,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 5491,
											"end": 5543,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5539,
											"end": 5540,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5537,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5529,
											"end": 5541,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5543,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 5491,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5571,
											"end": 5580,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5565,
											"end": 5581,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5590,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 5614,
											"end": 5619,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5590,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 5590,
											"end": 5620,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5655,
											"end": 5835,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 5655,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5720,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5767,
											"end": 5769,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5755,
											"end": 5764,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5753,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5742,
											"end": 5765,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5738,
											"end": 5770,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5735,
											"end": 5787,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5735,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 5735,
											"end": 5787,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5783,
											"end": 5784,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5781,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5773,
											"end": 5785,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5735,
											"end": 5787,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 5735,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5806,
											"end": 5829,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5806,
											"end": 5829,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5655,
											"end": 5835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5655,
											"end": 5835,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5840,
											"end": 6275,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 5840,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5893,
											"end": 5896,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5931,
											"end": 5936,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5937,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5958,
											"end": 5964,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5953,
											"end": 5956,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5946,
											"end": 5965,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5984,
											"end": 5988,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6013,
											"end": 6015,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6008,
											"end": 6011,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6004,
											"end": 6016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5997,
											"end": 6016,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5997,
											"end": 6016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6050,
											"end": 6052,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6043,
											"end": 6048,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6053,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6071,
											"end": 6072,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6095,
											"end": 6101,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6092,
											"end": 6093,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6089,
											"end": 6102,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6156,
											"end": 6169,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6156,
											"end": 6169,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6170,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6170,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6240,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6240,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6240,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6240,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6117,
											"end": 6118,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6110,
											"end": 6119,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6266,
											"end": 6269,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6269,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5840,
											"end": 6275,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5840,
											"end": 6275,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6280,
											"end": 6537,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 6280,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6321,
											"end": 6324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6359,
											"end": 6364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6353,
											"end": 6365,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6386,
											"end": 6392,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6381,
											"end": 6384,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6374,
											"end": 6393,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 6458,
											"end": 6464,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6451,
											"end": 6455,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6446,
											"end": 6449,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6442,
											"end": 6456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6435,
											"end": 6439,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6428,
											"end": 6433,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6424,
											"end": 6440,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 6402,
											"end": 6465,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6402,
											"end": 6465,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 6402,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6519,
											"end": 6521,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6498,
											"end": 6513,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6494,
											"end": 6523,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6485,
											"end": 6524,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6485,
											"end": 6524,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6485,
											"end": 6524,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6485,
											"end": 6524,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6526,
											"end": 6530,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6481,
											"end": 6531,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6531,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6280,
											"end": 6537,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6280,
											"end": 6537,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6542,
											"end": 6727,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 6542,
											"end": 6727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6584,
											"end": 6587,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6622,
											"end": 6627,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6616,
											"end": 6628,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6637,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 6682,
											"end": 6688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6677,
											"end": 6680,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6670,
											"end": 6674,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6663,
											"end": 6668,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6659,
											"end": 6675,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6637,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 6637,
											"end": 6689,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6637,
											"end": 6689,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 6637,
											"end": 6689,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 6721,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 6721,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 6721,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 6721,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 6721,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6542,
											"end": 6727,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6542,
											"end": 6727,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6850,
											"end": 8151,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 6850,
											"end": 8151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7127,
											"end": 7130,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7156,
											"end": 7157,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7189,
											"end": 7195,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7183,
											"end": 7196,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7219,
											"end": 7222,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7241,
											"end": 7242,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7269,
											"end": 7278,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7265,
											"end": 7267,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7261,
											"end": 7279,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 7251,
											"end": 7279,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7251,
											"end": 7279,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7329,
											"end": 7331,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7318,
											"end": 7327,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7314,
											"end": 7332,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7351,
											"end": 7369,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7341,
											"end": 7402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 7341,
											"end": 7402,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7395,
											"end": 7399,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 7387,
											"end": 7393,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7373,
											"end": 7400,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7373,
											"end": 7400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7341,
											"end": 7402,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 7341,
											"end": 7402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7421,
											"end": 7423,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7469,
											"end": 7471,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7461,
											"end": 7467,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7458,
											"end": 7472,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7438,
											"end": 7456,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7473,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7432,
											"end": 7597,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7432,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 7432,
											"end": 7597,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7496,
											"end": 7529,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7496,
											"end": 7529,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7552,
											"end": 7556,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 7549,
											"end": 7550,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7542,
											"end": 7557,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7582,
											"end": 7586,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7503,
											"end": 7506,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7570,
											"end": 7587,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7432,
											"end": 7597,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 7432,
											"end": 7597,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7631,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7640,
											"end": 7744,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7640,
											"end": 7744,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7640,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 7640,
											"end": 7744,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7758,
											"end": 7759,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7753,
											"end": 8073,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7753,
											"end": 8073,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7753,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 7753,
											"end": 8073,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7606,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 7606,
											"end": 8073,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7640,
											"end": 7744,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 7640,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7673,
											"end": 7697,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7697,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7661,
											"end": 7698,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 7661,
											"end": 7698,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7718,
											"end": 7734,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7718,
											"end": 7734,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 7718,
											"end": 7734,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7718,
											"end": 7734,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7640,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 7640,
											"end": 7744,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7753,
											"end": 8073,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 7753,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15516,
											"end": 15517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15509,
											"end": 15523,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 15509,
											"end": 15523,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15509,
											"end": 15523,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15553,
											"end": 15557,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15540,
											"end": 15558,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15540,
											"end": 15558,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 7849,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7862,
											"end": 8027,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 7862,
											"end": 8027,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7876,
											"end": 7882,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7873,
											"end": 7874,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7870,
											"end": 7883,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7862,
											"end": 8027,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7862,
											"end": 8027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 7862,
											"end": 8027,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7968,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7968,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7941,
											"end": 7952,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 7941,
											"end": 7952,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7941,
											"end": 7952,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7934,
											"end": 7969,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8013,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8013,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7891,
											"end": 7901,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7891,
											"end": 7901,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7862,
											"end": 8027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 7862,
											"end": 8027,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7862,
											"end": 8027,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 7862,
											"end": 8027,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8062,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8051,
											"end": 8054,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 8047,
											"end": 8063,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8040,
											"end": 8063,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 8040,
											"end": 8063,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7606,
											"end": 8073,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 7606,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7606,
											"end": 8073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7606,
											"end": 8073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7606,
											"end": 8073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7606,
											"end": 8073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7606,
											"end": 8073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7606,
											"end": 8073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8089,
											"end": 8145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 8114,
											"end": 8144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 8140,
											"end": 8143,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8114,
											"end": 8144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 8114,
											"end": 8144,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8114,
											"end": 8144,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 8114,
											"end": 8144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "173539B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6792,
											"end": 6812,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6792,
											"end": 6812,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6837,
											"end": 6838,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 6828,
											"end": 6839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 6839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6732,
											"end": 6845,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8089,
											"end": 8145,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 8089,
											"end": 8145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8145,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6850,
											"end": 8151,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6850,
											"end": 8151,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8156,
											"end": 8982,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 8156,
											"end": 8982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8553,
											"end": 8568,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8553,
											"end": 8568,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8553,
											"end": 8568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8535,
											"end": 8569,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8535,
											"end": 8569,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8605,
											"end": 8620,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8605,
											"end": 8620,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8600,
											"end": 8602,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8585,
											"end": 8603,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8585,
											"end": 8603,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8578,
											"end": 8621,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8515,
											"end": 8518,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 8652,
											"end": 8654,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8637,
											"end": 8655,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8637,
											"end": 8655,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8630,
											"end": 8661,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8630,
											"end": 8661,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8630,
											"end": 8661,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8478,
											"end": 8482,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 8684,
											"end": 8741,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8721,
											"end": 8740,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8721,
											"end": 8740,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8713,
											"end": 8719,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 8684,
											"end": 8741,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8684,
											"end": 8741,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 8684,
											"end": 8741,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8789,
											"end": 8798,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8781,
											"end": 8787,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8777,
											"end": 8799,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8772,
											"end": 8774,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8761,
											"end": 8770,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8757,
											"end": 8775,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8750,
											"end": 8800,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8823,
											"end": 8867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 8860,
											"end": 8866,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8852,
											"end": 8858,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8823,
											"end": 8867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 8823,
											"end": 8867,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8823,
											"end": 8867,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 8823,
											"end": 8867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8809,
											"end": 8867,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8809,
											"end": 8867,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8916,
											"end": 8925,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8908,
											"end": 8914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8904,
											"end": 8926,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8898,
											"end": 8901,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8887,
											"end": 8896,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8883,
											"end": 8902,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8876,
											"end": 8927,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8944,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 8969,
											"end": 8975,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8961,
											"end": 8967,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8944,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 8944,
											"end": 8976,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8944,
											"end": 8976,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 8944,
											"end": 8976,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8936,
											"end": 8976,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 8156,
											"end": 8982,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8156,
											"end": 8982,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8987,
											"end": 9547,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 8987,
											"end": 9547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9284,
											"end": 9299,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9284,
											"end": 9299,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9284,
											"end": 9299,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9266,
											"end": 9300,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9266,
											"end": 9300,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9336,
											"end": 9351,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9336,
											"end": 9351,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9331,
											"end": 9333,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9316,
											"end": 9334,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9316,
											"end": 9334,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9309,
											"end": 9352,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9383,
											"end": 9385,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9368,
											"end": 9386,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9368,
											"end": 9386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 9395,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 9395,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9361,
											"end": 9395,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9426,
											"end": 9428,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9411,
											"end": 9429,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9411,
											"end": 9429,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9404,
											"end": 9438,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9404,
											"end": 9438,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9404,
											"end": 9438,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9246,
											"end": 9249,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 9469,
											"end": 9472,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 9454,
											"end": 9473,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9454,
											"end": 9473,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9479,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9479,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9447,
											"end": 9479,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9209,
											"end": 9213,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9209,
											"end": 9213,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9496,
											"end": 9541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 9496,
											"end": 9541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9521,
											"end": 9540,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9521,
											"end": 9540,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9513,
											"end": 9519,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9496,
											"end": 9541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 9496,
											"end": 9541,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9496,
											"end": 9541,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 9496,
											"end": 9541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9488,
											"end": 9541,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 8987,
											"end": 9547,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8987,
											"end": 9547,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9552,
											"end": 9813,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 9552,
											"end": 9813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9731,
											"end": 9733,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9720,
											"end": 9729,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9713,
											"end": 9734,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9694,
											"end": 9698,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9751,
											"end": 9807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 9803,
											"end": 9805,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9792,
											"end": 9801,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9788,
											"end": 9806,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9786,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9751,
											"end": 9807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 9751,
											"end": 9807,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9818,
											"end": 10283,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 9818,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10075,
											"end": 10077,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10064,
											"end": 10073,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10057,
											"end": 10078,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10038,
											"end": 10042,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10101,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 10153,
											"end": 10155,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10142,
											"end": 10151,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10138,
											"end": 10156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10130,
											"end": 10136,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10101,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 10101,
											"end": 10157,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10101,
											"end": 10157,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 10101,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10205,
											"end": 10214,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10197,
											"end": 10203,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10193,
											"end": 10215,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10188,
											"end": 10190,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10177,
											"end": 10186,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10173,
											"end": 10191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10166,
											"end": 10216,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10233,
											"end": 10277,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10262,
											"end": 10268,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10233,
											"end": 10277,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 10233,
											"end": 10277,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10480,
											"end": 10699,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 10480,
											"end": 10699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10629,
											"end": 10631,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10618,
											"end": 10627,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10611,
											"end": 10632,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10592,
											"end": 10596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10649,
											"end": 10693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 10689,
											"end": 10691,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10678,
											"end": 10687,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10674,
											"end": 10692,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10666,
											"end": 10672,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10649,
											"end": 10693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 10649,
											"end": 10693,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11125,
											"end": 11529,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 11125,
											"end": 11529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11327,
											"end": 11329,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11309,
											"end": 11330,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11309,
											"end": 11330,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11309,
											"end": 11330,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11366,
											"end": 11368,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 11346,
											"end": 11364,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11346,
											"end": 11364,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11346,
											"end": 11364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11339,
											"end": 11369,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11405,
											"end": 11439,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 11400,
											"end": 11402,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11385,
											"end": 11403,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11385,
											"end": 11403,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11378,
											"end": 11440,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11471,
											"end": 11473,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11456,
											"end": 11474,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11474,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11449,
											"end": 11487,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11519,
											"end": 11522,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11504,
											"end": 11523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11504,
											"end": 11523,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11125,
											"end": 11529,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12355,
											"end": 12756,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 12355,
											"end": 12756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12557,
											"end": 12559,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12539,
											"end": 12560,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12539,
											"end": 12560,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12539,
											"end": 12560,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12596,
											"end": 12598,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 12576,
											"end": 12594,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12576,
											"end": 12594,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12576,
											"end": 12594,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12569,
											"end": 12599,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12635,
											"end": 12669,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 12630,
											"end": 12632,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12615,
											"end": 12633,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12615,
											"end": 12633,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12608,
											"end": 12670,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12701,
											"end": 12703,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12686,
											"end": 12704,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12686,
											"end": 12704,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12679,
											"end": 12714,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12746,
											"end": 12749,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 12731,
											"end": 12750,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12731,
											"end": 12750,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12355,
											"end": 12756,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13180,
											"end": 13586,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 13180,
											"end": 13586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13382,
											"end": 13384,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13364,
											"end": 13385,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13364,
											"end": 13385,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13364,
											"end": 13385,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13421,
											"end": 13423,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 13401,
											"end": 13419,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13401,
											"end": 13419,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13401,
											"end": 13419,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13394,
											"end": 13424,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13460,
											"end": 13494,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 13455,
											"end": 13457,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13440,
											"end": 13458,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13440,
											"end": 13458,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13433,
											"end": 13495,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13526,
											"end": 13528,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13511,
											"end": 13529,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13511,
											"end": 13529,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13544,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13576,
											"end": 13579,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 13561,
											"end": 13580,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13561,
											"end": 13580,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13180,
											"end": 13586,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15255,
											"end": 15438,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 15255,
											"end": 15438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15315,
											"end": 15319,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15348,
											"end": 15366,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15340,
											"end": 15346,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15337,
											"end": 15367,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15334,
											"end": 15390,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15334,
											"end": 15390,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 15334,
											"end": 15390,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15370,
											"end": 15388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 15370,
											"end": 15388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 15370,
											"end": 15388,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 15370,
											"end": 15388,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 15370,
											"end": 15388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15415,
											"end": 15416,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 15411,
											"end": 15425,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 15427,
											"end": 15431,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15407,
											"end": 15432,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15407,
											"end": 15432,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15255,
											"end": 15438,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15569,
											"end": 15697,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 15569,
											"end": 15697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15609,
											"end": 15612,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15640,
											"end": 15641,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15636,
											"end": 15642,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 15633,
											"end": 15634,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15630,
											"end": 15643,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15627,
											"end": 15666,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15627,
											"end": 15666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 15627,
											"end": 15666,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15646,
											"end": 15664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 15646,
											"end": 15664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 15646,
											"end": 15664,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 15646,
											"end": 15664,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 15646,
											"end": 15664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15682,
											"end": 15691,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15682,
											"end": 15691,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15569,
											"end": 15697,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15702,
											"end": 15822,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 15702,
											"end": 15822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15742,
											"end": 15743,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15768,
											"end": 15769,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15758,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 15758,
											"end": 15793,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15773,
											"end": 15791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 15773,
											"end": 15791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 15773,
											"end": 15791,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 15773,
											"end": 15791,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 15773,
											"end": 15791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15807,
											"end": 15816,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 15807,
											"end": 15816,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15702,
											"end": 15822,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15827,
											"end": 15952,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 15827,
											"end": 15952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15867,
											"end": 15871,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15895,
											"end": 15896,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15892,
											"end": 15893,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15889,
											"end": 15897,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 15886,
											"end": 15920,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15886,
											"end": 15920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 15886,
											"end": 15920,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15900,
											"end": 15918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 15900,
											"end": 15918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 15900,
											"end": 15918,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 15900,
											"end": 15918,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 15900,
											"end": 15918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15937,
											"end": 15946,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15937,
											"end": 15946,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15827,
											"end": 15952,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15957,
											"end": 16215,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 15957,
											"end": 16215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16029,
											"end": 16030,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16039,
											"end": 16152,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 16039,
											"end": 16152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16053,
											"end": 16059,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16050,
											"end": 16051,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16047,
											"end": 16060,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 16039,
											"end": 16152,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16039,
											"end": 16152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 16039,
											"end": 16152,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16129,
											"end": 16140,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16129,
											"end": 16140,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16129,
											"end": 16140,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16123,
											"end": 16141,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16110,
											"end": 16121,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16110,
											"end": 16121,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16110,
											"end": 16121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16103,
											"end": 16142,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16075,
											"end": 16077,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16068,
											"end": 16078,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16039,
											"end": 16152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 16039,
											"end": 16152,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16039,
											"end": 16152,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 16039,
											"end": 16152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16170,
											"end": 16176,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16167,
											"end": 16168,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16164,
											"end": 16177,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16161,
											"end": 16209,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16161,
											"end": 16209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 16161,
											"end": 16209,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16205,
											"end": 16206,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16196,
											"end": 16202,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16191,
											"end": 16194,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16187,
											"end": 16203,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16180,
											"end": 16207,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16161,
											"end": 16209,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 16161,
											"end": 16209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16161,
											"end": 16209,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15957,
											"end": 16215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15957,
											"end": 16215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15957,
											"end": 16215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15957,
											"end": 16215,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16220,
											"end": 16469,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 16220,
											"end": 16469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16330,
											"end": 16332,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 16311,
											"end": 16324,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16311,
											"end": 16324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16307,
											"end": 16334,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16295,
											"end": 16335,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16295,
											"end": 16335,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16365,
											"end": 16383,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16350,
											"end": 16384,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16350,
											"end": 16384,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16386,
											"end": 16408,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16386,
											"end": 16408,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16386,
											"end": 16408,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 16347,
											"end": 16409,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 16344,
											"end": 16432,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16344,
											"end": 16432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 16344,
											"end": 16432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16412,
											"end": 16430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 16412,
											"end": 16430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 16412,
											"end": 16430,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16412,
											"end": 16430,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 16412,
											"end": 16430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16448,
											"end": 16450,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16441,
											"end": 16463,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16220,
											"end": 16469,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16474,
											"end": 16609,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 16474,
											"end": 16609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16513,
											"end": 16516,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16534,
											"end": 16551,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16534,
											"end": 16551,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 16531,
											"end": 16574,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16531,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 16531,
											"end": 16574,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16554,
											"end": 16572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 16554,
											"end": 16572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 16554,
											"end": 16572,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16554,
											"end": 16572,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 16554,
											"end": 16572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16601,
											"end": 16602,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 16590,
											"end": 16603,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16590,
											"end": 16603,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16474,
											"end": 16609,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16614,
											"end": 16726,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 16614,
											"end": 16726,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16646,
											"end": 16647,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16672,
											"end": 16673,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16662,
											"end": 16697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 16662,
											"end": 16697,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16677,
											"end": 16695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 16677,
											"end": 16695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 16677,
											"end": 16695,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16677,
											"end": 16695,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 16677,
											"end": 16695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16711,
											"end": 16720,
											"name": "MOD",
											"source": 10
										},
										{
											"begin": 16711,
											"end": 16720,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16614,
											"end": 16726,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16731,
											"end": 16858,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 16731,
											"end": 16858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16792,
											"end": 16802,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 16787,
											"end": 16790,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 16783,
											"end": 16803,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 16780,
											"end": 16781,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16773,
											"end": 16804,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16823,
											"end": 16827,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 16820,
											"end": 16821,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 16813,
											"end": 16828,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16847,
											"end": 16851,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 16844,
											"end": 16845,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16837,
											"end": 16852,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 16863,
											"end": 16990,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 16863,
											"end": 16990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16924,
											"end": 16934,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 16919,
											"end": 16922,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 16915,
											"end": 16935,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 16912,
											"end": 16913,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16905,
											"end": 16936,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16955,
											"end": 16959,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 16952,
											"end": 16953,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 16945,
											"end": 16960,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16979,
											"end": 16983,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 16976,
											"end": 16977,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16969,
											"end": 16984,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 16995,
											"end": 17122,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 16995,
											"end": 17122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17056,
											"end": 17066,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 17051,
											"end": 17054,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 17047,
											"end": 17067,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 17044,
											"end": 17045,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17037,
											"end": 17068,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17087,
											"end": 17091,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 17084,
											"end": 17085,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17077,
											"end": 17092,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17111,
											"end": 17115,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17108,
											"end": 17109,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17101,
											"end": 17116,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17127,
											"end": 17254,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 17127,
											"end": 17254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17188,
											"end": 17198,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 17183,
											"end": 17186,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 17179,
											"end": 17199,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 17176,
											"end": 17177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17169,
											"end": 17200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17219,
											"end": 17223,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 17216,
											"end": 17217,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17209,
											"end": 17224,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17243,
											"end": 17247,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17240,
											"end": 17241,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17233,
											"end": 17248,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17259,
											"end": 17438,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 17259,
											"end": 17438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17294,
											"end": 17297,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17336,
											"end": 17337,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 17318,
											"end": 17334,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 17315,
											"end": 17338,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17312,
											"end": 17432,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17312,
											"end": 17432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 17312,
											"end": 17432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17382,
											"end": 17383,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17379,
											"end": 17380,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17376,
											"end": 17377,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17361,
											"end": 17384,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17419,
											"end": 17420,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17413,
											"end": 17421,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 17408,
											"end": 17411,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 17404,
											"end": 17422,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 17312,
											"end": 17432,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 17312,
											"end": 17432,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17259,
											"end": 17438,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17259,
											"end": 17438,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17443,
											"end": 18114,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 17443,
											"end": 18114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17482,
											"end": 17485,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17524,
											"end": 17528,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 17506,
											"end": 17522,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 17503,
											"end": 17529,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 17500,
											"end": 17539,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17500,
											"end": 17539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 17500,
											"end": 17539,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17443,
											"end": 18114,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17443,
											"end": 18114,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17500,
											"end": 17539,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 17500,
											"end": 17539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17566,
											"end": 17568,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17560,
											"end": 17569,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17631,
											"end": 17647,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 17627,
											"end": 17652,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17627,
											"end": 17652,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17624,
											"end": 17625,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17560,
											"end": 17569,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17603,
											"end": 17653,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 17682,
											"end": 17686,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17676,
											"end": 17687,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 17706,
											"end": 17722,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 17741,
											"end": 17759,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17812,
											"end": 17814,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17805,
											"end": 17809,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17797,
											"end": 17803,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17793,
											"end": 17810,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17790,
											"end": 17815,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17785,
											"end": 17787,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17777,
											"end": 17783,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17774,
											"end": 17788,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17771,
											"end": 17816,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 17768,
											"end": 17826,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17768,
											"end": 17826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 17768,
											"end": 17826,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17819,
											"end": 17824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17819,
											"end": 17824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17819,
											"end": 17824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17819,
											"end": 17824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17819,
											"end": 17824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17443,
											"end": 18114,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17443,
											"end": 18114,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17768,
											"end": 17826,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 17768,
											"end": 17826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17856,
											"end": 17862,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17850,
											"end": 17854,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17846,
											"end": 17863,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17835,
											"end": 17863,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17835,
											"end": 17863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17892,
											"end": 17895,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17886,
											"end": 17896,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 17919,
											"end": 17921,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17911,
											"end": 17917,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17908,
											"end": 17922,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17905,
											"end": 17932,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17905,
											"end": 17932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 17905,
											"end": 17932,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17925,
											"end": 17930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17925,
											"end": 17930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17925,
											"end": 17930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17925,
											"end": 17930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17925,
											"end": 17930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17925,
											"end": 17930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17443,
											"end": 18114,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17443,
											"end": 18114,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17905,
											"end": 17932,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 17905,
											"end": 17932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18009,
											"end": 18011,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17990,
											"end": 18006,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 17984,
											"end": 17988,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 17980,
											"end": 18007,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17976,
											"end": 18012,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17969,
											"end": 17973,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17960,
											"end": 17966,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17955,
											"end": 17958,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17951,
											"end": 17967,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17947,
											"end": 17974,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17944,
											"end": 18013,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17941,
											"end": 18023,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17941,
											"end": 18023,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 17941,
											"end": 18023,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18016,
											"end": 18021,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18016,
											"end": 18021,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18016,
											"end": 18021,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18016,
											"end": 18021,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18016,
											"end": 18021,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18016,
											"end": 18021,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17443,
											"end": 18114,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17443,
											"end": 18114,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17941,
											"end": 18023,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 17941,
											"end": 18023,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18032,
											"end": 18089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 18083,
											"end": 18087,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18074,
											"end": 18080,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18066,
											"end": 18072,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 18062,
											"end": 18081,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18058,
											"end": 18088,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18052,
											"end": 18056,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 18032,
											"end": 18089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 18032,
											"end": 18089,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 18032,
											"end": 18089,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 18032,
											"end": 18089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18105,
											"end": 18108,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18105,
											"end": 18108,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 17443,
											"end": 18114,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17443,
											"end": 18114,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18119,
											"end": 18250,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 18119,
											"end": 18250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18193,
											"end": 18225,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18193,
											"end": 18225,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 18183,
											"end": 18226,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18183,
											"end": 18226,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 18173,
											"end": 18244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 18173,
											"end": 18244,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18240,
											"end": 18241,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18237,
											"end": 18238,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 18230,
											"end": 18242,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 18173,
											"end": 18244,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 18173,
											"end": 18244,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18119,
											"end": 18250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18119,
											"end": 18250,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xc8a4924ba929ef1db6f8cd5c36daee12a1d2d40f7abf563cff3f6416f99330b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b794b5d9359e4c66a3a2dfcdd730eef1ad6f74c2190d2ab312cf71c66f887be\",\"dweb:/ipfs/QmXXgPFs2DoSA7H5ftdrNPTFgyg2qvgEJNbwZzLBGeZ6va\"]},\"contracts/OZ_contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"contracts/OZ_contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"contracts/OZ_contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/OZ_contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"contracts/OZ_contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "contracts/OZ_contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 32,
								"contract": "contracts/OZ_contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 34,
								"contract": "contracts/OZ_contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
				"ERC1155Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":\"ERC1155Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xc8a4924ba929ef1db6f8cd5c36daee12a1d2d40f7abf563cff3f6416f99330b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b794b5d9359e4c66a3a2dfcdd730eef1ad6f74c2190d2ab312cf71c66f887be\",\"dweb:/ipfs/QmXXgPFs2DoSA7H5ftdrNPTFgyg2qvgEJNbwZzLBGeZ6va\"]},\"contracts/OZ_contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0x78ef8790d01aa52c4b4ec726fc315d51ac9057601a795f9e337dcb4a07dfbe67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e163a6d5e2f6dfa60105858733883d0bf39fdc908660112b7d0341da189398f\",\"dweb:/ipfs/QmeBAwUKHBBrnq6hAHsvRpYszzPDva4QKaCRe8Zy8EVi76\"]},\"contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"contracts/OZ_contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"contracts/OZ_contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/OZ_contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"contracts/OZ_contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 32,
								"contract": "contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 34,
								"contract": "contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/OZ_contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/OZ_contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220997e5580238e76a271347818718798b935359de02774698895e9fa02ae62fd1264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220997e5580238e76a271347818718798b935359de02774698895e9fa02ae62fd1264736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 PUSH31 0x5580238E76A271347818718798B935359DE02774698895E9FA02AE62FD1264 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8061:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220997e5580238e76a271347818718798b935359de02774698895e9fa02ae62fd1264736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 PUSH31 0x5580238E76A271347818718798B935359DE02774698895E9FA02AE62FD1264 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220997e5580238e76a271347818718798b935359de02774698895e9fa02ae62fd1264736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/OZ_contracts/utils/Strings.sol\":146:2031  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":146:2031  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122009333c5cfeb9decf3251d8e3cc0c2d37dff0a37bfa5bd717a852be628be85b5564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122009333c5cfeb9decf3251d8e3cc0c2d37dff0a37bfa5bd717a852be628be85b5564736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD CALLER EXTCODECOPY 0x5C INVALID 0xB9 0xDE 0xCF ORIGIN MLOAD 0xD8 0xE3 0xCC 0xC 0x2D CALLDATACOPY 0xDF CREATE LOG3 PUSH28 0xFA5BD717A852BE628BE85B5564736F6C634300080700330000000000 ",
							"sourceMap": "146:1885:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;146:1885:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122009333c5cfeb9decf3251d8e3cc0c2d37dff0a37bfa5bd717a852be628be85b5564736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD CALLER EXTCODECOPY 0x5C INVALID 0xB9 0xDE 0xCF ORIGIN MLOAD 0xD8 0xE3 0xCC 0xC 0x2D CALLDATACOPY 0xDF CREATE LOG3 PUSH28 0xFA5BD717A852BE628BE85B5564736F6C634300080700330000000000 ",
							"sourceMap": "146:1885:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122009333c5cfeb9decf3251d8e3cc0c2d37dff0a37bfa5bd717a852be628be85b5564736f6c63430008070033",
									".code": [
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/OZ_contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1791
						],
						"Context": [
							1813
						],
						"ERC1155": [
							1249
						],
						"ERC165": [
							2040
						],
						"IERC1155": [
							1371
						],
						"IERC1155MetadataURI": [
							1496
						],
						"IERC1155Receiver": [
							1412
						],
						"IERC165": [
							2052
						],
						"Strings": [
							2016
						]
					},
					"id": 1250,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:0"
						},
						{
							"absolutePath": "contracts/OZ_contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1250,
							"sourceUnit": 1372,
							"src": "134:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1250,
							"sourceUnit": 1413,
							"src": "159:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1250,
							"sourceUnit": 1497,
							"src": "192:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1250,
							"sourceUnit": 1792,
							"src": "239:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1250,
							"sourceUnit": 1814,
							"src": "273:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1250,
							"sourceUnit": 2041,
							"src": "307:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1250,
							"sourceUnit": 2017,
							"src": "354:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1813,
										"src": "624:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "624:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2040,
										"src": "633:6:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "633:6:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1371,
										"src": "641:8:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "641:8:0"
								},
								{
									"baseName": {
										"id": 16,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1496,
										"src": "651:19:0"
									},
									"id": 17,
									"nodeType": "InheritanceSpecifier",
									"src": "651:19:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "389:214:0",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1249,
							"linearizedBaseContracts": [
								1249,
								1496,
								1371,
								2040,
								2052,
								1813
							],
							"name": "ERC1155",
							"nameLocation": "613:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 20,
									"libraryName": {
										"id": 18,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1791,
										"src": "683:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "677:26:0",
									"typeName": {
										"id": 19,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "695:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "814:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1249,
									"src": "758:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 25,
										"keyType": {
											"id": 21,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "766:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "758:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 24,
											"keyType": {
												"id": 22,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "785:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "777:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 23,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "796:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "933:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1249,
									"src": "880:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 31,
										"keyType": {
											"id": 27,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "888:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "880:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 30,
											"keyType": {
												"id": 28,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "907:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "899:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 29,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "918:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 34,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1087:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1249,
									"src": "1072:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 33,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1072:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1173:30:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 41,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "1191:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 40,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "1183:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1183:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1183:13:0"
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1098:38:0",
										"text": " @dev See {_setURI}."
									},
									"id": 45,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1167:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1153:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 36,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1153:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1152:20:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1173:0:0"
									},
									"scope": 1249,
									"src": "1141:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2039,
										2051
									],
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "1378:197:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 56,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "1407:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 58,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1371,
																			"src": "1427:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1371_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1371_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 57,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1422:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1422:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1371",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1422:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1407:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 62,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "1464:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 64,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1496,
																			"src": "1484:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1496_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1496_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 63,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1479:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 65,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1479:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1496",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1479:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1464:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1407:109:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 71,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "1556:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 69,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1532:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1249_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2039,
															"src": "1532:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1532:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1407:161:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 55,
												"id": 74,
												"nodeType": "Return",
												"src": "1388:180:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1209:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1279:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 52,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 50,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2040,
												"src": "1346:6:0"
											},
											{
												"id": 51,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2052,
												"src": "1354:7:0"
											}
										],
										"src": "1337:25:0"
									},
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1304:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1297:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 47,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1297:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:20:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1372:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 53,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1372:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1371:6:0"
									},
									"scope": 1249,
									"src": "1270:305:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1495
									],
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "2052:169:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 89,
																	"name": "_uri",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "2123:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 92,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 79,
																			"src": "2162:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 90,
																			"name": "Strings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2016,
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Strings_$2016_$",
																				"typeString": "type(library Strings)"
																			}
																		},
																		"id": 91,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1898,
																		"src": "2145:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2145:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"hexValue": "2e6a736f6e",
																	"id": 94,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2183:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
																		"typeString": "literal_string \".json\""
																	},
																	"value": ".json"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
																		"typeString": "literal_string \".json\""
																	}
																],
																"expression": {
																	"id": 87,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2089:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2089:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2089:115:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2069:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 85,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2069:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2069:145:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 84,
												"id": 97,
												"nodeType": "Return",
												"src": "2062:152:0"
											}
										]
									},
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "1581:388:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 99,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1983:3:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 81,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2019:8:0"
									},
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1995:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "1987:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1986:12:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2037:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 82,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2037:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2036:15:0"
									},
									"scope": 1249,
									"src": "1974:247:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1309
									],
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2458:133:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 111,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "2476:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2495:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2487:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 112,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2487:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2487:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2476:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2499:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															},
															"value": "ERC1155: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															}
														],
														"id": 110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2468:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2468:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "2468:76:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 121,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "2572:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 122,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "2581:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 120,
														"name": "_balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2561:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2561:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 109,
												"id": 124,
												"nodeType": "Return",
												"src": "2554:30:0"
											}
										]
									},
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "2227:131:0",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2372:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 106,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2431:8:0"
									},
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2390:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2382:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2382:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2407:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2399:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2381:29:0"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2449:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:9:0"
									},
									"scope": 1249,
									"src": "2363:228:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2685:46:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 135,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "2702:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 137,
														"indexExpression": {
															"id": 136,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "2712:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2702:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 139,
													"indexExpression": {
														"id": 138,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "2716:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2702:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 134,
												"id": 140,
												"nodeType": "Return",
												"src": "2695:29:0"
											}
										]
									},
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_balanceOf",
									"nameLocation": "2606:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2625:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2617:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2617:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2642:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2634:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2634:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2616:29:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2676:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:9:0"
									},
									"scope": 1249,
									"src": "2597:134:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1322
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "3061:343:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 157,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "3079:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3079:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 159,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "3098:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3098:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3079:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3110:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3071:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3071:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "3071:83:0"
											},
											{
												"assignments": [
													169
												],
												"declarations": [
													{
														"constant": false,
														"id": 169,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "3190:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 205,
														"src": "3173:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 167,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3173:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 168,
															"nodeType": "ArrayTypeName",
															"src": "3173:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 176,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 173,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "3220:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3220:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 172,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3206:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 170,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3210:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 171,
															"nodeType": "ArrayTypeName",
															"src": "3210:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3206:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3173:63:0"
											},
											{
												"body": {
													"id": 201,
													"nodeType": "Block",
													"src": "3293:74:0",
													"statements": [
														{
															"expression": {
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 188,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 169,
																		"src": "3307:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 190,
																	"indexExpression": {
																		"id": 189,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 178,
																		"src": "3321:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3307:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 192,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 146,
																				"src": "3336:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 194,
																			"indexExpression": {
																				"id": 193,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "3345:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3336:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 195,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 149,
																				"src": "3349:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 197,
																			"indexExpression": {
																				"id": 196,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "3353:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3349:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 191,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 126,
																		"src": "3326:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3326:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3307:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 200,
															"nodeType": "ExpressionStatement",
															"src": "3307:49:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 181,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3267:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 182,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "3271:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3271:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3267:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 202,
												"initializationExpression": {
													"assignments": [
														178
													],
													"declarations": [
														{
															"constant": false,
															"id": 178,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3260:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 202,
															"src": "3252:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 177,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3252:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 180,
													"initialValue": {
														"hexValue": "30",
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3264:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3252:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3288:3:0",
														"subExpression": {
															"id": 185,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "3290:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 187,
													"nodeType": "ExpressionStatement",
													"src": "3288:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3247:120:0"
											},
											{
												"expression": {
													"id": 203,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "3384:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 155,
												"id": 204,
												"nodeType": "Return",
												"src": "3377:20:0"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2737:146:0",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2897:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 151,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3013:8:0"
									},
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2929:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2912:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 144,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2912:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 145,
													"nodeType": "ArrayTypeName",
													"src": "2912:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2956:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2939:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 147,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2939:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 148,
													"nodeType": "ArrayTypeName",
													"src": "2939:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:49:0"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3039:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 152,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3039:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 153,
													"nodeType": "ArrayTypeName",
													"src": "3039:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3038:18:0"
									},
									"scope": 1249,
									"src": "2888:516:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1330
									],
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "3556:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 216,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "3585:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3585:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 218,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "3599:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 219,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "3609:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 215,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "3566:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3566:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "3566:52:0"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3410:57:0",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3481:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 213,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3547:8:0"
									},
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3507:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "3499:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3522:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "3517:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 210,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3517:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:33:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3556:0:0"
									},
									"scope": 1249,
									"src": "3472:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1340
									],
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "3797:61:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 234,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "3814:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 236,
														"indexExpression": {
															"id": 235,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "3833:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3814:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 238,
													"indexExpression": {
														"id": 237,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "3842:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3814:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 233,
												"id": 239,
												"nodeType": "Return",
												"src": "3807:44:0"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "3631:56:0",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3701:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 230,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3773:8:0"
									},
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3726:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3718:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3743:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3735:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3735:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3717:35:0"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3791:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 231,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3791:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:6:0"
									},
									"scope": 1249,
									"src": "3692:166:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1354
									],
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "4094:220:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 257,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "4125:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 258,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1803,
																		"src": "4133:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4133:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4125:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 262,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "4166:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 263,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1803,
																			"src": "4172:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4172:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 261,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "4149:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4149:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4125:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4199:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 256,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4104:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4104:148:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "4104:148:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 271,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "4280:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 272,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "4286:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 273,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4290:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 274,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "4294:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 275,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "4302:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 270,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "4262:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4262:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4262:45:0"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3864:56:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3934:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 254,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4085:8:0"
									},
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3968:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "3960:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3960:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3990:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "3982:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3982:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4010:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4002:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4030:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4022:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4059:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4046:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 251,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4046:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3950:119:0"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4094:0:0"
									},
									"scope": 1249,
									"src": "3925:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1370
									],
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "4580:236:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 297,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 282,
																	"src": "4611:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 298,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1803,
																		"src": "4619:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4619:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4611:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 302,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 282,
																		"src": "4652:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 303,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1803,
																			"src": "4658:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4658:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 301,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "4635:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4635:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4611:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4685:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 296,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4590:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4590:157:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "4590:157:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 311,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "4780:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 312,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "4786:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 313,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "4790:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 314,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "4795:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 315,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "4804:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 310,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "4757:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4757:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "4757:52:0"
											}
										]
									},
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "4320:61:0",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4395:21:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 294,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4571:8:0"
									},
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4434:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4426:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4456:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4448:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4448:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4485:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4468:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 285,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4468:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 286,
													"nodeType": "ArrayTypeName",
													"src": "4468:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4515:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4498:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 288,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4498:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 289,
													"nodeType": "ArrayTypeName",
													"src": "4498:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4545:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4532:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 291,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4532:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4416:139:0"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4580:0:0"
									},
									"scope": 1249,
									"src": "4386:430:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "5430:784:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 334,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "5448:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5462:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5454:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 335,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5454:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5454:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5448:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5466:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 333,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5440:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5440:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "5440:66:0"
											},
											{
												"assignments": [
													344
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5525:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 435,
														"src": "5517:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 343,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5517:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 347,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 345,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "5536:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5536:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5517:31:0"
											},
											{
												"assignments": [
													352
												],
												"declarations": [
													{
														"constant": false,
														"id": 352,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "5575:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 435,
														"src": "5558:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 350,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 351,
															"nodeType": "ArrayTypeName",
															"src": "5558:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 356,
												"initialValue": {
													"arguments": [
														{
															"id": 354,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "5599:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 353,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "5581:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5581:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5558:44:0"
											},
											{
												"assignments": [
													361
												],
												"declarations": [
													{
														"constant": false,
														"id": 361,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "5629:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 435,
														"src": "5612:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 359,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5612:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 360,
															"nodeType": "ArrayTypeName",
															"src": "5612:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 365,
												"initialValue": {
													"arguments": [
														{
															"id": 363,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "5657:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 362,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "5639:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5639:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5612:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 367,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "5696:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 368,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "5706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "5712:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "5716:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 371,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "5721:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 372,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "5730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 366,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "5675:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5675:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "5675:60:0"
											},
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5754:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 435,
														"src": "5746:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 375,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5746:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 382,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 377,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "5768:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 379,
														"indexExpression": {
															"id": 378,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "5778:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5768:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 381,
													"indexExpression": {
														"id": 380,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "5782:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5768:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5746:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 384,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "5805:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 385,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "5820:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5805:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5828:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 383,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5797:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5797:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "5797:76:0"
											},
											{
												"id": 400,
												"nodeType": "UncheckedBlock",
												"src": "5883:77:0",
												"statements": [
													{
														"expression": {
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 390,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 26,
																		"src": "5907:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 393,
																	"indexExpression": {
																		"id": 391,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 326,
																		"src": "5917:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5907:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 394,
																"indexExpression": {
																	"id": 392,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "5921:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5907:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 395,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 376,
																	"src": "5929:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 396,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "5943:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5929:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5907:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 399,
														"nodeType": "ExpressionStatement",
														"src": "5907:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 401,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5969:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 404,
															"indexExpression": {
																"id": 402,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "5979:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5969:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 405,
														"indexExpression": {
															"id": 403,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "5983:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5969:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 406,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "5990:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5969:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "5969:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 410,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "6027:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 411,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "6037:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 412,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "6043:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 413,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "6047:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 414,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "6051:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 409,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "6012:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6012:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "EmitStatement",
												"src": "6007:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "6089:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 419,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "6099:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 420,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "6105:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 421,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "6109:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 422,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "6114:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 423,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "6123:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 417,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "6069:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6069:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "6069:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 427,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "6170:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 428,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "6180:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 429,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "6186:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 430,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "6190:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 431,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "6194:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 432,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "6202:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 426,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "6139:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6139:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "6139:68:0"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "4823:439:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "5276:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5311:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "5303:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5303:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5333:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "5325:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5353:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "5345:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5373:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "5365:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5402:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "5389:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 329,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5389:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5293:119:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5430:0:0"
									},
									"scope": 1249,
									"src": "5267:947:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "6748:927:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 453,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "6766:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6766:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 455,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "6780:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6780:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6766:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6796:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6758:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6758:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "6758:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 462,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "6857:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6871:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6863:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 463,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6863:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6863:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6857:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6875:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 461,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6849:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6849:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "6849:66:0"
											},
											{
												"assignments": [
													472
												],
												"declarations": [
													{
														"constant": false,
														"id": 472,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6934:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "6926:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 471,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6926:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 475,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 473,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "6945:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6945:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6926:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 477,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "6989:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 478,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "6999:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "7005:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 480,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "7009:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 481,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "7014:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 482,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "7023:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 476,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "6968:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6968:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "6968:60:0"
											},
											{
												"body": {
													"id": 542,
													"nodeType": "Block",
													"src": "7080:370:0",
													"statements": [
														{
															"assignments": [
																497
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 497,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "7102:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 542,
																	"src": "7094:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 496,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7094:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 501,
															"initialValue": {
																"baseExpression": {
																	"id": 498,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "7107:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 500,
																"indexExpression": {
																	"id": 499,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "7111:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7107:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7094:19:0"
														},
														{
															"assignments": [
																503
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 503,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "7135:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 542,
																	"src": "7127:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 502,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7127:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 507,
															"initialValue": {
																"baseExpression": {
																	"id": 504,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "7144:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 506,
																"indexExpression": {
																	"id": 505,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "7152:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7144:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7127:27:0"
														},
														{
															"assignments": [
																509
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 509,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7177:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 542,
																	"src": "7169:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 508,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7169:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 515,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 510,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 26,
																		"src": "7191:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 512,
																	"indexExpression": {
																		"id": 511,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 497,
																		"src": "7201:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7191:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 514,
																"indexExpression": {
																	"id": 513,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "7205:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7191:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7169:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 517,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 509,
																			"src": "7232:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 518,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 503,
																			"src": "7247:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7232:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7255:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 516,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7224:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7224:76:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 522,
															"nodeType": "ExpressionStatement",
															"src": "7224:76:0"
														},
														{
															"id": 533,
															"nodeType": "UncheckedBlock",
															"src": "7314:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 523,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 26,
																					"src": "7342:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 526,
																				"indexExpression": {
																					"id": 524,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 497,
																					"src": "7352:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7342:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 527,
																			"indexExpression": {
																				"id": 525,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 439,
																				"src": "7356:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7342:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 528,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 509,
																				"src": "7364:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 529,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 503,
																				"src": "7378:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7364:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7342:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 532,
																	"nodeType": "ExpressionStatement",
																	"src": "7342:42:0"
																}
															]
														},
														{
															"expression": {
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 534,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 26,
																			"src": "7412:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 537,
																		"indexExpression": {
																			"id": 535,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 497,
																			"src": "7422:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7412:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 538,
																	"indexExpression": {
																		"id": 536,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "7426:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7412:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 539,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "7433:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7412:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 541,
															"nodeType": "ExpressionStatement",
															"src": "7412:27:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 489,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "7059:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 490,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "7063:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7063:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7059:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 543,
												"initializationExpression": {
													"assignments": [
														486
													],
													"declarations": [
														{
															"constant": false,
															"id": 486,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7052:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 543,
															"src": "7044:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 485,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7044:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 488,
													"initialValue": {
														"hexValue": "30",
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7056:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7044:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "7075:3:0",
														"subExpression": {
															"id": 493,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "7077:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 495,
													"nodeType": "ExpressionStatement",
													"src": "7075:3:0"
												},
												"nodeType": "ForStatement",
												"src": "7039:411:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 545,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "7479:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 546,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "7489:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 547,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "7495:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 548,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "7499:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 549,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "7504:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 544,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1283,
														"src": "7465:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7465:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "EmitStatement",
												"src": "7460:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 553,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "7543:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 554,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "7553:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 555,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "7559:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 556,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "7563:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 557,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "7568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 558,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "7577:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 552,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "7523:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7523:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "7523:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 562,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "7629:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 563,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "7639:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 564,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "7645:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "7649:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 566,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "7654:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 567,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "7663:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 561,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "7593:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7593:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "7593:75:0"
											}
										]
									},
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "6220:335:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6569:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6609:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "6601:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6601:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6631:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "6623:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6623:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6660:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "6643:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 442,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6643:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 443,
													"nodeType": "ArrayTypeName",
													"src": "6643:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6690:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "6673:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 445,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6673:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 446,
													"nodeType": "ArrayTypeName",
													"src": "6673:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6720:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "6707:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 448,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6707:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6591:139:0"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6748:0:0"
									},
									"scope": 1249,
									"src": "6560:1115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "8554:30:0",
										"statements": [
											{
												"expression": {
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 577,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "8564:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 578,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "8571:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8564:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "8564:13:0"
											}
										]
									},
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "7681:812:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "8507:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "8529:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "8515:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 573,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8515:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8514:22:0"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8554:0:0"
									},
									"scope": 1249,
									"src": "8498:86:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "9086:580:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 595,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "9104:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9110:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 596,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9110:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9110:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9104:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9122:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 594,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9096:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9096:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "9096:62:0"
											},
											{
												"assignments": [
													605
												],
												"declarations": [
													{
														"constant": false,
														"id": 605,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "9177:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 682,
														"src": "9169:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 604,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9169:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 608,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 606,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "9188:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9188:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9169:31:0"
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "9227:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 682,
														"src": "9210:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 611,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9210:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 612,
															"nodeType": "ArrayTypeName",
															"src": "9210:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 617,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "9251:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 614,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "9233:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9233:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9210:44:0"
											},
											{
												"assignments": [
													622
												],
												"declarations": [
													{
														"constant": false,
														"id": 622,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "9281:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 682,
														"src": "9264:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 620,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9264:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 621,
															"nodeType": "ArrayTypeName",
															"src": "9264:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 626,
												"initialValue": {
													"arguments": [
														{
															"id": 624,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "9309:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 623,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "9291:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9291:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9264:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 628,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "9348:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9366:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9358:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 629,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9358:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9358:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "9370:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "9374:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 635,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "9379:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 636,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "9388:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 627,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "9327:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9327:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "9327:66:0"
											},
											{
												"expression": {
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 639,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "9404:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 642,
															"indexExpression": {
																"id": 640,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 587,
																"src": "9414:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9404:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 643,
														"indexExpression": {
															"id": 641,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "9418:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9404:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 644,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "9425:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9404:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "9404:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 648,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "9461:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9479:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9471:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 649,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9471:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9471:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 653,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "9483:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 654,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "9487:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 655,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "9491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 647,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "9446:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9446:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 657,
												"nodeType": "EmitStatement",
												"src": "9441:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 659,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "9529:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9547:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9539:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 660,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9539:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9539:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 664,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "9551:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "9555:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 666,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "9560:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 667,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "9569:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 658,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "9509:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9509:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "9509:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 671,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "9616:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9634:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9626:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 672,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9626:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9626:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 676,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "9638:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 677,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "9642:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 678,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "9646:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 679,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "9654:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 670,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "9585:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9585:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "9585:74:0"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "8590:362:0",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8966:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8989:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "8981:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "9009:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "9001:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9029:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "9021:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9021:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9058:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "9045:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 590,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9045:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8971:97:0"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9086:0:0"
									},
									"scope": 1249,
									"src": "8957:709:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "10165:637:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 698,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "10183:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10197:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10189:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 699,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10189:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10189:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10183:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10201:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 697,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10175:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10175:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "10175:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 708,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "10255:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10255:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 710,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 692,
																	"src": "10269:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10269:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10255:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10285:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 707,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10247:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10247:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "10247:81:0"
											},
											{
												"assignments": [
													717
												],
												"declarations": [
													{
														"constant": false,
														"id": 717,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10347:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 793,
														"src": "10339:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 716,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10339:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 720,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 718,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "10358:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10358:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10339:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 722,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "10402:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10420:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 724,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10412:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 723,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10412:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10412:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "10424:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 728,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "10428:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 729,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "10433:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 730,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "10442:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 721,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "10381:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10381:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "10381:66:0"
											},
											{
												"body": {
													"id": 756,
													"nodeType": "Block",
													"src": "10499:60:0",
													"statements": [
														{
															"expression": {
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 744,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 26,
																			"src": "10513:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 749,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 745,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 689,
																				"src": "10523:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 747,
																			"indexExpression": {
																				"id": 746,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 734,
																				"src": "10527:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10523:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10513:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 750,
																	"indexExpression": {
																		"id": 748,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 686,
																		"src": "10531:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10513:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 751,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 692,
																		"src": "10538:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 753,
																	"indexExpression": {
																		"id": 752,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "10546:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10538:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10513:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 755,
															"nodeType": "ExpressionStatement",
															"src": "10513:35:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 737,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "10478:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 738,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "10482:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10482:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10478:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 757,
												"initializationExpression": {
													"assignments": [
														734
													],
													"declarations": [
														{
															"constant": false,
															"id": 734,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10471:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 757,
															"src": "10463:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 733,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10463:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 736,
													"initialValue": {
														"hexValue": "30",
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10475:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10463:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10494:3:0",
														"subExpression": {
															"id": 741,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "10494:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 743,
													"nodeType": "ExpressionStatement",
													"src": "10494:3:0"
												},
												"nodeType": "ForStatement",
												"src": "10458:101:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 759,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "10588:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10606:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10598:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 760,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10598:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10598:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "10610:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 765,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "10614:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 766,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "10619:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 758,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1283,
														"src": "10574:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10574:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "EmitStatement",
												"src": "10569:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 770,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "10658:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10676:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10668:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 771,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10668:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10668:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 775,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "10680:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 776,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "10684:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 777,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "10689:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 778,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "10698:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 769,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "10638:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10638:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 780,
												"nodeType": "ExpressionStatement",
												"src": "10638:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 782,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "10750:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10768:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10760:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 783,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10760:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10760:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 787,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "10772:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 788,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "10776:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 789,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "10781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 790,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "10790:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 781,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "10714:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10714:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "10714:81:0"
											}
										]
									},
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "9672:334:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "10020:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10048:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "10040:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10040:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "10077:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "10060:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 687,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10060:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 688,
													"nodeType": "ArrayTypeName",
													"src": "10060:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "10107:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "10090:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 690,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10090:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 691,
													"nodeType": "ArrayTypeName",
													"src": "10090:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10137:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "10124:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 693,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10124:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10030:117:0"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10165:0:0"
									},
									"scope": 1249,
									"src": "10011:791:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "11146:682:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 805,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "11164:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11180:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11172:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 806,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11172:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11172:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11164:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11184:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 804,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11156:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11156:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "11156:66:0"
											},
											{
												"assignments": [
													815
												],
												"declarations": [
													{
														"constant": false,
														"id": 815,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11241:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 898,
														"src": "11233:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 814,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11233:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 818,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 816,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "11252:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11252:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11233:31:0"
											},
											{
												"assignments": [
													823
												],
												"declarations": [
													{
														"constant": false,
														"id": 823,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "11291:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 898,
														"src": "11274:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 821,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11274:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 822,
															"nodeType": "ArrayTypeName",
															"src": "11274:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 827,
												"initialValue": {
													"arguments": [
														{
															"id": 825,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "11315:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 824,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "11297:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11297:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11274:44:0"
											},
											{
												"assignments": [
													832
												],
												"declarations": [
													{
														"constant": false,
														"id": 832,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "11345:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 898,
														"src": "11328:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 830,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11328:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 831,
															"nodeType": "ArrayTypeName",
															"src": "11328:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 836,
												"initialValue": {
													"arguments": [
														{
															"id": 834,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "11373:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 833,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "11355:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11355:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11328:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 838,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "11412:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 839,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "11422:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11436:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11428:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 840,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11428:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11428:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 844,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "11440:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 845,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "11445:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11454:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 837,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "11391:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11391:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "11391:66:0"
											},
											{
												"assignments": [
													850
												],
												"declarations": [
													{
														"constant": false,
														"id": 850,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "11476:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 898,
														"src": "11468:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 849,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11468:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 856,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 851,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "11490:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 853,
														"indexExpression": {
															"id": 852,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "11500:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11490:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 855,
													"indexExpression": {
														"id": 854,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "11504:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11490:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11468:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 858,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 850,
																"src": "11527:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 859,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "11542:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11527:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11550:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 857,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11519:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11519:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "11519:70:0"
											},
											{
												"id": 874,
												"nodeType": "UncheckedBlock",
												"src": "11599:77:0",
												"statements": [
													{
														"expression": {
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 864,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 26,
																		"src": "11623:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 867,
																	"indexExpression": {
																		"id": 865,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "11633:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11623:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 868,
																"indexExpression": {
																	"id": 866,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "11637:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11623:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 869,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "11645:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 870,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "11659:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11645:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11623:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 873,
														"nodeType": "ExpressionStatement",
														"src": "11623:42:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 876,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "11706:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 877,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "11716:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11730:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11722:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 878,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11722:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11722:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 882,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "11734:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 883,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "11738:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 875,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "11691:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11691:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 885,
												"nodeType": "EmitStatement",
												"src": "11686:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 887,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "11776:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 888,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "11786:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11800:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11792:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 889,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11792:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11792:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 893,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "11804:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 894,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "11809:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11818:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 886,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "11756:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11756:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "11756:65:0"
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "10808:229:0",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11051:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11074:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "11066:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11066:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "11096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "11088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11088:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11116:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "11108:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11108:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11056:72:0"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11146:0:0"
									},
									"scope": 1249,
									"src": "11042:786:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "12151:814:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 912,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "12169:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12185:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12177:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 913,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12177:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12177:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12169:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12189:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 911,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12161:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "12161:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 922,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "12245:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12245:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 924,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "12259:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12259:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12245:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12275:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 921,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12237:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12237:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "12237:81:0"
											},
											{
												"assignments": [
													931
												],
												"declarations": [
													{
														"constant": false,
														"id": 931,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "12337:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "12329:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 930,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12329:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 934,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 932,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "12348:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12348:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12329:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 936,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "12392:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 937,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "12402:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12416:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12408:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 938,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12408:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12408:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "12420:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 943,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "12425:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12434:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 935,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "12371:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12371:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "12371:66:0"
											},
											{
												"body": {
													"id": 996,
													"nodeType": "Block",
													"src": "12489:323:0",
													"statements": [
														{
															"assignments": [
																959
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 959,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "12511:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 996,
																	"src": "12503:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 958,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12503:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 963,
															"initialValue": {
																"baseExpression": {
																	"id": 960,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "12516:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 962,
																"indexExpression": {
																	"id": 961,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "12520:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12516:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12503:19:0"
														},
														{
															"assignments": [
																965
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 965,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "12544:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 996,
																	"src": "12536:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 964,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12536:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 969,
															"initialValue": {
																"baseExpression": {
																	"id": 966,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "12553:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 968,
																"indexExpression": {
																	"id": 967,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "12561:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12553:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12536:27:0"
														},
														{
															"assignments": [
																971
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 971,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "12586:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 996,
																	"src": "12578:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 970,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12578:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 977,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 972,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 26,
																		"src": "12600:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 974,
																	"indexExpression": {
																		"id": 973,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "12610:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12600:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 976,
																"indexExpression": {
																	"id": 975,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "12614:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12600:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12578:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 979,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 971,
																			"src": "12641:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 980,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 965,
																			"src": "12656:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12641:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12664:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 978,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12633:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12633:70:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 984,
															"nodeType": "ExpressionStatement",
															"src": "12633:70:0"
														},
														{
															"id": 995,
															"nodeType": "UncheckedBlock",
															"src": "12717:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 985,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 26,
																					"src": "12745:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 988,
																				"indexExpression": {
																					"id": 986,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 959,
																					"src": "12755:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12745:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 989,
																			"indexExpression": {
																				"id": 987,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 902,
																				"src": "12759:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "12745:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 990,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 971,
																				"src": "12767:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 991,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 965,
																				"src": "12781:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12767:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12745:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 994,
																	"nodeType": "ExpressionStatement",
																	"src": "12745:42:0"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 951,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "12468:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 952,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "12472:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12472:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12468:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 997,
												"initializationExpression": {
													"assignments": [
														948
													],
													"declarations": [
														{
															"constant": false,
															"id": 948,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12461:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 997,
															"src": "12453:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 947,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12453:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 950,
													"initialValue": {
														"hexValue": "30",
														"id": 949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12465:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12453:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12484:3:0",
														"subExpression": {
															"id": 955,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "12484:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 957,
													"nodeType": "ExpressionStatement",
													"src": "12484:3:0"
												},
												"nodeType": "ForStatement",
												"src": "12448:364:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 999,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "12841:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1000,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "12851:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12865:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12857:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1001,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12857:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12857:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1005,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "12869:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1006,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "12874:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 998,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1283,
														"src": "12827:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12827:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "EmitStatement",
												"src": "12822:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1010,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "12913:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1011,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "12923:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12937:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12929:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1012,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12929:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12929:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1016,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "12941:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1017,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "12946:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12955:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1009,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "12893:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12893:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "12893:65:0"
											}
										]
									},
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "11834:183:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12031:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12059:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "12051:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12051:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12090:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "12073:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 903,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12073:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 904,
													"nodeType": "ArrayTypeName",
													"src": "12073:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "12120:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "12103:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 906,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12103:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 907,
													"nodeType": "ArrayTypeName",
													"src": "12103:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12041:92:0"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12151:0:0"
									},
									"scope": 1249,
									"src": "12022:943:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "13223:200:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1033,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "13241:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1034,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "13250:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13241:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13260:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1032,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13233:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13233:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "13233:71:0"
											},
											{
												"expression": {
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1039,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "13314:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1042,
															"indexExpression": {
																"id": 1040,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "13333:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13314:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1043,
														"indexExpression": {
															"id": 1041,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "13340:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13314:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1044,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "13352:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13314:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "13314:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1048,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "13390:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1049,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "13397:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1050,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "13407:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1047,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "13375:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13375:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "EmitStatement",
												"src": "13370:46:0"
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "12971:124:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13109:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13145:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "13137:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13168:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "13160:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13191:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "13186:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1028,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13186:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13127:78:0"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13223:0:0"
									},
									"scope": 1249,
									"src": "13100:323:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1072,
										"nodeType": "Block",
										"src": "14569:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "13429:923:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "14366:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14404:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "14396:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14396:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14430:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "14422:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14422:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14452:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "14444:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14444:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14481:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "14464:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1062,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14464:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1063,
													"nodeType": "ArrayTypeName",
													"src": "14464:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14511:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "14494:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1065,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14494:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1066,
													"nodeType": "ArrayTypeName",
													"src": "14494:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14541:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "14528:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1068,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14528:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14386:165:0"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14569:0:0"
									},
									"scope": 1249,
									"src": "14357:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "15715:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "14577:922:0",
										"text": " @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "15513:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15550:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "15542:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15542:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15576:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "15568:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15598:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "15590:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15590:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15627:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "15610:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1081,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15610:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1082,
													"nodeType": "ArrayTypeName",
													"src": "15610:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "15657:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "15640:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1084,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15640:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1085,
													"nodeType": "ArrayTypeName",
													"src": "15640:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15687:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "15674:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1087,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15674:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15532:165:0"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15715:0:0"
									},
									"scope": 1249,
									"src": "15504:213:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "15916:532:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1107,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "15930:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1514,
														"src": "15930:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15930:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1153,
												"nodeType": "IfStatement",
												"src": "15926:516:0",
												"trueBody": {
													"id": 1152,
													"nodeType": "Block",
													"src": "15947:495:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1134,
																		"nodeType": "Block",
																		"src": "16064:184:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1127,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1123,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1121,
																						"src": "16086:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1124,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1412,
																								"src": "16098:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1412_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1125,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1393,
																							"src": "16098:34:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1126,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "16098:43:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16086:55:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1133,
																				"nodeType": "IfStatement",
																				"src": "16082:152:0",
																				"trueBody": {
																					"id": 1132,
																					"nodeType": "Block",
																					"src": "16143:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1129,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16172:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1128,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "16165:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1130,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16165:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1131,
																							"nodeType": "ExpressionStatement",
																							"src": "16165:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1135,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1122,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1121,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "16054:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1135,
																				"src": "16047:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1120,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16047:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16046:17:0"
																	},
																	"src": "16038:210:0"
																},
																{
																	"block": {
																		"id": 1143,
																		"nodeType": "Block",
																		"src": "16283:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1140,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1137,
																							"src": "16308:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1139,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16301:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1141,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16301:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1142,
																				"nodeType": "ExpressionStatement",
																				"src": "16301:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1144,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1138,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1137,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16275:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1144,
																				"src": "16261:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1136,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "16261:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16260:22:0"
																	},
																	"src": "16249:81:0"
																},
																{
																	"block": {
																		"id": 1149,
																		"nodeType": "Block",
																		"src": "16337:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1146,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16362:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1145,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16355:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1147,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16355:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1148,
																				"nodeType": "ExpressionStatement",
																				"src": "16355:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1150,
																	"nodeType": "TryCatchClause",
																	"src": "16331:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1114,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "16004:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1115,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1096,
																		"src": "16014:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1116,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1100,
																		"src": "16020:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1117,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "16024:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1118,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "16032:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1111,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1098,
																				"src": "15982:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1110,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1412,
																			"src": "15965:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1412_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15965:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1412",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1393,
																	"src": "15965:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15965:72:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1151,
															"nodeType": "TryStatement",
															"src": "15961:471:0"
														}
													]
												}
											}
										]
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "15732:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15780:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "15772:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15772:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15806:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "15798:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15798:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15828:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "15820:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15820:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "15848:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "15840:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "15860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15897:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "15884:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15884:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15762:145:0"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15916:0:0"
									},
									"scope": 1249,
									"src": "15723:725:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "16672:574:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1172,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "16686:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1514,
														"src": "16686:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16686:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1218,
												"nodeType": "IfStatement",
												"src": "16682:558:0",
												"trueBody": {
													"id": 1217,
													"nodeType": "Block",
													"src": "16703:537:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1199,
																		"nodeType": "Block",
																		"src": "16857:189:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1192,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1188,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1186,
																						"src": "16879:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1189,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1412,
																								"src": "16891:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1412_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1190,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1411,
																							"src": "16891:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1191,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "16891:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16879:60:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1198,
																				"nodeType": "IfStatement",
																				"src": "16875:157:0",
																				"trueBody": {
																					"id": 1197,
																					"nodeType": "Block",
																					"src": "16941:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1194,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16970:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1193,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "16963:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1195,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16963:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1196,
																							"nodeType": "ExpressionStatement",
																							"src": "16963:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1200,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1187,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1186,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "16834:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1200,
																				"src": "16827:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1185,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16827:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16809:47:0"
																	},
																	"src": "16801:245:0"
																},
																{
																	"block": {
																		"id": 1208,
																		"nodeType": "Block",
																		"src": "17081:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1205,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1202,
																							"src": "17106:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1204,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17099:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1206,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17099:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1207,
																				"nodeType": "ExpressionStatement",
																				"src": "17099:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1209,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1203,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1202,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17073:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1209,
																				"src": "17059:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1201,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "17059:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17058:22:0"
																	},
																	"src": "17047:81:0"
																},
																{
																	"block": {
																		"id": 1214,
																		"nodeType": "Block",
																		"src": "17135:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1211,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17160:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1210,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17153:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1212,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17153:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1213,
																				"nodeType": "ExpressionStatement",
																				"src": "17153:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1215,
																	"nodeType": "TryCatchClause",
																	"src": "17129:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1179,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1157,
																		"src": "16765:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1180,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "16775:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1181,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1164,
																		"src": "16781:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1182,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "16786:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1183,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1169,
																		"src": "16795:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1176,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1161,
																				"src": "16738:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1175,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1412,
																			"src": "16721:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1412_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16721:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1412",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1411,
																	"src": "16721:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16721:79:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1216,
															"nodeType": "TryStatement",
															"src": "16717:513:0"
														}
													]
												}
											}
										]
									},
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "16463:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16516:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "16508:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16508:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16542:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "16534:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16534:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16564:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "16556:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16556:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "16593:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "16576:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1162,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16576:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1163,
													"nodeType": "ArrayTypeName",
													"src": "16576:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "16623:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "16606:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1165,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16606:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1166,
													"nodeType": "ArrayTypeName",
													"src": "16606:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16653:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "16640:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1168,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16640:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16498:165:0"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16672:0:0"
									},
									"scope": 1249,
									"src": "16454:792:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "17336:109:0",
										"statements": [
											{
												"assignments": [
													1232
												],
												"declarations": [
													{
														"constant": false,
														"id": 1232,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "17363:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "17346:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1230,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17346:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1231,
															"nodeType": "ArrayTypeName",
															"src": "17346:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1238,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17385:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17371:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1233,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17375:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1234,
															"nodeType": "ArrayTypeName",
															"src": "17375:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17371:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17346:41:0"
											},
											{
												"expression": {
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1239,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "17397:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1241,
														"indexExpression": {
															"hexValue": "30",
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17403:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17397:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1242,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "17408:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17397:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "17397:18:0"
											},
											{
												"expression": {
													"id": 1245,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1232,
													"src": "17433:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1227,
												"id": 1246,
												"nodeType": "Return",
												"src": "17426:12:0"
											}
										]
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "17261:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "17287:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "17279:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17278:17:0"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "17318:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1224,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17318:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1225,
													"nodeType": "ArrayTypeName",
													"src": "17318:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17317:18:0"
									},
									"scope": 1249,
									"src": "17252:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1250,
							"src": "604:16843:0",
							"usedErrors": []
						}
					],
					"src": "109:17339:0"
				},
				"id": 0
			},
			"contracts/OZ_contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1371
						],
						"IERC165": [
							2052
						]
					},
					"id": 1372,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1251,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:1"
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1252,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1372,
							"sourceUnit": 2053,
							"src": "120:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1254,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2052,
										"src": "357:7:1"
									},
									"id": 1255,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1253,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:1",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1371,
							"linearizedBaseContracts": [
								1371,
								2052
							],
							"name": "IERC1155",
							"nameLocation": "345:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:1",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1268,
									"name": "TransferSingle",
									"nameLocation": "503:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "518:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "544:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "566:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "586:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "598:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:1"
									},
									"src": "497:116:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:1",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 1283,
									"name": "TransferBatch",
									"nameLocation": "774:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "797:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "831:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "861:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "889:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1276,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1277,
													"nodeType": "ArrayTypeName",
													"src": "889:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "912:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1279,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1280,
													"nodeType": "ArrayTypeName",
													"src": "912:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:1"
									},
									"src": "768:167:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:1",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 1292,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "1114:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "1139:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "1165:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:1"
									},
									"src": "1093:87:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:1",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 1299,
									"name": "URI",
									"nameLocation": "1540:3:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "1544:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1294,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "1558:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:1"
									},
									"src": "1534:44:1"
								},
								{
									"documentation": {
										"id": 1300,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:1",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1781:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1798:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:1"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1833:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:1"
									},
									"scope": 1371,
									"src": "1762:80:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "2065:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1311,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1312,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "2094:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1314,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1315,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:1"
									},
									"returnParameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "2165:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1318,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1319,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:1"
									},
									"scope": 1371,
									"src": "2041:142:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:1",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "2469:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "2487:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1326,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:1"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:1"
									},
									"scope": 1371,
									"src": "2442:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:1",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "2683:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "2700:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:1"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "2741:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1337,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:1"
									},
									"scope": 1371,
									"src": "2657:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:1",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "3352:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "3374:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "3394:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "3414:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "3438:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1350,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:1"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:1"
									},
									"scope": 1371,
									"src": "3317:156:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1355,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "3914:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "3936:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "3956:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1360,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1361,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "3988:26:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1363,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1364,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "4024:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1366,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:1"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:1"
									},
									"scope": 1371,
									"src": "3874:185:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1372,
							"src": "335:3726:1",
							"usedErrors": []
						}
					],
					"src": "95:3967:1"
				},
				"id": 1
			},
			"contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1412
						],
						"IERC165": [
							2052
						]
					},
					"id": 1413,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1373,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:2"
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1374,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1413,
							"sourceUnit": 2053,
							"src": "143:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1376,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2052,
										"src": "262:7:2"
									},
									"id": 1377,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1375,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:2",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1412,
							"linearizedBaseContracts": [
								1412,
								2052
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:2",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "1143:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "1169:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "1191:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "1211:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "1234:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1387,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:2"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "1278:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1390,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:2"
									},
									"scope": 1412,
									"src": "1107:179:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1394,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:2",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2332:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2358:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2380:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1399,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1400,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2412:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1402,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1403,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2447:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:2"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2491:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1408,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:2"
									},
									"scope": 1412,
									"src": "2291:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1413,
							"src": "232:2269:2",
							"usedErrors": []
						}
					],
					"src": "118:2384:2"
				},
				"id": 2
			},
			"contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
					"exportedSymbols": {
						"Address": [
							1791
						],
						"Context": [
							1813
						],
						"ERC1155": [
							1249
						],
						"ERC1155Burnable": [
							1481
						],
						"ERC165": [
							2040
						],
						"IERC1155": [
							1371
						],
						"IERC1155MetadataURI": [
							1496
						],
						"IERC1155Receiver": [
							1412
						],
						"IERC165": [
							2052
						],
						"Strings": [
							2016
						]
					},
					"id": 1482,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1414,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:3"
						},
						{
							"absolutePath": "contracts/OZ_contracts/token/ERC1155/ERC1155.sol",
							"file": "../ERC1155.sol",
							"id": 1415,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1482,
							"sourceUnit": 1250,
							"src": "138:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1417,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1249,
										"src": "378:7:3"
									},
									"id": 1418,
									"nodeType": "InheritanceSpecifier",
									"src": "378:7:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1416,
								"nodeType": "StructuredDocumentation",
								"src": "163:177:3",
								"text": " @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use.\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1481,
							"linearizedBaseContracts": [
								1481,
								1249,
								1496,
								1371,
								2040,
								2052,
								1813
							],
							"name": "ERC1155Burnable",
							"nameLocation": "359:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "495:207:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1428,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1420,
																	"src": "526:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1429,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1803,
																		"src": "537:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "537:12:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "526:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1433,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1420,
																		"src": "570:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1434,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1803,
																			"src": "579:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "579:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1432,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "553:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "553:39:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "526:66:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "606:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 1427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "505:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "505:154:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1440,
												"nodeType": "ExpressionStatement",
												"src": "505:154:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1442,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "676:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1443,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "685:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "689:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1441,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "670:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "670:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1446,
												"nodeType": "ExpressionStatement",
												"src": "670:25:3"
											}
										]
									},
									"functionSelector": "f5298aca",
									"id": 1448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "401:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "423:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "415:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "448:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "440:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "460:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:74:3"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "495:0:3"
									},
									"scope": 1481,
									"src": "392:310:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1479,
										"nodeType": "Block",
										"src": "836:214:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1460,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1450,
																	"src": "867:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1461,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1803,
																		"src": "878:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "878:12:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "867:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1465,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1450,
																		"src": "911:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1466,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1803,
																			"src": "920:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "920:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1464,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "894:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "894:39:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "867:66:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "947:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 1459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "846:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "846:154:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "846:154:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1474,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "1022:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1475,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "1031:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1476,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "1036:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1473,
														"name": "_burnBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "1011:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1011:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1478,
												"nodeType": "ExpressionStatement",
												"src": "1011:32:3"
											}
										]
									},
									"functionSelector": "6b20c454",
									"id": 1480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnBatch",
									"nameLocation": "717:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "744:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "736:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "778:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "761:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1451,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "761:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1452,
													"nodeType": "ArrayTypeName",
													"src": "761:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "808:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "791:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1454,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "791:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1455,
													"nodeType": "ArrayTypeName",
													"src": "791:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "726:94:3"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "836:0:3"
									},
									"scope": 1481,
									"src": "708:342:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1482,
							"src": "341:711:3",
							"usedErrors": []
						}
					],
					"src": "113:940:3"
				},
				"id": 3
			},
			"contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1371
						],
						"IERC1155MetadataURI": [
							1496
						],
						"IERC165": [
							2052
						]
					},
					"id": 1497,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1483,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:4"
						},
						{
							"absolutePath": "contracts/OZ_contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1484,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1497,
							"sourceUnit": 1372,
							"src": "142:25:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1486,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1371,
										"src": "397:8:4"
									},
									"id": 1487,
									"nodeType": "InheritanceSpecifier",
									"src": "397:8:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1485,
								"nodeType": "StructuredDocumentation",
								"src": "169:194:4",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1496,
							"linearizedBaseContracts": [
								1496,
								1371,
								2052
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "374:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1488,
										"nodeType": "StructuredDocumentation",
										"src": "412:192:4",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1495,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "618:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "630:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "622:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:12:4"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "657:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1492,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:15:4"
									},
									"scope": 1496,
									"src": "609:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1497,
							"src": "364:310:4",
							"usedErrors": []
						}
					],
					"src": "117:558:4"
				},
				"id": 4
			},
			"contracts/OZ_contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1791
						]
					},
					"id": 1792,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1498,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1499,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1791,
							"linearizedBaseContracts": [
								1791
							],
							"name": "Address",
							"nameLocation": "202:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1513,
										"nodeType": "Block",
										"src": "1241:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1507,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "1465:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1506,
												"id": 1512,
												"nodeType": "Return",
												"src": "1458:30:5"
											}
										]
									},
									"documentation": {
										"id": 1500,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "1195:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:5"
									},
									"returnParameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "1235:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1504,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:5"
									},
									"scope": 1791,
									"src": "1175:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1547,
										"nodeType": "Block",
										"src": "2483:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1525,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1791",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1791",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1523,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1528,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "2526:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1522,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1532,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:5"
											},
											{
												"assignments": [
													1534,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1534,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1547,
														"src": "2578:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1533,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1541,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1535,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "2596:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1537,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "2618:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1543,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "2647:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1542,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1546,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:5"
											}
										]
									},
									"documentation": {
										"id": 1515,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "2431:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "2458:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:5"
									},
									"returnParameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:5"
									},
									"scope": 1791,
									"src": "2412:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1564,
										"nodeType": "Block",
										"src": "3555:84:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1559,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "3585:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1560,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "3593:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1558,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1565,
															1585
														],
														"referencedDeclaration": 1585,
														"src": "3572:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1557,
												"id": 1563,
												"nodeType": "Return",
												"src": "3565:67:5"
											}
										]
									},
									"documentation": {
										"id": 1549,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "3488:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "3504:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1552,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:5"
									},
									"returnParameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "3541:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:5"
									},
									"scope": 1791,
									"src": "3466:173:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1584,
										"nodeType": "Block",
										"src": "4008:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1578,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "4047:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1579,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "4055:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1581,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "4064:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1577,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1605,
															1655
														],
														"referencedDeclaration": 1655,
														"src": "4025:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1576,
												"id": 1583,
												"nodeType": "Return",
												"src": "4018:59:5"
											}
										]
									},
									"documentation": {
										"id": 1566,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "3892:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "3916:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1569,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "3943:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1571,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:5"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "3994:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1574,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:5"
									},
									"scope": 1791,
									"src": "3861:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1604,
										"nodeType": "Block",
										"src": "4589:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1598,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "4628:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1599,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "4636:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1600,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "4642:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1597,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1605,
															1655
														],
														"referencedDeclaration": 1655,
														"src": "4606:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1596,
												"id": 1603,
												"nodeType": "Return",
												"src": "4599:94:5"
											}
										]
									},
									"documentation": {
										"id": 1586,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "4486:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "4510:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "4537:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:5"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "4575:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:5"
									},
									"scope": 1791,
									"src": "4446:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1654,
										"nodeType": "Block",
										"src": "5127:320:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1622,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1791",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1791",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1620,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1625,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "5170:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1619,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1629,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1632,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1608,
																	"src": "5247:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1631,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1514,
																"src": "5236:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1630,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1636,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:5"
											},
											{
												"assignments": [
													1638,
													1640
												],
												"declarations": [
													{
														"constant": false,
														"id": 1638,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1654,
														"src": "5300:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1637,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1640,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1654,
														"src": "5314:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1639,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1647,
												"initialValue": {
													"arguments": [
														{
															"id": 1645,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1610,
															"src": "5367:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1641,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1608,
																"src": "5341:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1643,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "5360:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1649,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "5406:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1650,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "5415:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1651,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "5427:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1648,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "5389:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1618,
												"id": 1653,
												"nodeType": "Return",
												"src": "5382:58:5"
											}
										]
									},
									"documentation": {
										"id": 1606,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "4988:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "5012:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1609,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "5039:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "5062:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1613,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:5"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "5113:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1616,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:5"
									},
									"scope": 1791,
									"src": "4948:499:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "5724:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1666,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "5760:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1667,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "5768:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1665,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1672,
															1707
														],
														"referencedDeclaration": 1707,
														"src": "5741:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1664,
												"id": 1670,
												"nodeType": "Return",
												"src": "5734:80:5"
											}
										]
									},
									"documentation": {
										"id": 1656,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "5652:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "5668:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:5"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "5710:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1662,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:5"
									},
									"scope": 1791,
									"src": "5624:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1706,
										"nodeType": "Block",
										"src": "6163:228:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1686,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1675,
																	"src": "6192:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1685,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1514,
																"src": "6181:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1684,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1690,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:5"
											},
											{
												"assignments": [
													1692,
													1694
												],
												"declarations": [
													{
														"constant": false,
														"id": 1692,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1706,
														"src": "6252:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1691,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1694,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1706,
														"src": "6266:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1693,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1699,
												"initialValue": {
													"arguments": [
														{
															"id": 1697,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1677,
															"src": "6311:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1695,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "6293:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1701,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "6350:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1702,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1694,
															"src": "6359:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1703,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1679,
															"src": "6371:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1700,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "6333:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1683,
												"id": 1705,
												"nodeType": "Return",
												"src": "6326:58:5"
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "6042:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "6066:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1676,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "6093:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1678,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:5"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "6149:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1681,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:5"
									},
									"scope": 1791,
									"src": "6005:386:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "6667:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1718,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "6705:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1719,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "6713:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1717,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1724,
															1759
														],
														"referencedDeclaration": 1759,
														"src": "6684:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1716,
												"id": 1722,
												"nodeType": "Return",
												"src": "6677:84:5"
											}
										]
									},
									"documentation": {
										"id": 1708,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "6600:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1711,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:5"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "6653:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1714,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:5"
									},
									"scope": 1791,
									"src": "6570:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1758,
										"nodeType": "Block",
										"src": "7109:232:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1738,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1727,
																	"src": "7138:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1737,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1514,
																"src": "7127:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1736,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1742,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:5"
											},
											{
												"assignments": [
													1744,
													1746
												],
												"declarations": [
													{
														"constant": false,
														"id": 1744,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1758,
														"src": "7200:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1743,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1746,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1758,
														"src": "7214:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1745,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1751,
												"initialValue": {
													"arguments": [
														{
															"id": 1749,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "7261:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1747,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "7241:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1753,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "7300:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1754,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "7309:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1755,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "7321:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1752,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "7283:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1735,
												"id": 1757,
												"nodeType": "Return",
												"src": "7276:58:5"
											}
										]
									},
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "6993:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "7017:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1728,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "7044:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1730,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:5"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "7095:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1733,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:5"
									},
									"scope": 1791,
									"src": "6954:387:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1789,
										"nodeType": "Block",
										"src": "7721:532:5",
										"statements": [
											{
												"condition": {
													"id": 1771,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1762,
													"src": "7735:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1787,
													"nodeType": "Block",
													"src": "7792:455:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1775,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1764,
																		"src": "7876:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1785,
																"nodeType": "Block",
																"src": "8184:53:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1782,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1766,
																					"src": "8209:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1781,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1784,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:5"
																	}
																]
															},
															"id": 1786,
															"nodeType": "IfStatement",
															"src": "7872:365:5",
															"trueBody": {
																"id": 1780,
																"nodeType": "Block",
																"src": "7899:279:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:5"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1764,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1764,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 1779,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:5"
																	}
																]
															}
														}
													]
												},
												"id": 1788,
												"nodeType": "IfStatement",
												"src": "7731:516:5",
												"trueBody": {
													"id": 1774,
													"nodeType": "Block",
													"src": "7744:42:5",
													"statements": [
														{
															"expression": {
																"id": 1772,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1764,
																"src": "7765:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1770,
															"id": 1773,
															"nodeType": "Return",
															"src": "7758:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:5",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "7596:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1761,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "7618:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1763,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "7651:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1765,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:5"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "7707:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1768,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:5"
									},
									"scope": 1791,
									"src": "7561:692:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1792,
							"src": "194:8061:5",
							"usedErrors": []
						}
					],
					"src": "101:8155:5"
				},
				"id": 5
			},
			"contracts/OZ_contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1813
						]
					},
					"id": 1814,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1793,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1794,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1813,
							"linearizedBaseContracts": [
								1813
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1802,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1799,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1798,
												"id": 1801,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 1803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 1813,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1808,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1807,
												"id": 1810,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 1812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1805,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 1813,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1814,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"contracts/OZ_contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							2016
						]
					},
					"id": 2017,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1815,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1816,
								"nodeType": "StructuredDocumentation",
								"src": "111:34:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2016,
							"linearizedBaseContracts": [
								2016
							],
							"name": "Strings",
							"nameLocation": "154:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1819,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "193:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 2016,
									"src": "168:58:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1817,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1818,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1897,
										"nodeType": "Block",
										"src": "399:632:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1827,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1822,
														"src": "601:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "601:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1833,
												"nodeType": "IfStatement",
												"src": "597:51:7",
												"trueBody": {
													"id": 1832,
													"nodeType": "Block",
													"src": "613:35:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1826,
															"id": 1831,
															"nodeType": "Return",
															"src": "627:10:7"
														}
													]
												}
											},
											{
												"assignments": [
													1835
												],
												"declarations": [
													{
														"constant": false,
														"id": 1835,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "665:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1897,
														"src": "657:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1834,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "657:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1837,
												"initialValue": {
													"id": 1836,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1822,
													"src": "672:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "657:20:7"
											},
											{
												"assignments": [
													1839
												],
												"declarations": [
													{
														"constant": false,
														"id": 1839,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "695:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1897,
														"src": "687:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1838,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1840,
												"nodeType": "VariableDeclarationStatement",
												"src": "687:14:7"
											},
											{
												"body": {
													"id": 1851,
													"nodeType": "Block",
													"src": "729:57:7",
													"statements": [
														{
															"expression": {
																"id": 1845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "743:8:7",
																"subExpression": {
																	"id": 1844,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "743:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1846,
															"nodeType": "ExpressionStatement",
															"src": "743:8:7"
														},
														{
															"expression": {
																"id": 1849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1847,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1835,
																	"src": "765:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "773:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "765:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1850,
															"nodeType": "ExpressionStatement",
															"src": "765:10:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1841,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1835,
														"src": "718:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "718:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1852,
												"nodeType": "WhileStatement",
												"src": "711:75:7"
											},
											{
												"assignments": [
													1854
												],
												"declarations": [
													{
														"constant": false,
														"id": 1854,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "808:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1897,
														"src": "795:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1853,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "795:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1859,
												"initialValue": {
													"arguments": [
														{
															"id": 1857,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "827:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "817:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1855,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "821:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:39:7"
											},
											{
												"body": {
													"id": 1890,
													"nodeType": "Block",
													"src": "863:131:7",
													"statements": [
														{
															"expression": {
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1863,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "877:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "877:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1866,
															"nodeType": "ExpressionStatement",
															"src": "877:11:7"
														},
														{
															"expression": {
																"id": 1884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1867,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1854,
																		"src": "902:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1869,
																	"indexExpression": {
																		"id": 1868,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1839,
																		"src": "909:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "902:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1881,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 1874,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "932:2:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1879,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1877,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1822,
																									"src": "945:5:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 1878,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "953:2:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "945:10:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1876,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "937:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1875,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "937:7:7",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1880,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "937:19:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "932:24:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1873,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "926:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1872,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "926:5:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "926:31:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "919:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1870,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "919:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "919:39:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "902:56:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1885,
															"nodeType": "ExpressionStatement",
															"src": "902:56:7"
														},
														{
															"expression": {
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1886,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1822,
																	"src": "972:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "972:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1889,
															"nodeType": "ExpressionStatement",
															"src": "972:11:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1860,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1822,
														"src": "851:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1861,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "851:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1891,
												"nodeType": "WhileStatement",
												"src": "844:150:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1894,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "1017:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1010:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1892,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1010:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1826,
												"id": 1896,
												"nodeType": "Return",
												"src": "1003:21:7"
											}
										]
									},
									"documentation": {
										"id": 1820,
										"nodeType": "StructuredDocumentation",
										"src": "233:90:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "337:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "354:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "346:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:7"
									},
									"returnParameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "384:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1824,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:7"
									},
									"scope": 2016,
									"src": "328:703:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1938,
										"nodeType": "Block",
										"src": "1210:255:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1906,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1901,
														"src": "1224:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1907,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1224:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1912,
												"nodeType": "IfStatement",
												"src": "1220:54:7",
												"trueBody": {
													"id": 1911,
													"nodeType": "Block",
													"src": "1236:38:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 1909,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 1905,
															"id": 1910,
															"nodeType": "Return",
															"src": "1250:13:7"
														}
													]
												}
											},
											{
												"assignments": [
													1914
												],
												"declarations": [
													{
														"constant": false,
														"id": 1914,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1291:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1938,
														"src": "1283:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1913,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1283:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1916,
												"initialValue": {
													"id": 1915,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1901,
													"src": "1298:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:20:7"
											},
											{
												"assignments": [
													1918
												],
												"declarations": [
													{
														"constant": false,
														"id": 1918,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1321:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1938,
														"src": "1313:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1917,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1313:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1920,
												"initialValue": {
													"hexValue": "30",
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:18:7"
											},
											{
												"body": {
													"id": 1931,
													"nodeType": "Block",
													"src": "1359:57:7",
													"statements": [
														{
															"expression": {
																"id": 1925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1373:8:7",
																"subExpression": {
																	"id": 1924,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1918,
																	"src": "1373:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1926,
															"nodeType": "ExpressionStatement",
															"src": "1373:8:7"
														},
														{
															"expression": {
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1927,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1914,
																	"src": "1395:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1395:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1930,
															"nodeType": "ExpressionStatement",
															"src": "1395:10:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1921,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1914,
														"src": "1348:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1348:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1932,
												"nodeType": "WhileStatement",
												"src": "1341:75:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1934,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1901,
															"src": "1444:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1935,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1918,
															"src": "1451:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1933,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1939,
															2015
														],
														"referencedDeclaration": 2015,
														"src": "1432:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1905,
												"id": 1937,
												"nodeType": "Return",
												"src": "1425:33:7"
											}
										]
									},
									"documentation": {
										"id": 1899,
										"nodeType": "StructuredDocumentation",
										"src": "1037:94:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1145:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "1157:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:15:7"
									},
									"returnParameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "1195:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1903,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:7"
									},
									"scope": 2016,
									"src": "1136:329:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2014,
										"nodeType": "Block",
										"src": "1678:351:7",
										"statements": [
											{
												"assignments": [
													1950
												],
												"declarations": [
													{
														"constant": false,
														"id": 1950,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1701:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2014,
														"src": "1688:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1949,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1688:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1959,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1954,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "1724:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1720:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1720:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1710:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1951,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1714:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:47:7"
											},
											{
												"expression": {
													"id": 1964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1960,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "1745:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1962,
														"indexExpression": {
															"hexValue": "30",
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1963,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1745:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1965,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:7"
											},
											{
												"expression": {
													"id": 1970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1966,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "1770:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1968,
														"indexExpression": {
															"hexValue": "31",
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1770:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1969,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1770:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1971,
												"nodeType": "ExpressionStatement",
												"src": "1770:15:7"
											},
											{
												"body": {
													"id": 2000,
													"nodeType": "Block",
													"src": "1840:87:7",
													"statements": [
														{
															"expression": {
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1986,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1950,
																		"src": "1854:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1988,
																	"indexExpression": {
																		"id": 1987,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1973,
																		"src": "1861:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1854:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1989,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1819,
																		"src": "1866:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1993,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1990,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1942,
																			"src": "1879:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1887:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1879:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1866:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1854:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1995,
															"nodeType": "ExpressionStatement",
															"src": "1854:37:7"
														},
														{
															"expression": {
																"id": 1998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1996,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1942,
																	"src": "1905:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1905:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1999,
															"nodeType": "ExpressionStatement",
															"src": "1905:11:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1980,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1973,
														"src": "1828:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1981,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1828:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2001,
												"initializationExpression": {
													"assignments": [
														1973
													],
													"declarations": [
														{
															"constant": false,
															"id": 1973,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1808:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 2001,
															"src": "1800:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1972,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1800:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1979,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1975,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1944,
																"src": "1816:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1812:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1825:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1812:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1800:26:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1835:3:7",
														"subExpression": {
															"id": 1983,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "1837:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1985,
													"nodeType": "ExpressionStatement",
													"src": "1835:3:7"
												},
												"nodeType": "ForStatement",
												"src": "1795:132:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2003,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "1944:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1953:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1944:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 2006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 2002,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2008,
												"nodeType": "ExpressionStatement",
												"src": "1936:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2011,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "2015:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2008:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2009,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2008:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1948,
												"id": 2013,
												"nodeType": "Return",
												"src": "2001:21:7"
											}
										]
									},
									"documentation": {
										"id": 1940,
										"nodeType": "StructuredDocumentation",
										"src": "1471:112:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1597:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1617:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "1609:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1632:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "1624:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:31:7"
									},
									"returnParameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "1663:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1946,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:7"
									},
									"scope": 2016,
									"src": "1588:441:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2017,
							"src": "146:1885:7",
							"usedErrors": []
						}
					],
					"src": "86:1946:7"
				},
				"id": 7
			},
			"contracts/OZ_contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2040
						],
						"IERC165": [
							2052
						]
					},
					"id": 2041,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2018,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:8"
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2019,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2041,
							"sourceUnit": 2053,
							"src": "124:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2021,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2052,
										"src": "754:7:8"
									},
									"id": 2022,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:8"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2020,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 2040,
							"linearizedBaseContracts": [
								2040,
								2052
							],
							"name": "ERC165",
							"nameLocation": "744:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2051
									],
									"body": {
										"id": 2038,
										"nodeType": "Block",
										"src": "920:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2031,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2025,
														"src": "937:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2033,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2052,
																	"src": "957:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2052_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2052_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2032,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2052",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2035,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2030,
												"id": 2037,
												"nodeType": "Return",
												"src": "930:47:8"
											}
										]
									},
									"documentation": {
										"id": 2023,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2027,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:8"
									},
									"parameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "856:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2024,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:8"
									},
									"returnParameters": {
										"id": 2030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "914:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2028,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:8"
									},
									"scope": 2040,
									"src": "829:155:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2041,
							"src": "726:260:8",
							"usedErrors": []
						}
					],
					"src": "99:888:8"
				},
				"id": 8
			},
			"contracts/OZ_contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2052
						]
					},
					"id": 2053,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2042,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2043,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2052,
							"linearizedBaseContracts": [
								2052
							],
							"name": "IERC165",
							"nameLocation": "415:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2044,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2051,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "801:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2045,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:9"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "844:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2048,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:9"
									},
									"scope": 2052,
									"src": "774:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2053,
							"src": "405:447:9",
							"usedErrors": []
						}
					],
					"src": "100:753:9"
				},
				"id": 9
			}
		}
	}
}