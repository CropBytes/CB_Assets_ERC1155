{
	"id": "9e44fbeb2538c4513fbc3f928fcb05c8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Locking.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/ERC1155Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1155.sol\";\nimport \"../../../access/AccessControl.sol\";\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n *\n * _Available since v3.1._\n */\nabstract contract ERC1155Locking is ERC1155, AccessControl {\n\n    mapping(address => bool) private _locks;\n\n    mapping(address => bool) private _permanentLocks;\n\n    bytes32 private constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n\n    function _lock(address account) internal virtual\n    {\n      _locks[account] = true;\n    }\n\n    function _unlock(address account) internal virtual\n    {\n      _locks[account] = false;\n    }\n\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC1155, AccessControl) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n\n    function _lockPermanent(address account) internal virtual\n    {\n      _permanentLocks[account] = true;\n    }\n\n    function _unlockPermanent(address account) internal virtual\n    {\n      _permanentLocks[account] = false;\n    }\n\n    function getLock(address account) external view returns(bool)\n    {\n      return _locks[account];\n    }\n\n    function _hasLock(address account) internal virtual returns(bool)\n    {\n      return _locks[account];\n    }\n\n    function getPermanentLock(address account) external view returns(bool)\n    {\n      return _permanentLocks[account];\n    }\n\n    function _hasPermanentLock(address account) internal virtual returns(bool)\n    {\n      return _permanentLocks[account];\n    }\n\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        require(_locks[from] == false || hasRole(ADMIN_ROLE, _msgSender()), \"ERC1155: Account is Locked\");\n        require(_permanentLocks[from] == false, \"ERC1155: Account is permanently Locked\");\n    }\n}\n"
			},
			"contracts/OZ_contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 ownerRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant OWNER_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleOwner(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].ownerRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleOwner(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleOwner(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `ownerRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleOwner(bytes32 role, bytes32 ownerRole) internal virtual {\n        bytes32 previousownerRole = getRoleOwner(role);\n        _roles[role].ownerRole = ownerRole;\n        emit RoleOwnerChanged(role, previousownerRole, ownerRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"contracts/OZ_contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\nimport \"../../utils/Strings.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 id) public view virtual override returns (string memory) {\n        return string(\n            abi.encodePacked(\n                _uri,\n                Strings.toString(id),\n                \".json\"\n            )\n        );\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: address zero is not a valid owner\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"
			},
			"contracts/OZ_contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			"contracts/OZ_contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"contracts/OZ_contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"contracts/OZ_contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"contracts/OZ_contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"contracts/OZ_contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleOwnerChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleOwner(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"contracts/OZ_contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/OZ_contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleOwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "OWNER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleOwner",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleOwner(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"OWNER_ROLE()": "e58378bb",
							"getRoleOwner(bytes32)": "e386880d",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleOwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OWNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleOwner\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleOwner(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/access/AccessControl.sol\":{\"keccak256\":\"0xbef9dcdf64a086dfdf43f52756b8746ac49ddb872c0fe061ee797789dc5a7c6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d43606057726944a46588a7570db076b022e254015301d129ff673f156533314\",\"dweb:/ipfs/QmZeW4P5AH3tgwy7c9yPXJZ66qkhRwb37mDPYufj1SN4aM\"]},\"contracts/OZ_contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x7373b814ff549a41e4f38644fcdebfe1a0cbe64615beebcaf001cf88e503a284\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b90e6083736e78526c73ece0f593586286b9a0b4c30b9eeff8ce4557a355feb\",\"dweb:/ipfs/QmfVAS4V328yBSC7hQFwgJejCTPRVZubVqszDnrrwzhrN7\"]},\"contracts/OZ_contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/OZ_contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"contracts/OZ_contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "contracts/OZ_contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "contracts/OZ_contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "contracts/OZ_contracts/access/AccessControl.sol:AccessControl",
										"label": "ownerRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleOwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleOwner",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleOwnerChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleOwner(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleOwner(bytes32)": "e386880d",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleOwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleOwner\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleOwnerChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleOwner(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x7373b814ff549a41e4f38644fcdebfe1a0cbe64615beebcaf001cf88e503a284\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b90e6083736e78526c73ece0f593586286b9a0b4c30b9eeff8ce4557a355feb\",\"dweb:/ipfs/QmfVAS4V328yBSC7hQFwgJejCTPRVZubVqszDnrrwzhrN7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":604:17298  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1141:1203  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1183:1196  _setURI(uri_) */\n  tag_6\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1191:1195  uri_ */\n  dup2\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1183:1190  _setURI */\n  shl(0x20, tag_7)\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1183:1196  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1141:1203  constructor(string memory uri_) {... */\n  pop\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":604:17298  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_8)\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":8349:8435  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":8422:8428  newuri */\n  dup1\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":8415:8419  _uri */\n  0x02\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":8415:8428  _uri = newuri */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":8349:8435  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":604:17298  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_14)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_14)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_14\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_14:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_22\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_21)\ntag_22:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_24:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_26\n    /* \"#utility.yul\":137:186   */\n  tag_27\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":121:187   */\n  tag_29\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_31\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":262:374   */\ntag_30:\n    /* \"#utility.yul\":383:422   */\n  tag_33\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_34\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":448:803   */\ntag_35:\n    /* \"#utility.yul\":515:520   */\n  0x00\n    /* \"#utility.yul\":564:567   */\n  dup3\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":549:555   */\n  dup4\n    /* \"#utility.yul\":545:562   */\n  add\n    /* \"#utility.yul\":541:568   */\n  slt\n    /* \"#utility.yul\":531:653   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":572:651   */\n  tag_38\n  tag_39\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":531:653   */\ntag_37:\n    /* \"#utility.yul\":682:688   */\n  dup2\n    /* \"#utility.yul\":676:689   */\n  mload\n    /* \"#utility.yul\":707:797   */\n  tag_40\n    /* \"#utility.yul\":793:796   */\n  dup5\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":778:782   */\n  0x20\n    /* \"#utility.yul\":770:776   */\n  dup7\n    /* \"#utility.yul\":766:783   */\n  add\n    /* \"#utility.yul\":707:797   */\n  tag_24\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":698:797   */\n  swap2\n  pop\n    /* \"#utility.yul\":521:803   */\n  pop\n    /* \"#utility.yul\":448:803   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:1333   */\ntag_3:\n    /* \"#utility.yul\":889:895   */\n  0x00\n    /* \"#utility.yul\":938:940   */\n  0x20\n    /* \"#utility.yul\":926:935   */\n  dup3\n    /* \"#utility.yul\":917:924   */\n  dup5\n    /* \"#utility.yul\":913:936   */\n  sub\n    /* \"#utility.yul\":909:941   */\n  slt\n    /* \"#utility.yul\":906:1025   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":944:1023   */\n  tag_43\n  tag_44\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":906:1025   */\ntag_42:\n    /* \"#utility.yul\":1085:1086   */\n  0x00\n    /* \"#utility.yul\":1074:1083   */\n  dup3\n    /* \"#utility.yul\":1070:1087   */\n  add\n    /* \"#utility.yul\":1064:1088   */\n  mload\n    /* \"#utility.yul\":1115:1133   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1107:1113   */\n  dup2\n    /* \"#utility.yul\":1104:1134   */\n  gt\n    /* \"#utility.yul\":1101:1218   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1137:1216   */\n  tag_46\n  tag_47\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1101:1218   */\ntag_45:\n    /* \"#utility.yul\":1242:1316   */\n  tag_48\n    /* \"#utility.yul\":1308:1315   */\n  dup5\n    /* \"#utility.yul\":1299:1305   */\n  dup3\n    /* \"#utility.yul\":1288:1297   */\n  dup6\n    /* \"#utility.yul\":1284:1306   */\n  add\n    /* \"#utility.yul\":1242:1316   */\n  tag_35\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1232:1316   */\n  swap2\n  pop\n    /* \"#utility.yul\":1035:1326   */\n  pop\n    /* \"#utility.yul\":809:1333   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1339:1468   */\ntag_29:\n    /* \"#utility.yul\":1373:1379   */\n  0x00\n    /* \"#utility.yul\":1400:1420   */\n  tag_50\n  tag_51\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1390:1420   */\n  swap1\n  pop\n    /* \"#utility.yul\":1429:1462   */\n  tag_52\n    /* \"#utility.yul\":1457:1461   */\n  dup3\n    /* \"#utility.yul\":1449:1455   */\n  dup3\n    /* \"#utility.yul\":1429:1462   */\n  tag_53\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1339:1468   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1474:1549   */\ntag_51:\n    /* \"#utility.yul\":1507:1513   */\n  0x00\n    /* \"#utility.yul\":1540:1542   */\n  0x40\n    /* \"#utility.yul\":1534:1543   */\n  mload\n    /* \"#utility.yul\":1524:1543   */\n  swap1\n  pop\n    /* \"#utility.yul\":1474:1549   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":1555:1863   */\ntag_28:\n    /* \"#utility.yul\":1617:1621   */\n  0x00\n    /* \"#utility.yul\":1707:1725   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1696:1726   */\n  gt\n    /* \"#utility.yul\":1693:1749   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1729:1747   */\n  tag_57\n  tag_58\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1693:1749   */\ntag_56:\n    /* \"#utility.yul\":1767:1796   */\n  tag_59\n    /* \"#utility.yul\":1789:1795   */\n  dup3\n    /* \"#utility.yul\":1767:1796   */\n  tag_60\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1759:1796   */\n  swap1\n  pop\n    /* \"#utility.yul\":1851:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1849   */\n  dup2\n    /* \"#utility.yul\":1841:1856   */\n  add\n    /* \"#utility.yul\":1833:1856   */\n  swap1\n  pop\n    /* \"#utility.yul\":1555:1863   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1869:2176   */\ntag_34:\n    /* \"#utility.yul\":1937:1938   */\n  0x00\n    /* \"#utility.yul\":1947:2060   */\ntag_62:\n    /* \"#utility.yul\":1961:1967   */\n  dup4\n    /* \"#utility.yul\":1958:1959   */\n  dup2\n    /* \"#utility.yul\":1955:1968   */\n  lt\n    /* \"#utility.yul\":1947:2060   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2046:2047   */\n  dup1\n    /* \"#utility.yul\":2041:2044   */\n  dup3\n    /* \"#utility.yul\":2037:2048   */\n  add\n    /* \"#utility.yul\":2031:2049   */\n  mload\n    /* \"#utility.yul\":2027:2028   */\n  dup2\n    /* \"#utility.yul\":2022:2025   */\n  dup5\n    /* \"#utility.yul\":2018:2029   */\n  add\n    /* \"#utility.yul\":2011:2050   */\n  mstore\n    /* \"#utility.yul\":1983:1985   */\n  0x20\n    /* \"#utility.yul\":1980:1981   */\n  dup2\n    /* \"#utility.yul\":1976:1986   */\n  add\n    /* \"#utility.yul\":1971:1986   */\n  swap1\n  pop\n    /* \"#utility.yul\":1947:2060   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":2078:2084   */\n  dup4\n    /* \"#utility.yul\":2075:2076   */\n  dup2\n    /* \"#utility.yul\":2072:2085   */\n  gt\n    /* \"#utility.yul\":2069:2170   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2158:2159   */\n  0x00\n    /* \"#utility.yul\":2149:2155   */\n  dup5\n    /* \"#utility.yul\":2144:2147   */\n  dup5\n    /* \"#utility.yul\":2140:2156   */\n  add\n    /* \"#utility.yul\":2133:2160   */\n  mstore\n    /* \"#utility.yul\":2069:2170   */\ntag_65:\n    /* \"#utility.yul\":1918:2176   */\n  pop\n    /* \"#utility.yul\":1869:2176   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2182:2502   */\ntag_13:\n    /* \"#utility.yul\":2226:2232   */\n  0x00\n    /* \"#utility.yul\":2263:2264   */\n  0x02\n    /* \"#utility.yul\":2257:2261   */\n  dup3\n    /* \"#utility.yul\":2253:2265   */\n  div\n    /* \"#utility.yul\":2243:2265   */\n  swap1\n  pop\n    /* \"#utility.yul\":2310:2311   */\n  0x01\n    /* \"#utility.yul\":2304:2308   */\n  dup3\n    /* \"#utility.yul\":2300:2312   */\n  and\n    /* \"#utility.yul\":2331:2349   */\n  dup1\n    /* \"#utility.yul\":2321:2402   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":2387:2391   */\n  0x7f\n    /* \"#utility.yul\":2379:2385   */\n  dup3\n    /* \"#utility.yul\":2375:2392   */\n  and\n    /* \"#utility.yul\":2365:2392   */\n  swap2\n  pop\n    /* \"#utility.yul\":2321:2402   */\ntag_67:\n    /* \"#utility.yul\":2449:2451   */\n  0x20\n    /* \"#utility.yul\":2441:2447   */\n  dup3\n    /* \"#utility.yul\":2438:2452   */\n  lt\n    /* \"#utility.yul\":2418:2436   */\n  dup2\n    /* \"#utility.yul\":2415:2453   */\n  eq\n    /* \"#utility.yul\":2412:2496   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2468:2486   */\n  tag_69\n  tag_70\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2412:2496   */\ntag_68:\n    /* \"#utility.yul\":2233:2502   */\n  pop\n    /* \"#utility.yul\":2182:2502   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2508:2789   */\ntag_53:\n    /* \"#utility.yul\":2591:2618   */\n  tag_72\n    /* \"#utility.yul\":2613:2617   */\n  dup3\n    /* \"#utility.yul\":2591:2618   */\n  tag_60\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2583:2589   */\n  dup2\n    /* \"#utility.yul\":2579:2619   */\n  add\n    /* \"#utility.yul\":2721:2727   */\n  dup2\n    /* \"#utility.yul\":2709:2719   */\n  dup2\n    /* \"#utility.yul\":2706:2728   */\n  lt\n    /* \"#utility.yul\":2685:2703   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2673:2683   */\n  dup3\n    /* \"#utility.yul\":2670:2704   */\n  gt\n    /* \"#utility.yul\":2667:2729   */\n  or\n    /* \"#utility.yul\":2664:2752   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2732:2750   */\n  tag_74\n  tag_58\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2664:2752   */\ntag_73:\n    /* \"#utility.yul\":2772:2782   */\n  dup1\n    /* \"#utility.yul\":2768:2770   */\n  0x40\n    /* \"#utility.yul\":2761:2783   */\n  mstore\n    /* \"#utility.yul\":2551:2789   */\n  pop\n    /* \"#utility.yul\":2508:2789   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2795:2975   */\ntag_70:\n    /* \"#utility.yul\":2843:2920   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2840:2841   */\n  0x00\n    /* \"#utility.yul\":2833:2921   */\n  mstore\n    /* \"#utility.yul\":2940:2944   */\n  0x22\n    /* \"#utility.yul\":2937:2938   */\n  0x04\n    /* \"#utility.yul\":2930:2945   */\n  mstore\n    /* \"#utility.yul\":2964:2968   */\n  0x24\n    /* \"#utility.yul\":2961:2962   */\n  0x00\n    /* \"#utility.yul\":2954:2969   */\n  revert\n    /* \"#utility.yul\":2981:3161   */\ntag_58:\n    /* \"#utility.yul\":3029:3106   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3026:3027   */\n  0x00\n    /* \"#utility.yul\":3019:3107   */\n  mstore\n    /* \"#utility.yul\":3126:3130   */\n  0x41\n    /* \"#utility.yul\":3123:3124   */\n  0x04\n    /* \"#utility.yul\":3116:3131   */\n  mstore\n    /* \"#utility.yul\":3150:3154   */\n  0x24\n    /* \"#utility.yul\":3147:3148   */\n  0x00\n    /* \"#utility.yul\":3140:3155   */\n  revert\n    /* \"#utility.yul\":3167:3284   */\ntag_39:\n    /* \"#utility.yul\":3276:3277   */\n  0x00\n    /* \"#utility.yul\":3273:3274   */\n  dup1\n    /* \"#utility.yul\":3266:3278   */\n  revert\n    /* \"#utility.yul\":3290:3407   */\ntag_32:\n    /* \"#utility.yul\":3399:3400   */\n  0x00\n    /* \"#utility.yul\":3396:3397   */\n  dup1\n    /* \"#utility.yul\":3389:3401   */\n  revert\n    /* \"#utility.yul\":3413:3530   */\ntag_47:\n    /* \"#utility.yul\":3522:3523   */\n  0x00\n    /* \"#utility.yul\":3519:3520   */\n  dup1\n    /* \"#utility.yul\":3512:3524   */\n  revert\n    /* \"#utility.yul\":3536:3653   */\ntag_44:\n    /* \"#utility.yul\":3645:3646   */\n  0x00\n    /* \"#utility.yul\":3642:3643   */\n  dup1\n    /* \"#utility.yul\":3635:3647   */\n  revert\n    /* \"#utility.yul\":3659:3761   */\ntag_60:\n    /* \"#utility.yul\":3700:3706   */\n  0x00\n    /* \"#utility.yul\":3751:3753   */\n  0x1f\n    /* \"#utility.yul\":3747:3754   */\n  not\n    /* \"#utility.yul\":3742:3744   */\n  0x1f\n    /* \"#utility.yul\":3735:3740   */\n  dup4\n    /* \"#utility.yul\":3731:3745   */\n  add\n    /* \"#utility.yul\":3727:3755   */\n  and\n    /* \"#utility.yul\":3717:3755   */\n  swap1\n  pop\n    /* \"#utility.yul\":3659:3761   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":604:17298  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":604:17298  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2363:2590  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1270:1575  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1974:2221  function uri(uint256 id) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4237:4667  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2747:3255  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3323:3476  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3543:3709  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3776:4165  function safeTransferFrom(... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2363:2590  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2449:2456  uint256 */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2495:2496  0 */\n      dup1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2476:2497  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2476:2483  account */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2476:2497  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2468:2544  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2561:2570  _balances */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2561:2574  _balances[id] */\n      dup1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2571:2573  id */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2561:2574  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2561:2583  _balances[id][account] */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2575:2582  account */\n      dup5\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2561:2583  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2554:2583  return _balances[id][account] */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2363:2590  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1270:1575  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1372:1376  bool */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1422:1448  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1407:1448  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1407:1418  interfaceId */\n      dup3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1407:1448  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1407:1516  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_58\n      jumpi\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1479:1516  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1464:1516  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1464:1475  interfaceId */\n      dup3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1464:1516  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1407:1516  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1407:1568  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_59\n      jumpi\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1532:1568  super.supportsInterface(interfaceId) */\n      tag_60\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1556:1567  interfaceId */\n      dup3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1532:1555  super.supportsInterface */\n      tag_61\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1532:1568  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_60:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1407:1568  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_59:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1388:1568  return... */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1270:1575  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1974:2221  function uri(uint256 id) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2037:2050  string memory */\n      0x60\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2123:2127  _uri */\n      0x02\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2145:2165  Strings.toString(id) */\n      tag_63\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2162:2164  id */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2145:2161  Strings.toString */\n      tag_64\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2145:2165  Strings.toString(id) */\n      jump\t// in\n    tag_63:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2089:2204  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_65\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2062:2214  return string(... */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1974:2221  function uri(uint256 id) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4237:4667  function safeBatchTransferFrom(... */\n    tag_33:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4470:4482  _msgSender() */\n      tag_68\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4470:4480  _msgSender */\n      tag_69\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4470:4482  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4462:4482  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4462:4466  from */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4462:4482  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4462:4522  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_70\n      jumpi\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4486:4522  isApprovedForAll(from, _msgSender()) */\n      tag_71\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4503:4507  from */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4509:4521  _msgSender() */\n      tag_72\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4509:4519  _msgSender */\n      tag_69\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4509:4521  _msgSender() */\n      jump\t// in\n    tag_72:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4486:4502  isApprovedForAll */\n      tag_47\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4486:4522  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_71:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4462:4522  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_70:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4441:4598  require(... */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4608:4660  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_76\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4631:4635  from */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4637:4639  to */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4641:4644  ids */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4646:4653  amounts */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4655:4659  data */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4608:4630  _safeBatchTransferFrom */\n      tag_77\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4608:4660  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_76:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4237:4667  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2747:3255  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2898:2914  uint256[] memory */\n      0x60\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2957:2960  ids */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2957:2967  ids.length */\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2938:2946  accounts */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2938:2953  accounts.length */\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2938:2967  accounts.length == ids.length */\n      eq\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2930:3013  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3024:3054  uint256[] memory batchBalances */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3071:3079  accounts */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3071:3086  accounts.length */\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3057:3087  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_82\n      jumpi\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n    tag_82:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_85\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_85:\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3024:3087  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3103:3112  uint256 i */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3098:3218  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_86:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3122:3130  accounts */\n      dup5\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3122:3137  accounts.length */\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3118:3119  i */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3118:3137  i < accounts.length */\n      lt\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3098:3218  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_87\n      jumpi\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3177:3207  balanceOf(accounts[i], ids[i]) */\n      tag_89\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3187:3195  accounts */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3196:3197  i */\n      dup3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3187:3198  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_90\n      jumpi\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n    tag_90:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3200:3203  ids */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3204:3205  i */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3200:3206  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_93\n      jumpi\n      tag_94\n      tag_92\n      jump\t// in\n    tag_94:\n    tag_93:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3177:3186  balanceOf */\n      tag_15\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3177:3207  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_89:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3158:3171  batchBalances */\n      dup3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3172:3173  i */\n      dup3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3158:3174  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_95\n      jumpi\n      tag_96\n      tag_92\n      jump\t// in\n    tag_96:\n    tag_95:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3158:3207  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3139:3142  ++i */\n      dup1\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3098:3218  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_86)\n    tag_87:\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3235:3248  batchBalances */\n      dup1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3228:3248  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2747:3255  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3323:3476  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3417:3469  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_100\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3436:3448  _msgSender() */\n      tag_101\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3436:3446  _msgSender */\n      tag_69\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3436:3448  _msgSender() */\n      jump\t// in\n    tag_101:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3450:3458  operator */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3460:3468  approved */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3417:3435  _setApprovalForAll */\n      tag_102\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3417:3469  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3323:3476  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3543:3709  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_47:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3642:3646  bool */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3665:3683  _operatorApprovals */\n      0x01\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3665:3692  _operatorApprovals[account] */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3684:3691  account */\n      dup5\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3665:3692  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3665:3702  _operatorApprovals[account][operator] */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3693:3701  operator */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3665:3702  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3658:3702  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3543:3709  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3776:4165  function safeTransferFrom(... */\n    tag_52:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3984:3996  _msgSender() */\n      tag_105\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3984:3994  _msgSender */\n      tag_69\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3984:3996  _msgSender() */\n      jump\t// in\n    tag_105:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3976:3996  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3976:3980  from */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3976:3996  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3976:4036  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_106\n      jumpi\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4000:4036  isApprovedForAll(from, _msgSender()) */\n      tag_107\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4017:4021  from */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4023:4035  _msgSender() */\n      tag_108\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4023:4033  _msgSender */\n      tag_69\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4023:4035  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4000:4016  isApprovedForAll */\n      tag_47\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4000:4036  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_107:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3976:4036  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_106:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3955:4103  require(... */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4113:4158  _safeTransferFrom(from, to, id, amount, data) */\n      tag_112\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4131:4135  from */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4137:4139  to */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4141:4143  id */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4145:4151  amount */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4153:4157  data */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4113:4130  _safeTransferFrom */\n      tag_113\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4113:4158  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3776:4165  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_61:\n        /* \"contracts/OZ_contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"contracts/OZ_contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"contracts/OZ_contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/OZ_contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"contracts/OZ_contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/OZ_contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_64:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":384:397  string memory */\n      0x60\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":610:611  0 */\n      0x00\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":601:606  value */\n      dup3\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":601:611  value == 0 */\n      eq\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n      iszero\n      tag_116\n      jumpi\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":627:637  return \"0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_115)\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n    tag_116:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":657:669  uint256 temp */\n      0x00\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":672:677  value */\n      dup3\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":657:677  uint256 temp = value */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":687:701  uint256 digits */\n      0x00\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n    tag_117:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":726:727  0 */\n      0x00\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":718:722  temp */\n      dup3\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":718:727  temp != 0 */\n      eq\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      tag_118\n      jumpi\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":743:751  digits++ */\n      dup1\n      dup1\n      tag_119\n      swap1\n      tag_98\n      jump\t// in\n    tag_119:\n      swap2\n      pop\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":773:775  10 */\n      0x0a\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      dup3\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      swap2\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      jump(tag_117)\n    tag_118:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":795:814  bytes memory buffer */\n      0x00\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":827:833  digits */\n      dup2\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":817:834  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_122\n      jumpi\n      tag_123\n      tag_84\n      jump\t// in\n    tag_123:\n    tag_122:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_124\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_124:\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":795:834  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n    tag_125:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":860:861  0 */\n      0x00\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":851:856  value */\n      dup6\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":851:861  value != 0 */\n      eq\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      tag_126\n      jumpi\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":887:888  1 */\n      0x01\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      dup3\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      swap2\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":945:950  value */\n      dup6\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":932:934  48 */\n      0x30\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":919:958  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":902:908  buffer */\n      dup2\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":909:915  digits */\n      dup4\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":902:916  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_133\n      jumpi\n      tag_134\n      tag_92\n      jump\t// in\n    tag_134:\n    tag_133:\n      0x20\n      add\n      add\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":902:958  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":981:983  10 */\n      0x0a\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":972:983  value /= 10 */\n      dup6\n      tag_135\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_135:\n      swap5\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      jump(tag_125)\n    tag_126:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":1017:1023  buffer */\n      dup1\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":1003:1024  return string(buffer) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_115:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_69:\n        /* \"contracts/OZ_contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"contracts/OZ_contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/OZ_contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6411:7526  function _safeBatchTransferFrom(... */\n    tag_77:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6631:6638  amounts */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6631:6645  amounts.length */\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6617:6620  ids */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6617:6627  ids.length */\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6617:6645  ids.length == amounts.length */\n      eq\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6609:6690  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6722:6723  0 */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6708:6724  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6708:6710  to */\n      dup5\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6708:6724  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6700:6766  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6777:6793  address operator */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6796:6808  _msgSender() */\n      tag_144\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6796:6806  _msgSender */\n      tag_69\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6796:6808  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6777:6808  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6819:6879  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_145\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6840:6848  operator */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6850:6854  from */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6856:6858  to */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6860:6863  ids */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6865:6872  amounts */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6874:6878  data */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6819:6839  _beforeTokenTransfer */\n      tag_146\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6819:6879  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6895:6904  uint256 i */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6890:7301  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_147:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6914:6917  ids */\n      dup5\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6914:6924  ids.length */\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6910:6911  i */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6910:6924  i < ids.length */\n      lt\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6890:7301  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_148\n      jumpi\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6945:6955  uint256 id */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6958:6961  ids */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6962:6963  i */\n      dup3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6958:6964  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_150\n      jumpi\n      tag_151\n      tag_92\n      jump\t// in\n    tag_151:\n    tag_150:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6945:6964  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6978:6992  uint256 amount */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6995:7002  amounts */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7003:7004  i */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6995:7005  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_152\n      jumpi\n      tag_153\n      tag_92\n      jump\t// in\n    tag_153:\n    tag_152:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6978:7005  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7020:7039  uint256 fromBalance */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7042:7051  _balances */\n      dup1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7042:7055  _balances[id] */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7052:7054  id */\n      dup5\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7042:7055  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7042:7061  _balances[id][from] */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7056:7060  from */\n      dup12\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7042:7061  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7020:7061  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7098:7104  amount */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7083:7094  fromBalance */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7083:7104  fromBalance >= amount */\n      lt\n      iszero\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7075:7151  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7229:7235  amount */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7215:7226  fromBalance */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7215:7235  fromBalance - amount */\n      sub\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7193:7202  _balances */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7193:7206  _balances[id] */\n      dup1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7203:7205  id */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7193:7206  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7193:7212  _balances[id][from] */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7207:7211  from */\n      dup13\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7193:7212  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7193:7235  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7284:7290  amount */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7263:7272  _balances */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7263:7276  _balances[id] */\n      dup1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7273:7275  id */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7263:7276  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7263:7280  _balances[id][to] */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7277:7279  to */\n      dup12\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7263:7280  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7263:7290  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_157\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_157:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6931:7301  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6926:6929  ++i */\n      dup1\n      tag_158\n      swap1\n      tag_98\n      jump\t// in\n    tag_158:\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6890:7301  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_147)\n    tag_148:\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7346:7348  to */\n      dup5\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7316:7363  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7340:7344  from */\n      dup7\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7316:7363  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7330:7338  operator */\n      dup3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7316:7363  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7350:7353  ids */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7355:7362  amounts */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7316:7363  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_159\n      swap3\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7374:7433  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_161\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7394:7402  operator */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7404:7408  from */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7410:7412  to */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7414:7417  ids */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7419:7426  amounts */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7428:7432  data */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7374:7393  _afterTokenTransfer */\n      tag_162\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7374:7433  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_161:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7444:7519  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_163\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7480:7488  operator */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7490:7494  from */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7496:7498  to */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7500:7503  ids */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7505:7512  amounts */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7514:7518  data */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7444:7479  _doSafeBatchTransferAcceptanceCheck */\n      tag_164\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7444:7519  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6599:7526  {... */\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6411:7526  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":12951:13274  function _setApprovalForAll(... */\n    tag_102:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13101:13109  operator */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13092:13109  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13092:13097  owner */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13092:13109  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13084:13155  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13203:13211  approved */\n      dup1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13165:13183  _operatorApprovals */\n      0x01\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13165:13190  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13184:13189  owner */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13165:13190  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13165:13200  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13191:13199  operator */\n      dup5\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13165:13200  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13165:13211  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13248:13256  operator */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13226:13267  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13241:13246  owner */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13226:13267  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13258:13266  approved */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13226:13267  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_169\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":12951:13274  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5118:6065  function _safeTransferFrom(... */\n    tag_113:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5313:5314  0 */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5299:5315  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5299:5301  to */\n      dup5\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5299:5315  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5291:5357  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_143\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5368:5384  address operator */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5387:5399  _msgSender() */\n      tag_173\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5387:5397  _msgSender */\n      tag_69\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5387:5399  _msgSender() */\n      jump\t// in\n    tag_173:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5368:5399  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5409:5429  uint256[] memory ids */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5432:5453  _asSingletonArray(id) */\n      tag_174\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5450:5452  id */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5432:5449  _asSingletonArray */\n      tag_175\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5432:5453  _asSingletonArray(id) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5409:5453  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5463:5487  uint256[] memory amounts */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5490:5515  _asSingletonArray(amount) */\n      tag_176\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5508:5514  amount */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5490:5507  _asSingletonArray */\n      tag_175\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5490:5515  _asSingletonArray(amount) */\n      jump\t// in\n    tag_176:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5463:5515  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5526:5586  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_177\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5547:5555  operator */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5557:5561  from */\n      dup10\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5563:5565  to */\n      dup10\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5567:5570  ids */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5572:5579  amounts */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5581:5585  data */\n      dup10\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5526:5546  _beforeTokenTransfer */\n      tag_146\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5526:5586  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_177:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5597:5616  uint256 fromBalance */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5619:5628  _balances */\n      dup1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5619:5632  _balances[id] */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5629:5631  id */\n      dup9\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5619:5632  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5619:5638  _balances[id][from] */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5633:5637  from */\n      dup11\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5619:5638  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5597:5638  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5671:5677  amount */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5656:5667  fromBalance */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5656:5677  fromBalance >= amount */\n      lt\n      iszero\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5648:5724  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_156\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5794:5800  amount */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5780:5791  fromBalance */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5780:5800  fromBalance - amount */\n      sub\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5758:5767  _balances */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5758:5771  _balances[id] */\n      dup1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5768:5770  id */\n      dup10\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5758:5771  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5758:5777  _balances[id][from] */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5772:5776  from */\n      dup12\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5758:5777  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5758:5800  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5841:5847  amount */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5820:5829  _balances */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5820:5833  _balances[id] */\n      dup1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5830:5832  id */\n      dup10\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5820:5833  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5820:5837  _balances[id][to] */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5834:5836  to */\n      dup11\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5820:5837  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5820:5847  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_180\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_180:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5894:5896  to */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5863:5909  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5888:5892  from */\n      dup10\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5863:5909  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5878:5886  operator */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5863:5909  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5898:5900  id */\n      dup11\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5902:5908  amount */\n      dup11\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5863:5909  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      tag_181\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5920:5979  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_183\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5940:5948  operator */\n      dup5\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5950:5954  from */\n      dup11\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5956:5958  to */\n      dup11\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5960:5963  ids */\n      dup7\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5965:5972  amounts */\n      dup7\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5974:5978  data */\n      dup11\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5920:5939  _afterTokenTransfer */\n      tag_162\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5920:5979  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_183:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5990:6058  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_184\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6021:6029  operator */\n      dup5\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6031:6035  from */\n      dup11\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6037:6039  to */\n      dup11\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6041:6043  id */\n      dup11\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6045:6051  amount */\n      dup11\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6053:6057  data */\n      dup11\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5990:6020  _doSafeTransferAcceptanceCheck */\n      tag_185\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5990:6058  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_184:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5281:6065  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5118:6065  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":14208:14422  function _beforeTokenTransfer(... */\n    tag_146:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15355:15568  function _afterTokenTransfer(... */\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16305:17097  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_164:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16537:16552  to.isContract() */\n      tag_189\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16537:16539  to */\n      dup5\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16537:16550  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_190\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16537:16552  to.isContract() */\n      jump\t// in\n    tag_189:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16533:17091  if (to.isContract()) {... */\n      iszero\n      tag_191\n      jumpi\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16589:16591  to */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16572:16615  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16616:16624  operator */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16626:16630  from */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16632:16635  ids */\n      dup7\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16637:16644  amounts */\n      dup7\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16646:16650  data */\n      dup7\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16572:16651  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_194\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_194:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_195\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_196\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      0x01\n    tag_195:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16568:17081  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_198\n      jumpi\n      tag_202\n      tag_203\n      jump\t// in\n    tag_202:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_201\n      jumpi\n      pop\n      tag_204\n      tag_205\n      jump\t// in\n    tag_204:\n      dup1\n      tag_206\n      jumpi\n      pop\n      jump(tag_200)\n    tag_206:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16957:16963  reason */\n      dup1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16950:16964  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16568:17081  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_201:\n      pop\n    tag_200:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17004:17066  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16568:17081  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_198:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16742:16790  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16730:16790  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16730:16738  response */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16730:16790  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16726:16883  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_211\n      jumpi\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16814:16864  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16726:16883  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_211:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16652:16897  returns (... */\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16533:17091  if (to.isContract()) {... */\n    tag_191:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16305:17097  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17103:17296  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_175:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17169:17185  uint256[] memory */\n      0x60\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17197:17219  uint256[] memory array */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17236:17237  1 */\n      0x01\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17222:17238  new uint256[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_215\n      jumpi\n      tag_216\n      tag_84\n      jump\t// in\n    tag_216:\n    tag_215:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_217\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_217:\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17197:17238  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17259:17266  element */\n      dup3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17248:17253  array */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17254:17255  0 */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17248:17256  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_218\n      jumpi\n      tag_219\n      tag_92\n      jump\t// in\n    tag_219:\n    tag_218:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17248:17266  array[0] = element */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17284:17289  array */\n      dup1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17277:17289  return array */\n      swap2\n      pop\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17103:17296  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15574:16299  function _doSafeTransferAcceptanceCheck(... */\n    tag_185:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15781:15796  to.isContract() */\n      tag_221\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15781:15783  to */\n      dup5\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15781:15794  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_190\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15781:15796  to.isContract() */\n      jump\t// in\n    tag_221:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15777:16293  if (to.isContract()) {... */\n      iszero\n      tag_222\n      jumpi\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15833:15835  to */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15816:15854  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15855:15863  operator */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15865:15869  from */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15871:15873  id */\n      dup7\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15875:15881  amount */\n      dup7\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15883:15887  data */\n      dup7\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15816:15888  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_225\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_225:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_226\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_227\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_227:\n      0x01\n    tag_226:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15812:16283  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_228\n      jumpi\n      tag_232\n      tag_203\n      jump\t// in\n    tag_232:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_231\n      jumpi\n      pop\n      tag_233\n      tag_205\n      jump\t// in\n    tag_233:\n      dup1\n      tag_234\n      jumpi\n      pop\n      jump(tag_230)\n    tag_234:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16159:16165  reason */\n      dup1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16152:16166  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15812:16283  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_231:\n      pop\n    tag_230:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16206:16268  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_209\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15812:16283  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_228:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15949:15992  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15937:15992  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15937:15945  response */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15937:15992  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15933:16085  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_238\n      jumpi\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16016:16066  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap1\n      tag_213\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15933:16085  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_238:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15889:16099  returns (bytes4 response) {... */\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15777:16293  if (to.isContract()) {... */\n    tag_222:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15574:16299  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_190:\n        /* \"contracts/OZ_contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"contracts/OZ_contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"contracts/OZ_contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"contracts/OZ_contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/OZ_contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"contracts/OZ_contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:746   */\n    tag_242:\n        /* \"#utility.yul\":120:125   */\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_244\n        /* \"#utility.yul\":161:225   */\n      tag_245\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":145:226   */\n      tag_247\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      dup4\n        /* \"#utility.yul\":268:273   */\n      dup3\n        /* \"#utility.yul\":261:282   */\n      mstore\n        /* \"#utility.yul\":309:313   */\n      0x20\n        /* \"#utility.yul\":302:307   */\n      dup3\n        /* \"#utility.yul\":298:314   */\n      add\n        /* \"#utility.yul\":291:314   */\n      swap1\n      pop\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":385:388   */\n      dup6\n        /* \"#utility.yul\":377:381   */\n      0x20\n        /* \"#utility.yul\":369:375   */\n      dup7\n        /* \"#utility.yul\":365:382   */\n      mul\n        /* \"#utility.yul\":360:363   */\n      dup3\n        /* \"#utility.yul\":356:383   */\n      add\n        /* \"#utility.yul\":353:389   */\n      gt\n        /* \"#utility.yul\":350:493   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":404:483   */\n      tag_249\n      tag_250\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":350:493   */\n    tag_248:\n        /* \"#utility.yul\":517:518   */\n      0x00\n        /* \"#utility.yul\":502:740   */\n    tag_251:\n        /* \"#utility.yul\":527:533   */\n      dup6\n        /* \"#utility.yul\":524:525   */\n      dup2\n        /* \"#utility.yul\":521:534   */\n      lt\n        /* \"#utility.yul\":502:740   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":595:598   */\n      dup2\n        /* \"#utility.yul\":624:661   */\n      tag_254\n        /* \"#utility.yul\":657:660   */\n      dup9\n        /* \"#utility.yul\":645:655   */\n      dup3\n        /* \"#utility.yul\":624:661   */\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":612:662   */\n      mstore\n        /* \"#utility.yul\":691:695   */\n      0x20\n        /* \"#utility.yul\":686:689   */\n      dup5\n        /* \"#utility.yul\":682:696   */\n      add\n        /* \"#utility.yul\":675:696   */\n      swap4\n      pop\n        /* \"#utility.yul\":725:729   */\n      0x20\n        /* \"#utility.yul\":720:723   */\n      dup4\n        /* \"#utility.yul\":716:730   */\n      add\n        /* \"#utility.yul\":709:730   */\n      swap3\n      pop\n        /* \"#utility.yul\":562:740   */\n      pop\n        /* \"#utility.yul\":549:550   */\n      0x01\n        /* \"#utility.yul\":546:547   */\n      dup2\n        /* \"#utility.yul\":542:551   */\n      add\n        /* \"#utility.yul\":537:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":502:740   */\n      jump(tag_251)\n    tag_253:\n        /* \"#utility.yul\":506:520   */\n      pop\n        /* \"#utility.yul\":126:746   */\n      pop\n      pop\n        /* \"#utility.yul\":24:746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1491   */\n    tag_256:\n        /* \"#utility.yul\":865:870   */\n      0x00\n        /* \"#utility.yul\":890:971   */\n      tag_258\n        /* \"#utility.yul\":906:970   */\n      tag_259\n        /* \"#utility.yul\":963:969   */\n      dup5\n        /* \"#utility.yul\":906:970   */\n      tag_260\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":890:971   */\n      tag_247\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":881:971   */\n      swap1\n      pop\n        /* \"#utility.yul\":991:996   */\n      dup1\n        /* \"#utility.yul\":1020:1026   */\n      dup4\n        /* \"#utility.yul\":1013:1018   */\n      dup3\n        /* \"#utility.yul\":1006:1027   */\n      mstore\n        /* \"#utility.yul\":1054:1058   */\n      0x20\n        /* \"#utility.yul\":1047:1052   */\n      dup3\n        /* \"#utility.yul\":1043:1059   */\n      add\n        /* \"#utility.yul\":1036:1059   */\n      swap1\n      pop\n        /* \"#utility.yul\":1080:1086   */\n      dup3\n        /* \"#utility.yul\":1130:1133   */\n      dup6\n        /* \"#utility.yul\":1122:1126   */\n      0x20\n        /* \"#utility.yul\":1114:1120   */\n      dup7\n        /* \"#utility.yul\":1110:1127   */\n      mul\n        /* \"#utility.yul\":1105:1108   */\n      dup3\n        /* \"#utility.yul\":1101:1128   */\n      add\n        /* \"#utility.yul\":1098:1134   */\n      gt\n        /* \"#utility.yul\":1095:1238   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":1149:1228   */\n      tag_262\n      tag_250\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":1095:1238   */\n    tag_261:\n        /* \"#utility.yul\":1262:1263   */\n      0x00\n        /* \"#utility.yul\":1247:1485   */\n    tag_263:\n        /* \"#utility.yul\":1272:1278   */\n      dup6\n        /* \"#utility.yul\":1269:1270   */\n      dup2\n        /* \"#utility.yul\":1266:1279   */\n      lt\n        /* \"#utility.yul\":1247:1485   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":1340:1343   */\n      dup2\n        /* \"#utility.yul\":1369:1406   */\n      tag_266\n        /* \"#utility.yul\":1402:1405   */\n      dup9\n        /* \"#utility.yul\":1390:1400   */\n      dup3\n        /* \"#utility.yul\":1369:1406   */\n      tag_267\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":1364:1367   */\n      dup5\n        /* \"#utility.yul\":1357:1407   */\n      mstore\n        /* \"#utility.yul\":1436:1440   */\n      0x20\n        /* \"#utility.yul\":1431:1434   */\n      dup5\n        /* \"#utility.yul\":1427:1441   */\n      add\n        /* \"#utility.yul\":1420:1441   */\n      swap4\n      pop\n        /* \"#utility.yul\":1470:1474   */\n      0x20\n        /* \"#utility.yul\":1465:1468   */\n      dup4\n        /* \"#utility.yul\":1461:1475   */\n      add\n        /* \"#utility.yul\":1454:1475   */\n      swap3\n      pop\n        /* \"#utility.yul\":1307:1485   */\n      pop\n        /* \"#utility.yul\":1294:1295   */\n      0x01\n        /* \"#utility.yul\":1291:1292   */\n      dup2\n        /* \"#utility.yul\":1287:1296   */\n      add\n        /* \"#utility.yul\":1282:1296   */\n      swap1\n      pop\n        /* \"#utility.yul\":1247:1485   */\n      jump(tag_263)\n    tag_265:\n        /* \"#utility.yul\":1251:1265   */\n      pop\n        /* \"#utility.yul\":871:1491   */\n      pop\n      pop\n        /* \"#utility.yul\":769:1491   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1497:1907   */\n    tag_268:\n        /* \"#utility.yul\":1574:1579   */\n      0x00\n        /* \"#utility.yul\":1599:1664   */\n      tag_270\n        /* \"#utility.yul\":1615:1663   */\n      tag_271\n        /* \"#utility.yul\":1656:1662   */\n      dup5\n        /* \"#utility.yul\":1615:1663   */\n      tag_272\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":1599:1664   */\n      tag_247\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":1590:1664   */\n      swap1\n      pop\n        /* \"#utility.yul\":1687:1693   */\n      dup3\n        /* \"#utility.yul\":1680:1685   */\n      dup2\n        /* \"#utility.yul\":1673:1694   */\n      mstore\n        /* \"#utility.yul\":1725:1729   */\n      0x20\n        /* \"#utility.yul\":1718:1723   */\n      dup2\n        /* \"#utility.yul\":1714:1730   */\n      add\n        /* \"#utility.yul\":1763:1766   */\n      dup5\n        /* \"#utility.yul\":1754:1760   */\n      dup5\n        /* \"#utility.yul\":1749:1752   */\n      dup5\n        /* \"#utility.yul\":1745:1761   */\n      add\n        /* \"#utility.yul\":1742:1767   */\n      gt\n        /* \"#utility.yul\":1739:1851   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":1770:1849   */\n      tag_274\n      tag_275\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":1739:1851   */\n    tag_273:\n        /* \"#utility.yul\":1860:1901   */\n      tag_276\n        /* \"#utility.yul\":1894:1900   */\n      dup5\n        /* \"#utility.yul\":1889:1892   */\n      dup3\n        /* \"#utility.yul\":1884:1887   */\n      dup6\n        /* \"#utility.yul\":1860:1901   */\n      tag_277\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":1580:1907   */\n      pop\n        /* \"#utility.yul\":1497:1907   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1913:2052   */\n    tag_255:\n        /* \"#utility.yul\":1959:1964   */\n      0x00\n        /* \"#utility.yul\":1997:2003   */\n      dup2\n        /* \"#utility.yul\":1984:2004   */\n      calldataload\n        /* \"#utility.yul\":1975:2004   */\n      swap1\n      pop\n        /* \"#utility.yul\":2013:2046   */\n      tag_279\n        /* \"#utility.yul\":2040:2045   */\n      dup2\n        /* \"#utility.yul\":2013:2046   */\n      tag_280\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":1913:2052   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2075:2445   */\n    tag_281:\n        /* \"#utility.yul\":2146:2151   */\n      0x00\n        /* \"#utility.yul\":2195:2198   */\n      dup3\n        /* \"#utility.yul\":2188:2192   */\n      0x1f\n        /* \"#utility.yul\":2180:2186   */\n      dup4\n        /* \"#utility.yul\":2176:2193   */\n      add\n        /* \"#utility.yul\":2172:2199   */\n      slt\n        /* \"#utility.yul\":2162:2284   */\n      tag_283\n      jumpi\n        /* \"#utility.yul\":2203:2282   */\n      tag_284\n      tag_285\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":2162:2284   */\n    tag_283:\n        /* \"#utility.yul\":2320:2326   */\n      dup2\n        /* \"#utility.yul\":2307:2327   */\n      calldataload\n        /* \"#utility.yul\":2345:2439   */\n      tag_286\n        /* \"#utility.yul\":2435:2438   */\n      dup5\n        /* \"#utility.yul\":2427:2433   */\n      dup3\n        /* \"#utility.yul\":2420:2424   */\n      0x20\n        /* \"#utility.yul\":2412:2418   */\n      dup7\n        /* \"#utility.yul\":2408:2425   */\n      add\n        /* \"#utility.yul\":2345:2439   */\n      tag_242\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":2336:2439   */\n      swap2\n      pop\n        /* \"#utility.yul\":2152:2445   */\n      pop\n        /* \"#utility.yul\":2075:2445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2468:2838   */\n    tag_287:\n        /* \"#utility.yul\":2539:2544   */\n      0x00\n        /* \"#utility.yul\":2588:2591   */\n      dup3\n        /* \"#utility.yul\":2581:2585   */\n      0x1f\n        /* \"#utility.yul\":2573:2579   */\n      dup4\n        /* \"#utility.yul\":2569:2586   */\n      add\n        /* \"#utility.yul\":2565:2592   */\n      slt\n        /* \"#utility.yul\":2555:2677   */\n      tag_289\n      jumpi\n        /* \"#utility.yul\":2596:2675   */\n      tag_290\n      tag_285\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2555:2677   */\n    tag_289:\n        /* \"#utility.yul\":2713:2719   */\n      dup2\n        /* \"#utility.yul\":2700:2720   */\n      calldataload\n        /* \"#utility.yul\":2738:2832   */\n      tag_291\n        /* \"#utility.yul\":2828:2831   */\n      dup5\n        /* \"#utility.yul\":2820:2826   */\n      dup3\n        /* \"#utility.yul\":2813:2817   */\n      0x20\n        /* \"#utility.yul\":2805:2811   */\n      dup7\n        /* \"#utility.yul\":2801:2818   */\n      add\n        /* \"#utility.yul\":2738:2832   */\n      tag_256\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2729:2832   */\n      swap2\n      pop\n        /* \"#utility.yul\":2545:2838   */\n      pop\n        /* \"#utility.yul\":2468:2838   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2844:2977   */\n    tag_292:\n        /* \"#utility.yul\":2887:2892   */\n      0x00\n        /* \"#utility.yul\":2925:2931   */\n      dup2\n        /* \"#utility.yul\":2912:2932   */\n      calldataload\n        /* \"#utility.yul\":2903:2932   */\n      swap1\n      pop\n        /* \"#utility.yul\":2941:2971   */\n      tag_294\n        /* \"#utility.yul\":2965:2970   */\n      dup2\n        /* \"#utility.yul\":2941:2971   */\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2844:2977   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2983:3120   */\n    tag_296:\n        /* \"#utility.yul\":3028:3033   */\n      0x00\n        /* \"#utility.yul\":3066:3072   */\n      dup2\n        /* \"#utility.yul\":3053:3073   */\n      calldataload\n        /* \"#utility.yul\":3044:3073   */\n      swap1\n      pop\n        /* \"#utility.yul\":3082:3114   */\n      tag_298\n        /* \"#utility.yul\":3108:3113   */\n      dup2\n        /* \"#utility.yul\":3082:3114   */\n      tag_299\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":2983:3120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3126:3267   */\n    tag_300:\n        /* \"#utility.yul\":3182:3187   */\n      0x00\n        /* \"#utility.yul\":3213:3219   */\n      dup2\n        /* \"#utility.yul\":3207:3220   */\n      mload\n        /* \"#utility.yul\":3198:3220   */\n      swap1\n      pop\n        /* \"#utility.yul\":3229:3261   */\n      tag_302\n        /* \"#utility.yul\":3255:3260   */\n      dup2\n        /* \"#utility.yul\":3229:3261   */\n      tag_299\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3126:3267   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3286:3624   */\n    tag_303:\n        /* \"#utility.yul\":3341:3346   */\n      0x00\n        /* \"#utility.yul\":3390:3393   */\n      dup3\n        /* \"#utility.yul\":3383:3387   */\n      0x1f\n        /* \"#utility.yul\":3375:3381   */\n      dup4\n        /* \"#utility.yul\":3371:3388   */\n      add\n        /* \"#utility.yul\":3367:3394   */\n      slt\n        /* \"#utility.yul\":3357:3479   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":3398:3477   */\n      tag_306\n      tag_285\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":3357:3479   */\n    tag_305:\n        /* \"#utility.yul\":3515:3521   */\n      dup2\n        /* \"#utility.yul\":3502:3522   */\n      calldataload\n        /* \"#utility.yul\":3540:3618   */\n      tag_307\n        /* \"#utility.yul\":3614:3617   */\n      dup5\n        /* \"#utility.yul\":3606:3612   */\n      dup3\n        /* \"#utility.yul\":3599:3603   */\n      0x20\n        /* \"#utility.yul\":3591:3597   */\n      dup7\n        /* \"#utility.yul\":3587:3604   */\n      add\n        /* \"#utility.yul\":3540:3618   */\n      tag_268\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":3531:3618   */\n      swap2\n      pop\n        /* \"#utility.yul\":3347:3624   */\n      pop\n        /* \"#utility.yul\":3286:3624   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3630:3769   */\n    tag_267:\n        /* \"#utility.yul\":3676:3681   */\n      0x00\n        /* \"#utility.yul\":3714:3720   */\n      dup2\n        /* \"#utility.yul\":3701:3721   */\n      calldataload\n        /* \"#utility.yul\":3692:3721   */\n      swap1\n      pop\n        /* \"#utility.yul\":3730:3763   */\n      tag_309\n        /* \"#utility.yul\":3757:3762   */\n      dup2\n        /* \"#utility.yul\":3730:3763   */\n      tag_310\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":3630:3769   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3775:4249   */\n    tag_46:\n        /* \"#utility.yul\":3843:3849   */\n      0x00\n        /* \"#utility.yul\":3851:3857   */\n      dup1\n        /* \"#utility.yul\":3900:3902   */\n      0x40\n        /* \"#utility.yul\":3888:3897   */\n      dup4\n        /* \"#utility.yul\":3879:3886   */\n      dup6\n        /* \"#utility.yul\":3875:3898   */\n      sub\n        /* \"#utility.yul\":3871:3903   */\n      slt\n        /* \"#utility.yul\":3868:3987   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":3906:3985   */\n      tag_313\n      tag_314\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":3868:3987   */\n    tag_312:\n        /* \"#utility.yul\":4026:4027   */\n      0x00\n        /* \"#utility.yul\":4051:4104   */\n      tag_315\n        /* \"#utility.yul\":4096:4103   */\n      dup6\n        /* \"#utility.yul\":4087:4093   */\n      dup3\n        /* \"#utility.yul\":4076:4085   */\n      dup7\n        /* \"#utility.yul\":4072:4094   */\n      add\n        /* \"#utility.yul\":4051:4104   */\n      tag_255\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":4041:4104   */\n      swap3\n      pop\n        /* \"#utility.yul\":3997:4114   */\n      pop\n        /* \"#utility.yul\":4153:4155   */\n      0x20\n        /* \"#utility.yul\":4179:4232   */\n      tag_316\n        /* \"#utility.yul\":4224:4231   */\n      dup6\n        /* \"#utility.yul\":4215:4221   */\n      dup3\n        /* \"#utility.yul\":4204:4213   */\n      dup7\n        /* \"#utility.yul\":4200:4222   */\n      add\n        /* \"#utility.yul\":4179:4232   */\n      tag_255\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":4169:4232   */\n      swap2\n      pop\n        /* \"#utility.yul\":4124:4242   */\n      pop\n        /* \"#utility.yul\":3775:4249   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4255:5764   */\n    tag_32:\n        /* \"#utility.yul\":4409:4415   */\n      0x00\n        /* \"#utility.yul\":4417:4423   */\n      dup1\n        /* \"#utility.yul\":4425:4431   */\n      0x00\n        /* \"#utility.yul\":4433:4439   */\n      dup1\n        /* \"#utility.yul\":4441:4447   */\n      0x00\n        /* \"#utility.yul\":4490:4493   */\n      0xa0\n        /* \"#utility.yul\":4478:4487   */\n      dup7\n        /* \"#utility.yul\":4469:4476   */\n      dup9\n        /* \"#utility.yul\":4465:4488   */\n      sub\n        /* \"#utility.yul\":4461:4494   */\n      slt\n        /* \"#utility.yul\":4458:4578   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":4497:4576   */\n      tag_319\n      tag_314\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":4458:4578   */\n    tag_318:\n        /* \"#utility.yul\":4617:4618   */\n      0x00\n        /* \"#utility.yul\":4642:4695   */\n      tag_320\n        /* \"#utility.yul\":4687:4694   */\n      dup9\n        /* \"#utility.yul\":4678:4684   */\n      dup3\n        /* \"#utility.yul\":4667:4676   */\n      dup10\n        /* \"#utility.yul\":4663:4685   */\n      add\n        /* \"#utility.yul\":4642:4695   */\n      tag_255\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":4632:4695   */\n      swap6\n      pop\n        /* \"#utility.yul\":4588:4705   */\n      pop\n        /* \"#utility.yul\":4744:4746   */\n      0x20\n        /* \"#utility.yul\":4770:4823   */\n      tag_321\n        /* \"#utility.yul\":4815:4822   */\n      dup9\n        /* \"#utility.yul\":4806:4812   */\n      dup3\n        /* \"#utility.yul\":4795:4804   */\n      dup10\n        /* \"#utility.yul\":4791:4813   */\n      add\n        /* \"#utility.yul\":4770:4823   */\n      tag_255\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":4760:4823   */\n      swap5\n      pop\n        /* \"#utility.yul\":4715:4833   */\n      pop\n        /* \"#utility.yul\":4900:4902   */\n      0x40\n        /* \"#utility.yul\":4889:4898   */\n      dup7\n        /* \"#utility.yul\":4885:4903   */\n      add\n        /* \"#utility.yul\":4872:4904   */\n      calldataload\n        /* \"#utility.yul\":4931:4949   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4923:4929   */\n      dup2\n        /* \"#utility.yul\":4920:4950   */\n      gt\n        /* \"#utility.yul\":4917:5034   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":4953:5032   */\n      tag_323\n      tag_324\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":4917:5034   */\n    tag_322:\n        /* \"#utility.yul\":5058:5136   */\n      tag_325\n        /* \"#utility.yul\":5128:5135   */\n      dup9\n        /* \"#utility.yul\":5119:5125   */\n      dup3\n        /* \"#utility.yul\":5108:5117   */\n      dup10\n        /* \"#utility.yul\":5104:5126   */\n      add\n        /* \"#utility.yul\":5058:5136   */\n      tag_287\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":5048:5136   */\n      swap4\n      pop\n        /* \"#utility.yul\":4843:5146   */\n      pop\n        /* \"#utility.yul\":5213:5215   */\n      0x60\n        /* \"#utility.yul\":5202:5211   */\n      dup7\n        /* \"#utility.yul\":5198:5216   */\n      add\n        /* \"#utility.yul\":5185:5217   */\n      calldataload\n        /* \"#utility.yul\":5244:5262   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5236:5242   */\n      dup2\n        /* \"#utility.yul\":5233:5263   */\n      gt\n        /* \"#utility.yul\":5230:5347   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":5266:5345   */\n      tag_327\n      tag_324\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":5230:5347   */\n    tag_326:\n        /* \"#utility.yul\":5371:5449   */\n      tag_328\n        /* \"#utility.yul\":5441:5448   */\n      dup9\n        /* \"#utility.yul\":5432:5438   */\n      dup3\n        /* \"#utility.yul\":5421:5430   */\n      dup10\n        /* \"#utility.yul\":5417:5439   */\n      add\n        /* \"#utility.yul\":5371:5449   */\n      tag_287\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":5361:5449   */\n      swap3\n      pop\n        /* \"#utility.yul\":5156:5459   */\n      pop\n        /* \"#utility.yul\":5526:5529   */\n      0x80\n        /* \"#utility.yul\":5515:5524   */\n      dup7\n        /* \"#utility.yul\":5511:5530   */\n      add\n        /* \"#utility.yul\":5498:5531   */\n      calldataload\n        /* \"#utility.yul\":5558:5576   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5550:5556   */\n      dup2\n        /* \"#utility.yul\":5547:5577   */\n      gt\n        /* \"#utility.yul\":5544:5661   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":5580:5659   */\n      tag_330\n      tag_324\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":5544:5661   */\n    tag_329:\n        /* \"#utility.yul\":5685:5747   */\n      tag_331\n        /* \"#utility.yul\":5739:5746   */\n      dup9\n        /* \"#utility.yul\":5730:5736   */\n      dup3\n        /* \"#utility.yul\":5719:5728   */\n      dup10\n        /* \"#utility.yul\":5715:5737   */\n      add\n        /* \"#utility.yul\":5685:5747   */\n      tag_303\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":5675:5747   */\n      swap2\n      pop\n        /* \"#utility.yul\":5469:5757   */\n      pop\n        /* \"#utility.yul\":4255:5764   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5770:6859   */\n    tag_51:\n        /* \"#utility.yul\":5874:5880   */\n      0x00\n        /* \"#utility.yul\":5882:5888   */\n      dup1\n        /* \"#utility.yul\":5890:5896   */\n      0x00\n        /* \"#utility.yul\":5898:5904   */\n      dup1\n        /* \"#utility.yul\":5906:5912   */\n      0x00\n        /* \"#utility.yul\":5955:5958   */\n      0xa0\n        /* \"#utility.yul\":5943:5952   */\n      dup7\n        /* \"#utility.yul\":5934:5941   */\n      dup9\n        /* \"#utility.yul\":5930:5953   */\n      sub\n        /* \"#utility.yul\":5926:5959   */\n      slt\n        /* \"#utility.yul\":5923:6043   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":5962:6041   */\n      tag_334\n      tag_314\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":5923:6043   */\n    tag_333:\n        /* \"#utility.yul\":6082:6083   */\n      0x00\n        /* \"#utility.yul\":6107:6160   */\n      tag_335\n        /* \"#utility.yul\":6152:6159   */\n      dup9\n        /* \"#utility.yul\":6143:6149   */\n      dup3\n        /* \"#utility.yul\":6132:6141   */\n      dup10\n        /* \"#utility.yul\":6128:6150   */\n      add\n        /* \"#utility.yul\":6107:6160   */\n      tag_255\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6097:6160   */\n      swap6\n      pop\n        /* \"#utility.yul\":6053:6170   */\n      pop\n        /* \"#utility.yul\":6209:6211   */\n      0x20\n        /* \"#utility.yul\":6235:6288   */\n      tag_336\n        /* \"#utility.yul\":6280:6287   */\n      dup9\n        /* \"#utility.yul\":6271:6277   */\n      dup3\n        /* \"#utility.yul\":6260:6269   */\n      dup10\n        /* \"#utility.yul\":6256:6278   */\n      add\n        /* \"#utility.yul\":6235:6288   */\n      tag_255\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":6225:6288   */\n      swap5\n      pop\n        /* \"#utility.yul\":6180:6298   */\n      pop\n        /* \"#utility.yul\":6337:6339   */\n      0x40\n        /* \"#utility.yul\":6363:6416   */\n      tag_337\n        /* \"#utility.yul\":6408:6415   */\n      dup9\n        /* \"#utility.yul\":6399:6405   */\n      dup3\n        /* \"#utility.yul\":6388:6397   */\n      dup10\n        /* \"#utility.yul\":6384:6406   */\n      add\n        /* \"#utility.yul\":6363:6416   */\n      tag_267\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":6353:6416   */\n      swap4\n      pop\n        /* \"#utility.yul\":6308:6426   */\n      pop\n        /* \"#utility.yul\":6465:6467   */\n      0x60\n        /* \"#utility.yul\":6491:6544   */\n      tag_338\n        /* \"#utility.yul\":6536:6543   */\n      dup9\n        /* \"#utility.yul\":6527:6533   */\n      dup3\n        /* \"#utility.yul\":6516:6525   */\n      dup10\n        /* \"#utility.yul\":6512:6534   */\n      add\n        /* \"#utility.yul\":6491:6544   */\n      tag_267\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":6481:6544   */\n      swap3\n      pop\n        /* \"#utility.yul\":6436:6554   */\n      pop\n        /* \"#utility.yul\":6621:6624   */\n      0x80\n        /* \"#utility.yul\":6610:6619   */\n      dup7\n        /* \"#utility.yul\":6606:6625   */\n      add\n        /* \"#utility.yul\":6593:6626   */\n      calldataload\n        /* \"#utility.yul\":6653:6671   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6645:6651   */\n      dup2\n        /* \"#utility.yul\":6642:6672   */\n      gt\n        /* \"#utility.yul\":6639:6756   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":6675:6754   */\n      tag_340\n      tag_324\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":6639:6756   */\n    tag_339:\n        /* \"#utility.yul\":6780:6842   */\n      tag_341\n        /* \"#utility.yul\":6834:6841   */\n      dup9\n        /* \"#utility.yul\":6825:6831   */\n      dup3\n        /* \"#utility.yul\":6814:6823   */\n      dup10\n        /* \"#utility.yul\":6810:6832   */\n      add\n        /* \"#utility.yul\":6780:6842   */\n      tag_303\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":6770:6842   */\n      swap2\n      pop\n        /* \"#utility.yul\":6564:6852   */\n      pop\n        /* \"#utility.yul\":5770:6859   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6865:7333   */\n    tag_42:\n        /* \"#utility.yul\":6930:6936   */\n      0x00\n        /* \"#utility.yul\":6938:6944   */\n      dup1\n        /* \"#utility.yul\":6987:6989   */\n      0x40\n        /* \"#utility.yul\":6975:6984   */\n      dup4\n        /* \"#utility.yul\":6966:6973   */\n      dup6\n        /* \"#utility.yul\":6962:6985   */\n      sub\n        /* \"#utility.yul\":6958:6990   */\n      slt\n        /* \"#utility.yul\":6955:7074   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":6993:7072   */\n      tag_344\n      tag_314\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":6955:7074   */\n    tag_343:\n        /* \"#utility.yul\":7113:7114   */\n      0x00\n        /* \"#utility.yul\":7138:7191   */\n      tag_345\n        /* \"#utility.yul\":7183:7190   */\n      dup6\n        /* \"#utility.yul\":7174:7180   */\n      dup3\n        /* \"#utility.yul\":7163:7172   */\n      dup7\n        /* \"#utility.yul\":7159:7181   */\n      add\n        /* \"#utility.yul\":7138:7191   */\n      tag_255\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":7128:7191   */\n      swap3\n      pop\n        /* \"#utility.yul\":7084:7201   */\n      pop\n        /* \"#utility.yul\":7240:7242   */\n      0x20\n        /* \"#utility.yul\":7266:7316   */\n      tag_346\n        /* \"#utility.yul\":7308:7315   */\n      dup6\n        /* \"#utility.yul\":7299:7305   */\n      dup3\n        /* \"#utility.yul\":7288:7297   */\n      dup7\n        /* \"#utility.yul\":7284:7306   */\n      add\n        /* \"#utility.yul\":7266:7316   */\n      tag_292\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":7256:7316   */\n      swap2\n      pop\n        /* \"#utility.yul\":7211:7326   */\n      pop\n        /* \"#utility.yul\":6865:7333   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7339:7813   */\n    tag_14:\n        /* \"#utility.yul\":7407:7413   */\n      0x00\n        /* \"#utility.yul\":7415:7421   */\n      dup1\n        /* \"#utility.yul\":7464:7466   */\n      0x40\n        /* \"#utility.yul\":7452:7461   */\n      dup4\n        /* \"#utility.yul\":7443:7450   */\n      dup6\n        /* \"#utility.yul\":7439:7462   */\n      sub\n        /* \"#utility.yul\":7435:7467   */\n      slt\n        /* \"#utility.yul\":7432:7551   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":7470:7549   */\n      tag_349\n      tag_314\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":7432:7551   */\n    tag_348:\n        /* \"#utility.yul\":7590:7591   */\n      0x00\n        /* \"#utility.yul\":7615:7668   */\n      tag_350\n        /* \"#utility.yul\":7660:7667   */\n      dup6\n        /* \"#utility.yul\":7651:7657   */\n      dup3\n        /* \"#utility.yul\":7640:7649   */\n      dup7\n        /* \"#utility.yul\":7636:7658   */\n      add\n        /* \"#utility.yul\":7615:7668   */\n      tag_255\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":7605:7668   */\n      swap3\n      pop\n        /* \"#utility.yul\":7561:7678   */\n      pop\n        /* \"#utility.yul\":7717:7719   */\n      0x20\n        /* \"#utility.yul\":7743:7796   */\n      tag_351\n        /* \"#utility.yul\":7788:7795   */\n      dup6\n        /* \"#utility.yul\":7779:7785   */\n      dup3\n        /* \"#utility.yul\":7768:7777   */\n      dup7\n        /* \"#utility.yul\":7764:7786   */\n      add\n        /* \"#utility.yul\":7743:7796   */\n      tag_267\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":7733:7796   */\n      swap2\n      pop\n        /* \"#utility.yul\":7688:7806   */\n      pop\n        /* \"#utility.yul\":7339:7813   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7819:8713   */\n    tag_36:\n        /* \"#utility.yul\":7937:7943   */\n      0x00\n        /* \"#utility.yul\":7945:7951   */\n      dup1\n        /* \"#utility.yul\":7994:7996   */\n      0x40\n        /* \"#utility.yul\":7982:7991   */\n      dup4\n        /* \"#utility.yul\":7973:7980   */\n      dup6\n        /* \"#utility.yul\":7969:7992   */\n      sub\n        /* \"#utility.yul\":7965:7997   */\n      slt\n        /* \"#utility.yul\":7962:8081   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":8000:8079   */\n      tag_354\n      tag_314\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":7962:8081   */\n    tag_353:\n        /* \"#utility.yul\":8148:8149   */\n      0x00\n        /* \"#utility.yul\":8137:8146   */\n      dup4\n        /* \"#utility.yul\":8133:8150   */\n      add\n        /* \"#utility.yul\":8120:8151   */\n      calldataload\n        /* \"#utility.yul\":8178:8196   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8170:8176   */\n      dup2\n        /* \"#utility.yul\":8167:8197   */\n      gt\n        /* \"#utility.yul\":8164:8281   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":8200:8279   */\n      tag_356\n      tag_324\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":8164:8281   */\n    tag_355:\n        /* \"#utility.yul\":8305:8383   */\n      tag_357\n        /* \"#utility.yul\":8375:8382   */\n      dup6\n        /* \"#utility.yul\":8366:8372   */\n      dup3\n        /* \"#utility.yul\":8355:8364   */\n      dup7\n        /* \"#utility.yul\":8351:8373   */\n      add\n        /* \"#utility.yul\":8305:8383   */\n      tag_281\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":8295:8383   */\n      swap3\n      pop\n        /* \"#utility.yul\":8091:8393   */\n      pop\n        /* \"#utility.yul\":8460:8462   */\n      0x20\n        /* \"#utility.yul\":8449:8458   */\n      dup4\n        /* \"#utility.yul\":8445:8463   */\n      add\n        /* \"#utility.yul\":8432:8464   */\n      calldataload\n        /* \"#utility.yul\":8491:8509   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8483:8489   */\n      dup2\n        /* \"#utility.yul\":8480:8510   */\n      gt\n        /* \"#utility.yul\":8477:8594   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":8513:8592   */\n      tag_359\n      tag_324\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":8477:8594   */\n    tag_358:\n        /* \"#utility.yul\":8618:8696   */\n      tag_360\n        /* \"#utility.yul\":8688:8695   */\n      dup6\n        /* \"#utility.yul\":8679:8685   */\n      dup3\n        /* \"#utility.yul\":8668:8677   */\n      dup7\n        /* \"#utility.yul\":8664:8686   */\n      add\n        /* \"#utility.yul\":8618:8696   */\n      tag_287\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":8608:8696   */\n      swap2\n      pop\n        /* \"#utility.yul\":8403:8706   */\n      pop\n        /* \"#utility.yul\":7819:8713   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8719:9046   */\n    tag_20:\n        /* \"#utility.yul\":8777:8783   */\n      0x00\n        /* \"#utility.yul\":8826:8828   */\n      0x20\n        /* \"#utility.yul\":8814:8823   */\n      dup3\n        /* \"#utility.yul\":8805:8812   */\n      dup5\n        /* \"#utility.yul\":8801:8824   */\n      sub\n        /* \"#utility.yul\":8797:8829   */\n      slt\n        /* \"#utility.yul\":8794:8913   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":8832:8911   */\n      tag_363\n      tag_314\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":8794:8913   */\n    tag_362:\n        /* \"#utility.yul\":8952:8953   */\n      0x00\n        /* \"#utility.yul\":8977:9029   */\n      tag_364\n        /* \"#utility.yul\":9021:9028   */\n      dup5\n        /* \"#utility.yul\":9012:9018   */\n      dup3\n        /* \"#utility.yul\":9001:9010   */\n      dup6\n        /* \"#utility.yul\":8997:9019   */\n      add\n        /* \"#utility.yul\":8977:9029   */\n      tag_296\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":8967:9029   */\n      swap2\n      pop\n        /* \"#utility.yul\":8923:9039   */\n      pop\n        /* \"#utility.yul\":8719:9046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9052:9401   */\n    tag_197:\n        /* \"#utility.yul\":9121:9127   */\n      0x00\n        /* \"#utility.yul\":9170:9172   */\n      0x20\n        /* \"#utility.yul\":9158:9167   */\n      dup3\n        /* \"#utility.yul\":9149:9156   */\n      dup5\n        /* \"#utility.yul\":9145:9168   */\n      sub\n        /* \"#utility.yul\":9141:9173   */\n      slt\n        /* \"#utility.yul\":9138:9257   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":9176:9255   */\n      tag_367\n      tag_314\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":9138:9257   */\n    tag_366:\n        /* \"#utility.yul\":9296:9297   */\n      0x00\n        /* \"#utility.yul\":9321:9384   */\n      tag_368\n        /* \"#utility.yul\":9376:9383   */\n      dup5\n        /* \"#utility.yul\":9367:9373   */\n      dup3\n        /* \"#utility.yul\":9356:9365   */\n      dup6\n        /* \"#utility.yul\":9352:9374   */\n      add\n        /* \"#utility.yul\":9321:9384   */\n      tag_300\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":9311:9384   */\n      swap2\n      pop\n        /* \"#utility.yul\":9267:9394   */\n      pop\n        /* \"#utility.yul\":9052:9401   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9407:9736   */\n    tag_26:\n        /* \"#utility.yul\":9466:9472   */\n      0x00\n        /* \"#utility.yul\":9515:9517   */\n      0x20\n        /* \"#utility.yul\":9503:9512   */\n      dup3\n        /* \"#utility.yul\":9494:9501   */\n      dup5\n        /* \"#utility.yul\":9490:9513   */\n      sub\n        /* \"#utility.yul\":9486:9518   */\n      slt\n        /* \"#utility.yul\":9483:9602   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":9521:9600   */\n      tag_371\n      tag_314\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":9483:9602   */\n    tag_370:\n        /* \"#utility.yul\":9641:9642   */\n      0x00\n        /* \"#utility.yul\":9666:9719   */\n      tag_372\n        /* \"#utility.yul\":9711:9718   */\n      dup5\n        /* \"#utility.yul\":9702:9708   */\n      dup3\n        /* \"#utility.yul\":9691:9700   */\n      dup6\n        /* \"#utility.yul\":9687:9709   */\n      add\n        /* \"#utility.yul\":9666:9719   */\n      tag_267\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":9656:9719   */\n      swap2\n      pop\n        /* \"#utility.yul\":9612:9729   */\n      pop\n        /* \"#utility.yul\":9407:9736   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9742:9921   */\n    tag_373:\n        /* \"#utility.yul\":9811:9821   */\n      0x00\n        /* \"#utility.yul\":9832:9878   */\n      tag_375\n        /* \"#utility.yul\":9874:9877   */\n      dup4\n        /* \"#utility.yul\":9866:9872   */\n      dup4\n        /* \"#utility.yul\":9832:9878   */\n      tag_376\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":9910:9914   */\n      0x20\n        /* \"#utility.yul\":9905:9908   */\n      dup4\n        /* \"#utility.yul\":9901:9915   */\n      add\n        /* \"#utility.yul\":9887:9915   */\n      swap1\n      pop\n        /* \"#utility.yul\":9742:9921   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9927:10045   */\n    tag_377:\n        /* \"#utility.yul\":10014:10038   */\n      tag_379\n        /* \"#utility.yul\":10032:10037   */\n      dup2\n        /* \"#utility.yul\":10014:10038   */\n      tag_380\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":10009:10012   */\n      dup3\n        /* \"#utility.yul\":10002:10039   */\n      mstore\n        /* \"#utility.yul\":9927:10045   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10081:10813   */\n    tag_381:\n        /* \"#utility.yul\":10200:10203   */\n      0x00\n        /* \"#utility.yul\":10229:10283   */\n      tag_383\n        /* \"#utility.yul\":10277:10282   */\n      dup3\n        /* \"#utility.yul\":10229:10283   */\n      tag_384\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":10299:10385   */\n      tag_385\n        /* \"#utility.yul\":10378:10384   */\n      dup2\n        /* \"#utility.yul\":10373:10376   */\n      dup6\n        /* \"#utility.yul\":10299:10385   */\n      tag_386\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":10292:10385   */\n      swap4\n      pop\n        /* \"#utility.yul\":10409:10465   */\n      tag_387\n        /* \"#utility.yul\":10459:10464   */\n      dup4\n        /* \"#utility.yul\":10409:10465   */\n      tag_388\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":10488:10495   */\n      dup1\n        /* \"#utility.yul\":10519:10520   */\n      0x00\n        /* \"#utility.yul\":10504:10788   */\n    tag_389:\n        /* \"#utility.yul\":10529:10535   */\n      dup4\n        /* \"#utility.yul\":10526:10527   */\n      dup2\n        /* \"#utility.yul\":10523:10536   */\n      lt\n        /* \"#utility.yul\":10504:10788   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":10605:10611   */\n      dup2\n        /* \"#utility.yul\":10599:10612   */\n      mload\n        /* \"#utility.yul\":10632:10695   */\n      tag_392\n        /* \"#utility.yul\":10691:10694   */\n      dup9\n        /* \"#utility.yul\":10676:10689   */\n      dup3\n        /* \"#utility.yul\":10632:10695   */\n      tag_373\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":10625:10695   */\n      swap8\n      pop\n        /* \"#utility.yul\":10718:10778   */\n      tag_393\n        /* \"#utility.yul\":10771:10777   */\n      dup4\n        /* \"#utility.yul\":10718:10778   */\n      tag_394\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":10708:10778   */\n      swap3\n      pop\n        /* \"#utility.yul\":10564:10788   */\n      pop\n        /* \"#utility.yul\":10551:10552   */\n      0x01\n        /* \"#utility.yul\":10548:10549   */\n      dup2\n        /* \"#utility.yul\":10544:10553   */\n      add\n        /* \"#utility.yul\":10539:10553   */\n      swap1\n      pop\n        /* \"#utility.yul\":10504:10788   */\n      jump(tag_389)\n    tag_391:\n        /* \"#utility.yul\":10508:10522   */\n      pop\n        /* \"#utility.yul\":10804:10807   */\n      dup6\n        /* \"#utility.yul\":10797:10807   */\n      swap4\n      pop\n        /* \"#utility.yul\":10205:10813   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10081:10813   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10819:10928   */\n    tag_395:\n        /* \"#utility.yul\":10900:10921   */\n      tag_397\n        /* \"#utility.yul\":10915:10920   */\n      dup2\n        /* \"#utility.yul\":10900:10921   */\n      tag_398\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":10895:10898   */\n      dup3\n        /* \"#utility.yul\":10888:10922   */\n      mstore\n        /* \"#utility.yul\":10819:10928   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10934:11294   */\n    tag_399:\n        /* \"#utility.yul\":11020:11023   */\n      0x00\n        /* \"#utility.yul\":11048:11086   */\n      tag_401\n        /* \"#utility.yul\":11080:11085   */\n      dup3\n        /* \"#utility.yul\":11048:11086   */\n      tag_402\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":11102:11172   */\n      tag_403\n        /* \"#utility.yul\":11165:11171   */\n      dup2\n        /* \"#utility.yul\":11160:11163   */\n      dup6\n        /* \"#utility.yul\":11102:11172   */\n      tag_404\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":11095:11172   */\n      swap4\n      pop\n        /* \"#utility.yul\":11181:11233   */\n      tag_405\n        /* \"#utility.yul\":11226:11232   */\n      dup2\n        /* \"#utility.yul\":11221:11224   */\n      dup6\n        /* \"#utility.yul\":11214:11218   */\n      0x20\n        /* \"#utility.yul\":11207:11212   */\n      dup7\n        /* \"#utility.yul\":11203:11219   */\n      add\n        /* \"#utility.yul\":11181:11233   */\n      tag_406\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":11258:11287   */\n      tag_407\n        /* \"#utility.yul\":11280:11286   */\n      dup2\n        /* \"#utility.yul\":11258:11287   */\n      tag_408\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":11253:11256   */\n      dup5\n        /* \"#utility.yul\":11249:11288   */\n      add\n        /* \"#utility.yul\":11242:11288   */\n      swap2\n      pop\n        /* \"#utility.yul\":11024:11294   */\n      pop\n        /* \"#utility.yul\":10934:11294   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11300:11664   */\n    tag_409:\n        /* \"#utility.yul\":11388:11391   */\n      0x00\n        /* \"#utility.yul\":11416:11455   */\n      tag_411\n        /* \"#utility.yul\":11449:11454   */\n      dup3\n        /* \"#utility.yul\":11416:11455   */\n      tag_412\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":11471:11542   */\n      tag_413\n        /* \"#utility.yul\":11535:11541   */\n      dup2\n        /* \"#utility.yul\":11530:11533   */\n      dup6\n        /* \"#utility.yul\":11471:11542   */\n      tag_414\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":11464:11542   */\n      swap4\n      pop\n        /* \"#utility.yul\":11551:11603   */\n      tag_415\n        /* \"#utility.yul\":11596:11602   */\n      dup2\n        /* \"#utility.yul\":11591:11594   */\n      dup6\n        /* \"#utility.yul\":11584:11588   */\n      0x20\n        /* \"#utility.yul\":11577:11582   */\n      dup7\n        /* \"#utility.yul\":11573:11589   */\n      add\n        /* \"#utility.yul\":11551:11603   */\n      tag_406\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":11628:11657   */\n      tag_416\n        /* \"#utility.yul\":11650:11656   */\n      dup2\n        /* \"#utility.yul\":11628:11657   */\n      tag_408\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":11623:11626   */\n      dup5\n        /* \"#utility.yul\":11619:11658   */\n      add\n        /* \"#utility.yul\":11612:11658   */\n      swap2\n      pop\n        /* \"#utility.yul\":11392:11664   */\n      pop\n        /* \"#utility.yul\":11300:11664   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11670:12047   */\n    tag_417:\n        /* \"#utility.yul\":11776:11779   */\n      0x00\n        /* \"#utility.yul\":11804:11843   */\n      tag_419\n        /* \"#utility.yul\":11837:11842   */\n      dup3\n        /* \"#utility.yul\":11804:11843   */\n      tag_412\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":11859:11948   */\n      tag_420\n        /* \"#utility.yul\":11941:11947   */\n      dup2\n        /* \"#utility.yul\":11936:11939   */\n      dup6\n        /* \"#utility.yul\":11859:11948   */\n      tag_421\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":11852:11948   */\n      swap4\n      pop\n        /* \"#utility.yul\":11957:12009   */\n      tag_422\n        /* \"#utility.yul\":12002:12008   */\n      dup2\n        /* \"#utility.yul\":11997:12000   */\n      dup6\n        /* \"#utility.yul\":11990:11994   */\n      0x20\n        /* \"#utility.yul\":11983:11988   */\n      dup7\n        /* \"#utility.yul\":11979:11995   */\n      add\n        /* \"#utility.yul\":11957:12009   */\n      tag_406\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":12034:12040   */\n      dup1\n        /* \"#utility.yul\":12029:12032   */\n      dup5\n        /* \"#utility.yul\":12025:12041   */\n      add\n        /* \"#utility.yul\":12018:12041   */\n      swap2\n      pop\n        /* \"#utility.yul\":11780:12047   */\n      pop\n        /* \"#utility.yul\":11670:12047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12077:12922   */\n    tag_423:\n        /* \"#utility.yul\":12180:12183   */\n      0x00\n        /* \"#utility.yul\":12217:12222   */\n      dup2\n        /* \"#utility.yul\":12211:12223   */\n      sload\n        /* \"#utility.yul\":12246:12282   */\n      tag_425\n        /* \"#utility.yul\":12272:12281   */\n      dup2\n        /* \"#utility.yul\":12246:12282   */\n      tag_426\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":12298:12387   */\n      tag_427\n        /* \"#utility.yul\":12380:12386   */\n      dup2\n        /* \"#utility.yul\":12375:12378   */\n      dup7\n        /* \"#utility.yul\":12298:12387   */\n      tag_421\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":12291:12387   */\n      swap5\n      pop\n        /* \"#utility.yul\":12418:12419   */\n      0x01\n        /* \"#utility.yul\":12407:12416   */\n      dup3\n        /* \"#utility.yul\":12403:12420   */\n      and\n        /* \"#utility.yul\":12434:12435   */\n      0x00\n        /* \"#utility.yul\":12429:12566   */\n      dup2\n      eq\n      tag_429\n      jumpi\n        /* \"#utility.yul\":12580:12581   */\n      0x01\n        /* \"#utility.yul\":12575:12916   */\n      dup2\n      eq\n      tag_430\n      jumpi\n        /* \"#utility.yul\":12396:12916   */\n      jump(tag_428)\n        /* \"#utility.yul\":12429:12566   */\n    tag_429:\n        /* \"#utility.yul\":12513:12517   */\n      0xff\n        /* \"#utility.yul\":12509:12518   */\n      not\n        /* \"#utility.yul\":12498:12507   */\n      dup4\n        /* \"#utility.yul\":12494:12519   */\n      and\n        /* \"#utility.yul\":12489:12492   */\n      dup7\n        /* \"#utility.yul\":12482:12520   */\n      mstore\n        /* \"#utility.yul\":12549:12555   */\n      dup2\n        /* \"#utility.yul\":12544:12547   */\n      dup7\n        /* \"#utility.yul\":12540:12556   */\n      add\n        /* \"#utility.yul\":12533:12556   */\n      swap4\n      pop\n        /* \"#utility.yul\":12429:12566   */\n      jump(tag_428)\n        /* \"#utility.yul\":12575:12916   */\n    tag_430:\n        /* \"#utility.yul\":12642:12680   */\n      tag_431\n        /* \"#utility.yul\":12674:12679   */\n      dup6\n        /* \"#utility.yul\":12642:12680   */\n      tag_432\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":12702:12703   */\n      0x00\n        /* \"#utility.yul\":12716:12870   */\n    tag_433:\n        /* \"#utility.yul\":12730:12736   */\n      dup4\n        /* \"#utility.yul\":12727:12728   */\n      dup2\n        /* \"#utility.yul\":12724:12737   */\n      lt\n        /* \"#utility.yul\":12716:12870   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":12804:12811   */\n      dup2\n        /* \"#utility.yul\":12798:12812   */\n      sload\n        /* \"#utility.yul\":12794:12795   */\n      dup2\n        /* \"#utility.yul\":12789:12792   */\n      dup10\n        /* \"#utility.yul\":12785:12796   */\n      add\n        /* \"#utility.yul\":12778:12813   */\n      mstore\n        /* \"#utility.yul\":12854:12855   */\n      0x01\n        /* \"#utility.yul\":12845:12852   */\n      dup3\n        /* \"#utility.yul\":12841:12856   */\n      add\n        /* \"#utility.yul\":12830:12856   */\n      swap2\n      pop\n        /* \"#utility.yul\":12752:12756   */\n      0x20\n        /* \"#utility.yul\":12749:12750   */\n      dup2\n        /* \"#utility.yul\":12745:12757   */\n      add\n        /* \"#utility.yul\":12740:12757   */\n      swap1\n      pop\n        /* \"#utility.yul\":12716:12870   */\n      jump(tag_433)\n    tag_435:\n        /* \"#utility.yul\":12899:12905   */\n      dup4\n        /* \"#utility.yul\":12894:12897   */\n      dup9\n        /* \"#utility.yul\":12890:12906   */\n      add\n        /* \"#utility.yul\":12883:12906   */\n      swap6\n      pop\n        /* \"#utility.yul\":12582:12916   */\n      pop\n      pop\n        /* \"#utility.yul\":12396:12916   */\n    tag_428:\n      pop\n        /* \"#utility.yul\":12184:12922   */\n      pop\n      pop\n        /* \"#utility.yul\":12077:12922   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12928:13294   */\n    tag_436:\n        /* \"#utility.yul\":13070:13073   */\n      0x00\n        /* \"#utility.yul\":13091:13158   */\n      tag_438\n        /* \"#utility.yul\":13155:13157   */\n      0x34\n        /* \"#utility.yul\":13150:13153   */\n      dup4\n        /* \"#utility.yul\":13091:13158   */\n      tag_414\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":13084:13158   */\n      swap2\n      pop\n        /* \"#utility.yul\":13167:13260   */\n      tag_439\n        /* \"#utility.yul\":13256:13259   */\n      dup3\n        /* \"#utility.yul\":13167:13260   */\n      tag_440\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":13285:13287   */\n      0x40\n        /* \"#utility.yul\":13280:13283   */\n      dup3\n        /* \"#utility.yul\":13276:13288   */\n      add\n        /* \"#utility.yul\":13269:13288   */\n      swap1\n      pop\n        /* \"#utility.yul\":12928:13294   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13300:13666   */\n    tag_441:\n        /* \"#utility.yul\":13442:13445   */\n      0x00\n        /* \"#utility.yul\":13463:13530   */\n      tag_443\n        /* \"#utility.yul\":13527:13529   */\n      0x28\n        /* \"#utility.yul\":13522:13525   */\n      dup4\n        /* \"#utility.yul\":13463:13530   */\n      tag_414\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":13456:13530   */\n      swap2\n      pop\n        /* \"#utility.yul\":13539:13632   */\n      tag_444\n        /* \"#utility.yul\":13628:13631   */\n      dup3\n        /* \"#utility.yul\":13539:13632   */\n      tag_445\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":13657:13659   */\n      0x40\n        /* \"#utility.yul\":13652:13655   */\n      dup3\n        /* \"#utility.yul\":13648:13660   */\n      add\n        /* \"#utility.yul\":13641:13660   */\n      swap1\n      pop\n        /* \"#utility.yul\":13300:13666   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13672:14038   */\n    tag_446:\n        /* \"#utility.yul\":13814:13817   */\n      0x00\n        /* \"#utility.yul\":13835:13902   */\n      tag_448\n        /* \"#utility.yul\":13899:13901   */\n      0x29\n        /* \"#utility.yul\":13894:13897   */\n      dup4\n        /* \"#utility.yul\":13835:13902   */\n      tag_414\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":13828:13902   */\n      swap2\n      pop\n        /* \"#utility.yul\":13911:14004   */\n      tag_449\n        /* \"#utility.yul\":14000:14003   */\n      dup3\n        /* \"#utility.yul\":13911:14004   */\n      tag_450\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":14029:14031   */\n      0x40\n        /* \"#utility.yul\":14024:14027   */\n      dup3\n        /* \"#utility.yul\":14020:14032   */\n      add\n        /* \"#utility.yul\":14013:14032   */\n      swap1\n      pop\n        /* \"#utility.yul\":13672:14038   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14044:14410   */\n    tag_451:\n        /* \"#utility.yul\":14186:14189   */\n      0x00\n        /* \"#utility.yul\":14207:14274   */\n      tag_453\n        /* \"#utility.yul\":14271:14273   */\n      0x2a\n        /* \"#utility.yul\":14266:14269   */\n      dup4\n        /* \"#utility.yul\":14207:14274   */\n      tag_414\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":14200:14274   */\n      swap2\n      pop\n        /* \"#utility.yul\":14283:14376   */\n      tag_454\n        /* \"#utility.yul\":14372:14375   */\n      dup3\n        /* \"#utility.yul\":14283:14376   */\n      tag_455\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":14401:14403   */\n      0x40\n        /* \"#utility.yul\":14396:14399   */\n      dup3\n        /* \"#utility.yul\":14392:14404   */\n      add\n        /* \"#utility.yul\":14385:14404   */\n      swap1\n      pop\n        /* \"#utility.yul\":14044:14410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14416:14782   */\n    tag_456:\n        /* \"#utility.yul\":14558:14561   */\n      0x00\n        /* \"#utility.yul\":14579:14646   */\n      tag_458\n        /* \"#utility.yul\":14643:14645   */\n      0x25\n        /* \"#utility.yul\":14638:14641   */\n      dup4\n        /* \"#utility.yul\":14579:14646   */\n      tag_414\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":14572:14646   */\n      swap2\n      pop\n        /* \"#utility.yul\":14655:14748   */\n      tag_459\n        /* \"#utility.yul\":14744:14747   */\n      dup3\n        /* \"#utility.yul\":14655:14748   */\n      tag_460\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":14773:14775   */\n      0x40\n        /* \"#utility.yul\":14768:14771   */\n      dup3\n        /* \"#utility.yul\":14764:14776   */\n      add\n        /* \"#utility.yul\":14757:14776   */\n      swap1\n      pop\n        /* \"#utility.yul\":14416:14782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14788:15154   */\n    tag_461:\n        /* \"#utility.yul\":14930:14933   */\n      0x00\n        /* \"#utility.yul\":14951:15018   */\n      tag_463\n        /* \"#utility.yul\":15015:15017   */\n      0x32\n        /* \"#utility.yul\":15010:15013   */\n      dup4\n        /* \"#utility.yul\":14951:15018   */\n      tag_414\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":14944:15018   */\n      swap2\n      pop\n        /* \"#utility.yul\":15027:15120   */\n      tag_464\n        /* \"#utility.yul\":15116:15119   */\n      dup3\n        /* \"#utility.yul\":15027:15120   */\n      tag_465\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":15145:15147   */\n      0x40\n        /* \"#utility.yul\":15140:15143   */\n      dup3\n        /* \"#utility.yul\":15136:15148   */\n      add\n        /* \"#utility.yul\":15129:15148   */\n      swap1\n      pop\n        /* \"#utility.yul\":14788:15154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15160:15526   */\n    tag_466:\n        /* \"#utility.yul\":15302:15305   */\n      0x00\n        /* \"#utility.yul\":15323:15390   */\n      tag_468\n        /* \"#utility.yul\":15387:15389   */\n      0x2a\n        /* \"#utility.yul\":15382:15385   */\n      dup4\n        /* \"#utility.yul\":15323:15390   */\n      tag_414\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":15316:15390   */\n      swap2\n      pop\n        /* \"#utility.yul\":15399:15492   */\n      tag_469\n        /* \"#utility.yul\":15488:15491   */\n      dup3\n        /* \"#utility.yul\":15399:15492   */\n      tag_470\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":15517:15519   */\n      0x40\n        /* \"#utility.yul\":15512:15515   */\n      dup3\n        /* \"#utility.yul\":15508:15520   */\n      add\n        /* \"#utility.yul\":15501:15520   */\n      swap1\n      pop\n        /* \"#utility.yul\":15160:15526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15532:15932   */\n    tag_471:\n        /* \"#utility.yul\":15692:15695   */\n      0x00\n        /* \"#utility.yul\":15713:15797   */\n      tag_473\n        /* \"#utility.yul\":15795:15796   */\n      0x05\n        /* \"#utility.yul\":15790:15793   */\n      dup4\n        /* \"#utility.yul\":15713:15797   */\n      tag_421\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":15706:15797   */\n      swap2\n      pop\n        /* \"#utility.yul\":15806:15899   */\n      tag_474\n        /* \"#utility.yul\":15895:15898   */\n      dup3\n        /* \"#utility.yul\":15806:15899   */\n      tag_475\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":15924:15925   */\n      0x05\n        /* \"#utility.yul\":15919:15922   */\n      dup3\n        /* \"#utility.yul\":15915:15926   */\n      add\n        /* \"#utility.yul\":15908:15926   */\n      swap1\n      pop\n        /* \"#utility.yul\":15532:15932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15938:16304   */\n    tag_476:\n        /* \"#utility.yul\":16080:16083   */\n      0x00\n        /* \"#utility.yul\":16101:16168   */\n      tag_478\n        /* \"#utility.yul\":16165:16167   */\n      0x29\n        /* \"#utility.yul\":16160:16163   */\n      dup4\n        /* \"#utility.yul\":16101:16168   */\n      tag_414\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":16094:16168   */\n      swap2\n      pop\n        /* \"#utility.yul\":16177:16270   */\n      tag_479\n        /* \"#utility.yul\":16266:16269   */\n      dup3\n        /* \"#utility.yul\":16177:16270   */\n      tag_480\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":16295:16297   */\n      0x40\n        /* \"#utility.yul\":16290:16293   */\n      dup3\n        /* \"#utility.yul\":16286:16298   */\n      add\n        /* \"#utility.yul\":16279:16298   */\n      swap1\n      pop\n        /* \"#utility.yul\":15938:16304   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16310:16676   */\n    tag_481:\n        /* \"#utility.yul\":16452:16455   */\n      0x00\n        /* \"#utility.yul\":16473:16540   */\n      tag_483\n        /* \"#utility.yul\":16537:16539   */\n      0x29\n        /* \"#utility.yul\":16532:16535   */\n      dup4\n        /* \"#utility.yul\":16473:16540   */\n      tag_414\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":16466:16540   */\n      swap2\n      pop\n        /* \"#utility.yul\":16549:16642   */\n      tag_484\n        /* \"#utility.yul\":16638:16641   */\n      dup3\n        /* \"#utility.yul\":16549:16642   */\n      tag_485\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":16667:16669   */\n      0x40\n        /* \"#utility.yul\":16662:16665   */\n      dup3\n        /* \"#utility.yul\":16658:16670   */\n      add\n        /* \"#utility.yul\":16651:16670   */\n      swap1\n      pop\n        /* \"#utility.yul\":16310:16676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16682:17048   */\n    tag_486:\n        /* \"#utility.yul\":16824:16827   */\n      0x00\n        /* \"#utility.yul\":16845:16912   */\n      tag_488\n        /* \"#utility.yul\":16909:16911   */\n      0x28\n        /* \"#utility.yul\":16904:16907   */\n      dup4\n        /* \"#utility.yul\":16845:16912   */\n      tag_414\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":16838:16912   */\n      swap2\n      pop\n        /* \"#utility.yul\":16921:17014   */\n      tag_489\n        /* \"#utility.yul\":17010:17013   */\n      dup3\n        /* \"#utility.yul\":16921:17014   */\n      tag_490\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":17039:17041   */\n      0x40\n        /* \"#utility.yul\":17034:17037   */\n      dup3\n        /* \"#utility.yul\":17030:17042   */\n      add\n        /* \"#utility.yul\":17023:17042   */\n      swap1\n      pop\n        /* \"#utility.yul\":16682:17048   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17054:17162   */\n    tag_376:\n        /* \"#utility.yul\":17131:17155   */\n      tag_492\n        /* \"#utility.yul\":17149:17154   */\n      dup2\n        /* \"#utility.yul\":17131:17155   */\n      tag_493\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":17126:17129   */\n      dup3\n        /* \"#utility.yul\":17119:17156   */\n      mstore\n        /* \"#utility.yul\":17054:17162   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17168:17286   */\n    tag_494:\n        /* \"#utility.yul\":17255:17279   */\n      tag_496\n        /* \"#utility.yul\":17273:17278   */\n      dup2\n        /* \"#utility.yul\":17255:17279   */\n      tag_493\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":17250:17253   */\n      dup3\n        /* \"#utility.yul\":17243:17280   */\n      mstore\n        /* \"#utility.yul\":17168:17286   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17292:17987   */\n    tag_66:\n        /* \"#utility.yul\":17570:17573   */\n      0x00\n        /* \"#utility.yul\":17592:17684   */\n      tag_498\n        /* \"#utility.yul\":17680:17683   */\n      dup3\n        /* \"#utility.yul\":17671:17677   */\n      dup6\n        /* \"#utility.yul\":17592:17684   */\n      tag_423\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":17585:17684   */\n      swap2\n      pop\n        /* \"#utility.yul\":17701:17796   */\n      tag_499\n        /* \"#utility.yul\":17792:17795   */\n      dup3\n        /* \"#utility.yul\":17783:17789   */\n      dup5\n        /* \"#utility.yul\":17701:17796   */\n      tag_417\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":17694:17796   */\n      swap2\n      pop\n        /* \"#utility.yul\":17813:17961   */\n      tag_500\n        /* \"#utility.yul\":17957:17960   */\n      dup3\n        /* \"#utility.yul\":17813:17961   */\n      tag_471\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":17806:17961   */\n      swap2\n      pop\n        /* \"#utility.yul\":17978:17981   */\n      dup2\n        /* \"#utility.yul\":17971:17981   */\n      swap1\n      pop\n        /* \"#utility.yul\":17292:17987   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17993:19046   */\n    tag_193:\n        /* \"#utility.yul\":18316:18320   */\n      0x00\n        /* \"#utility.yul\":18354:18357   */\n      0xa0\n        /* \"#utility.yul\":18343:18352   */\n      dup3\n        /* \"#utility.yul\":18339:18358   */\n      add\n        /* \"#utility.yul\":18331:18358   */\n      swap1\n      pop\n        /* \"#utility.yul\":18368:18439   */\n      tag_502\n        /* \"#utility.yul\":18436:18437   */\n      0x00\n        /* \"#utility.yul\":18425:18434   */\n      dup4\n        /* \"#utility.yul\":18421:18438   */\n      add\n        /* \"#utility.yul\":18412:18418   */\n      dup9\n        /* \"#utility.yul\":18368:18439   */\n      tag_377\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":18449:18521   */\n      tag_503\n        /* \"#utility.yul\":18517:18519   */\n      0x20\n        /* \"#utility.yul\":18506:18515   */\n      dup4\n        /* \"#utility.yul\":18502:18520   */\n      add\n        /* \"#utility.yul\":18493:18499   */\n      dup8\n        /* \"#utility.yul\":18449:18521   */\n      tag_377\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":18568:18577   */\n      dup2\n        /* \"#utility.yul\":18562:18566   */\n      dup2\n        /* \"#utility.yul\":18558:18578   */\n      sub\n        /* \"#utility.yul\":18553:18555   */\n      0x40\n        /* \"#utility.yul\":18542:18551   */\n      dup4\n        /* \"#utility.yul\":18538:18556   */\n      add\n        /* \"#utility.yul\":18531:18579   */\n      mstore\n        /* \"#utility.yul\":18596:18704   */\n      tag_504\n        /* \"#utility.yul\":18699:18703   */\n      dup2\n        /* \"#utility.yul\":18690:18696   */\n      dup7\n        /* \"#utility.yul\":18596:18704   */\n      tag_381\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":18588:18704   */\n      swap1\n      pop\n        /* \"#utility.yul\":18751:18760   */\n      dup2\n        /* \"#utility.yul\":18745:18749   */\n      dup2\n        /* \"#utility.yul\":18741:18761   */\n      sub\n        /* \"#utility.yul\":18736:18738   */\n      0x60\n        /* \"#utility.yul\":18725:18734   */\n      dup4\n        /* \"#utility.yul\":18721:18739   */\n      add\n        /* \"#utility.yul\":18714:18762   */\n      mstore\n        /* \"#utility.yul\":18779:18887   */\n      tag_505\n        /* \"#utility.yul\":18882:18886   */\n      dup2\n        /* \"#utility.yul\":18873:18879   */\n      dup6\n        /* \"#utility.yul\":18779:18887   */\n      tag_381\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":18771:18887   */\n      swap1\n      pop\n        /* \"#utility.yul\":18935:18944   */\n      dup2\n        /* \"#utility.yul\":18929:18933   */\n      dup2\n        /* \"#utility.yul\":18925:18945   */\n      sub\n        /* \"#utility.yul\":18919:18922   */\n      0x80\n        /* \"#utility.yul\":18908:18917   */\n      dup4\n        /* \"#utility.yul\":18904:18923   */\n      add\n        /* \"#utility.yul\":18897:18946   */\n      mstore\n        /* \"#utility.yul\":18963:19039   */\n      tag_506\n        /* \"#utility.yul\":19034:19038   */\n      dup2\n        /* \"#utility.yul\":19025:19031   */\n      dup5\n        /* \"#utility.yul\":18963:19039   */\n      tag_399\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":18955:19039   */\n      swap1\n      pop\n        /* \"#utility.yul\":17993:19046   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19052:19803   */\n    tag_224:\n        /* \"#utility.yul\":19275:19279   */\n      0x00\n        /* \"#utility.yul\":19313:19316   */\n      0xa0\n        /* \"#utility.yul\":19302:19311   */\n      dup3\n        /* \"#utility.yul\":19298:19317   */\n      add\n        /* \"#utility.yul\":19290:19317   */\n      swap1\n      pop\n        /* \"#utility.yul\":19327:19398   */\n      tag_508\n        /* \"#utility.yul\":19395:19396   */\n      0x00\n        /* \"#utility.yul\":19384:19393   */\n      dup4\n        /* \"#utility.yul\":19380:19397   */\n      add\n        /* \"#utility.yul\":19371:19377   */\n      dup9\n        /* \"#utility.yul\":19327:19398   */\n      tag_377\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":19408:19480   */\n      tag_509\n        /* \"#utility.yul\":19476:19478   */\n      0x20\n        /* \"#utility.yul\":19465:19474   */\n      dup4\n        /* \"#utility.yul\":19461:19479   */\n      add\n        /* \"#utility.yul\":19452:19458   */\n      dup8\n        /* \"#utility.yul\":19408:19480   */\n      tag_377\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":19490:19562   */\n      tag_510\n        /* \"#utility.yul\":19558:19560   */\n      0x40\n        /* \"#utility.yul\":19547:19556   */\n      dup4\n        /* \"#utility.yul\":19543:19561   */\n      add\n        /* \"#utility.yul\":19534:19540   */\n      dup7\n        /* \"#utility.yul\":19490:19562   */\n      tag_494\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":19572:19644   */\n      tag_511\n        /* \"#utility.yul\":19640:19642   */\n      0x60\n        /* \"#utility.yul\":19629:19638   */\n      dup4\n        /* \"#utility.yul\":19625:19643   */\n      add\n        /* \"#utility.yul\":19616:19622   */\n      dup6\n        /* \"#utility.yul\":19572:19644   */\n      tag_494\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":19692:19701   */\n      dup2\n        /* \"#utility.yul\":19686:19690   */\n      dup2\n        /* \"#utility.yul\":19682:19702   */\n      sub\n        /* \"#utility.yul\":19676:19679   */\n      0x80\n        /* \"#utility.yul\":19665:19674   */\n      dup4\n        /* \"#utility.yul\":19661:19680   */\n      add\n        /* \"#utility.yul\":19654:19703   */\n      mstore\n        /* \"#utility.yul\":19720:19796   */\n      tag_512\n        /* \"#utility.yul\":19791:19795   */\n      dup2\n        /* \"#utility.yul\":19782:19788   */\n      dup5\n        /* \"#utility.yul\":19720:19796   */\n      tag_399\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":19712:19796   */\n      swap1\n      pop\n        /* \"#utility.yul\":19052:19803   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19809:20182   */\n    tag_39:\n        /* \"#utility.yul\":19952:19956   */\n      0x00\n        /* \"#utility.yul\":19990:19992   */\n      0x20\n        /* \"#utility.yul\":19979:19988   */\n      dup3\n        /* \"#utility.yul\":19975:19993   */\n      add\n        /* \"#utility.yul\":19967:19993   */\n      swap1\n      pop\n        /* \"#utility.yul\":20039:20048   */\n      dup2\n        /* \"#utility.yul\":20033:20037   */\n      dup2\n        /* \"#utility.yul\":20029:20049   */\n      sub\n        /* \"#utility.yul\":20025:20026   */\n      0x00\n        /* \"#utility.yul\":20014:20023   */\n      dup4\n        /* \"#utility.yul\":20010:20027   */\n      add\n        /* \"#utility.yul\":20003:20050   */\n      mstore\n        /* \"#utility.yul\":20067:20175   */\n      tag_514\n        /* \"#utility.yul\":20170:20174   */\n      dup2\n        /* \"#utility.yul\":20161:20167   */\n      dup5\n        /* \"#utility.yul\":20067:20175   */\n      tag_381\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":20059:20175   */\n      swap1\n      pop\n        /* \"#utility.yul\":19809:20182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20188:20822   */\n    tag_160:\n        /* \"#utility.yul\":20409:20413   */\n      0x00\n        /* \"#utility.yul\":20447:20449   */\n      0x40\n        /* \"#utility.yul\":20436:20445   */\n      dup3\n        /* \"#utility.yul\":20432:20450   */\n      add\n        /* \"#utility.yul\":20424:20450   */\n      swap1\n      pop\n        /* \"#utility.yul\":20496:20505   */\n      dup2\n        /* \"#utility.yul\":20490:20494   */\n      dup2\n        /* \"#utility.yul\":20486:20506   */\n      sub\n        /* \"#utility.yul\":20482:20483   */\n      0x00\n        /* \"#utility.yul\":20471:20480   */\n      dup4\n        /* \"#utility.yul\":20467:20484   */\n      add\n        /* \"#utility.yul\":20460:20507   */\n      mstore\n        /* \"#utility.yul\":20524:20632   */\n      tag_516\n        /* \"#utility.yul\":20627:20631   */\n      dup2\n        /* \"#utility.yul\":20618:20624   */\n      dup6\n        /* \"#utility.yul\":20524:20632   */\n      tag_381\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":20516:20632   */\n      swap1\n      pop\n        /* \"#utility.yul\":20679:20688   */\n      dup2\n        /* \"#utility.yul\":20673:20677   */\n      dup2\n        /* \"#utility.yul\":20669:20689   */\n      sub\n        /* \"#utility.yul\":20664:20666   */\n      0x20\n        /* \"#utility.yul\":20653:20662   */\n      dup4\n        /* \"#utility.yul\":20649:20667   */\n      add\n        /* \"#utility.yul\":20642:20690   */\n      mstore\n        /* \"#utility.yul\":20707:20815   */\n      tag_517\n        /* \"#utility.yul\":20810:20814   */\n      dup2\n        /* \"#utility.yul\":20801:20807   */\n      dup5\n        /* \"#utility.yul\":20707:20815   */\n      tag_381\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":20699:20815   */\n      swap1\n      pop\n        /* \"#utility.yul\":20188:20822   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20828:21038   */\n    tag_23:\n        /* \"#utility.yul\":20915:20919   */\n      0x00\n        /* \"#utility.yul\":20953:20955   */\n      0x20\n        /* \"#utility.yul\":20942:20951   */\n      dup3\n        /* \"#utility.yul\":20938:20956   */\n      add\n        /* \"#utility.yul\":20930:20956   */\n      swap1\n      pop\n        /* \"#utility.yul\":20966:21031   */\n      tag_519\n        /* \"#utility.yul\":21028:21029   */\n      0x00\n        /* \"#utility.yul\":21017:21026   */\n      dup4\n        /* \"#utility.yul\":21013:21030   */\n      add\n        /* \"#utility.yul\":21004:21010   */\n      dup5\n        /* \"#utility.yul\":20966:21031   */\n      tag_395\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":20828:21038   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21044:21357   */\n    tag_29:\n        /* \"#utility.yul\":21157:21161   */\n      0x00\n        /* \"#utility.yul\":21195:21197   */\n      0x20\n        /* \"#utility.yul\":21184:21193   */\n      dup3\n        /* \"#utility.yul\":21180:21198   */\n      add\n        /* \"#utility.yul\":21172:21198   */\n      swap1\n      pop\n        /* \"#utility.yul\":21244:21253   */\n      dup2\n        /* \"#utility.yul\":21238:21242   */\n      dup2\n        /* \"#utility.yul\":21234:21254   */\n      sub\n        /* \"#utility.yul\":21230:21231   */\n      0x00\n        /* \"#utility.yul\":21219:21228   */\n      dup4\n        /* \"#utility.yul\":21215:21232   */\n      add\n        /* \"#utility.yul\":21208:21255   */\n      mstore\n        /* \"#utility.yul\":21272:21350   */\n      tag_521\n        /* \"#utility.yul\":21345:21349   */\n      dup2\n        /* \"#utility.yul\":21336:21342   */\n      dup5\n        /* \"#utility.yul\":21272:21350   */\n      tag_409\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":21264:21350   */\n      swap1\n      pop\n        /* \"#utility.yul\":21044:21357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21363:21782   */\n    tag_209:\n        /* \"#utility.yul\":21529:21533   */\n      0x00\n        /* \"#utility.yul\":21567:21569   */\n      0x20\n        /* \"#utility.yul\":21556:21565   */\n      dup3\n        /* \"#utility.yul\":21552:21570   */\n      add\n        /* \"#utility.yul\":21544:21570   */\n      swap1\n      pop\n        /* \"#utility.yul\":21616:21625   */\n      dup2\n        /* \"#utility.yul\":21610:21614   */\n      dup2\n        /* \"#utility.yul\":21606:21626   */\n      sub\n        /* \"#utility.yul\":21602:21603   */\n      0x00\n        /* \"#utility.yul\":21591:21600   */\n      dup4\n        /* \"#utility.yul\":21587:21604   */\n      add\n        /* \"#utility.yul\":21580:21627   */\n      mstore\n        /* \"#utility.yul\":21644:21775   */\n      tag_523\n        /* \"#utility.yul\":21770:21774   */\n      dup2\n        /* \"#utility.yul\":21644:21775   */\n      tag_436\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":21636:21775   */\n      swap1\n      pop\n        /* \"#utility.yul\":21363:21782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21788:22207   */\n    tag_213:\n        /* \"#utility.yul\":21954:21958   */\n      0x00\n        /* \"#utility.yul\":21992:21994   */\n      0x20\n        /* \"#utility.yul\":21981:21990   */\n      dup3\n        /* \"#utility.yul\":21977:21995   */\n      add\n        /* \"#utility.yul\":21969:21995   */\n      swap1\n      pop\n        /* \"#utility.yul\":22041:22050   */\n      dup2\n        /* \"#utility.yul\":22035:22039   */\n      dup2\n        /* \"#utility.yul\":22031:22051   */\n      sub\n        /* \"#utility.yul\":22027:22028   */\n      0x00\n        /* \"#utility.yul\":22016:22025   */\n      dup4\n        /* \"#utility.yul\":22012:22029   */\n      add\n        /* \"#utility.yul\":22005:22052   */\n      mstore\n        /* \"#utility.yul\":22069:22200   */\n      tag_525\n        /* \"#utility.yul\":22195:22199   */\n      dup2\n        /* \"#utility.yul\":22069:22200   */\n      tag_441\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":22061:22200   */\n      swap1\n      pop\n        /* \"#utility.yul\":21788:22207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22213:22632   */\n    tag_111:\n        /* \"#utility.yul\":22379:22383   */\n      0x00\n        /* \"#utility.yul\":22417:22419   */\n      0x20\n        /* \"#utility.yul\":22406:22415   */\n      dup3\n        /* \"#utility.yul\":22402:22420   */\n      add\n        /* \"#utility.yul\":22394:22420   */\n      swap1\n      pop\n        /* \"#utility.yul\":22466:22475   */\n      dup2\n        /* \"#utility.yul\":22460:22464   */\n      dup2\n        /* \"#utility.yul\":22456:22476   */\n      sub\n        /* \"#utility.yul\":22452:22453   */\n      0x00\n        /* \"#utility.yul\":22441:22450   */\n      dup4\n        /* \"#utility.yul\":22437:22454   */\n      add\n        /* \"#utility.yul\":22430:22477   */\n      mstore\n        /* \"#utility.yul\":22494:22625   */\n      tag_527\n        /* \"#utility.yul\":22620:22624   */\n      dup2\n        /* \"#utility.yul\":22494:22625   */\n      tag_446\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":22486:22625   */\n      swap1\n      pop\n        /* \"#utility.yul\":22213:22632   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22638:23057   */\n    tag_56:\n        /* \"#utility.yul\":22804:22808   */\n      0x00\n        /* \"#utility.yul\":22842:22844   */\n      0x20\n        /* \"#utility.yul\":22831:22840   */\n      dup3\n        /* \"#utility.yul\":22827:22845   */\n      add\n        /* \"#utility.yul\":22819:22845   */\n      swap1\n      pop\n        /* \"#utility.yul\":22891:22900   */\n      dup2\n        /* \"#utility.yul\":22885:22889   */\n      dup2\n        /* \"#utility.yul\":22881:22901   */\n      sub\n        /* \"#utility.yul\":22877:22878   */\n      0x00\n        /* \"#utility.yul\":22866:22875   */\n      dup4\n        /* \"#utility.yul\":22862:22879   */\n      add\n        /* \"#utility.yul\":22855:22902   */\n      mstore\n        /* \"#utility.yul\":22919:23050   */\n      tag_529\n        /* \"#utility.yul\":23045:23049   */\n      dup2\n        /* \"#utility.yul\":22919:23050   */\n      tag_451\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":22911:23050   */\n      swap1\n      pop\n        /* \"#utility.yul\":22638:23057   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23063:23482   */\n    tag_143:\n        /* \"#utility.yul\":23229:23233   */\n      0x00\n        /* \"#utility.yul\":23267:23269   */\n      0x20\n        /* \"#utility.yul\":23256:23265   */\n      dup3\n        /* \"#utility.yul\":23252:23270   */\n      add\n        /* \"#utility.yul\":23244:23270   */\n      swap1\n      pop\n        /* \"#utility.yul\":23316:23325   */\n      dup2\n        /* \"#utility.yul\":23310:23314   */\n      dup2\n        /* \"#utility.yul\":23306:23326   */\n      sub\n        /* \"#utility.yul\":23302:23303   */\n      0x00\n        /* \"#utility.yul\":23291:23300   */\n      dup4\n        /* \"#utility.yul\":23287:23304   */\n      add\n        /* \"#utility.yul\":23280:23327   */\n      mstore\n        /* \"#utility.yul\":23344:23475   */\n      tag_531\n        /* \"#utility.yul\":23470:23474   */\n      dup2\n        /* \"#utility.yul\":23344:23475   */\n      tag_456\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":23336:23475   */\n      swap1\n      pop\n        /* \"#utility.yul\":23063:23482   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23488:23907   */\n    tag_75:\n        /* \"#utility.yul\":23654:23658   */\n      0x00\n        /* \"#utility.yul\":23692:23694   */\n      0x20\n        /* \"#utility.yul\":23681:23690   */\n      dup3\n        /* \"#utility.yul\":23677:23695   */\n      add\n        /* \"#utility.yul\":23669:23695   */\n      swap1\n      pop\n        /* \"#utility.yul\":23741:23750   */\n      dup2\n        /* \"#utility.yul\":23735:23739   */\n      dup2\n        /* \"#utility.yul\":23731:23751   */\n      sub\n        /* \"#utility.yul\":23727:23728   */\n      0x00\n        /* \"#utility.yul\":23716:23725   */\n      dup4\n        /* \"#utility.yul\":23712:23729   */\n      add\n        /* \"#utility.yul\":23705:23752   */\n      mstore\n        /* \"#utility.yul\":23769:23900   */\n      tag_533\n        /* \"#utility.yul\":23895:23899   */\n      dup2\n        /* \"#utility.yul\":23769:23900   */\n      tag_461\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":23761:23900   */\n      swap1\n      pop\n        /* \"#utility.yul\":23488:23907   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23913:24332   */\n    tag_156:\n        /* \"#utility.yul\":24079:24083   */\n      0x00\n        /* \"#utility.yul\":24117:24119   */\n      0x20\n        /* \"#utility.yul\":24106:24115   */\n      dup3\n        /* \"#utility.yul\":24102:24120   */\n      add\n        /* \"#utility.yul\":24094:24120   */\n      swap1\n      pop\n        /* \"#utility.yul\":24166:24175   */\n      dup2\n        /* \"#utility.yul\":24160:24164   */\n      dup2\n        /* \"#utility.yul\":24156:24176   */\n      sub\n        /* \"#utility.yul\":24152:24153   */\n      0x00\n        /* \"#utility.yul\":24141:24150   */\n      dup4\n        /* \"#utility.yul\":24137:24154   */\n      add\n        /* \"#utility.yul\":24130:24177   */\n      mstore\n        /* \"#utility.yul\":24194:24325   */\n      tag_535\n        /* \"#utility.yul\":24320:24324   */\n      dup2\n        /* \"#utility.yul\":24194:24325   */\n      tag_466\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":24186:24325   */\n      swap1\n      pop\n        /* \"#utility.yul\":23913:24332   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24338:24757   */\n    tag_168:\n        /* \"#utility.yul\":24504:24508   */\n      0x00\n        /* \"#utility.yul\":24542:24544   */\n      0x20\n        /* \"#utility.yul\":24531:24540   */\n      dup3\n        /* \"#utility.yul\":24527:24545   */\n      add\n        /* \"#utility.yul\":24519:24545   */\n      swap1\n      pop\n        /* \"#utility.yul\":24591:24600   */\n      dup2\n        /* \"#utility.yul\":24585:24589   */\n      dup2\n        /* \"#utility.yul\":24581:24601   */\n      sub\n        /* \"#utility.yul\":24577:24578   */\n      0x00\n        /* \"#utility.yul\":24566:24575   */\n      dup4\n        /* \"#utility.yul\":24562:24579   */\n      add\n        /* \"#utility.yul\":24555:24602   */\n      mstore\n        /* \"#utility.yul\":24619:24750   */\n      tag_537\n        /* \"#utility.yul\":24745:24749   */\n      dup2\n        /* \"#utility.yul\":24619:24750   */\n      tag_476\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":24611:24750   */\n      swap1\n      pop\n        /* \"#utility.yul\":24338:24757   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24763:25182   */\n    tag_81:\n        /* \"#utility.yul\":24929:24933   */\n      0x00\n        /* \"#utility.yul\":24967:24969   */\n      0x20\n        /* \"#utility.yul\":24956:24965   */\n      dup3\n        /* \"#utility.yul\":24952:24970   */\n      add\n        /* \"#utility.yul\":24944:24970   */\n      swap1\n      pop\n        /* \"#utility.yul\":25016:25025   */\n      dup2\n        /* \"#utility.yul\":25010:25014   */\n      dup2\n        /* \"#utility.yul\":25006:25026   */\n      sub\n        /* \"#utility.yul\":25002:25003   */\n      0x00\n        /* \"#utility.yul\":24991:25000   */\n      dup4\n        /* \"#utility.yul\":24987:25004   */\n      add\n        /* \"#utility.yul\":24980:25027   */\n      mstore\n        /* \"#utility.yul\":25044:25175   */\n      tag_539\n        /* \"#utility.yul\":25170:25174   */\n      dup2\n        /* \"#utility.yul\":25044:25175   */\n      tag_481\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":25036:25175   */\n      swap1\n      pop\n        /* \"#utility.yul\":24763:25182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25188:25607   */\n    tag_140:\n        /* \"#utility.yul\":25354:25358   */\n      0x00\n        /* \"#utility.yul\":25392:25394   */\n      0x20\n        /* \"#utility.yul\":25381:25390   */\n      dup3\n        /* \"#utility.yul\":25377:25395   */\n      add\n        /* \"#utility.yul\":25369:25395   */\n      swap1\n      pop\n        /* \"#utility.yul\":25441:25450   */\n      dup2\n        /* \"#utility.yul\":25435:25439   */\n      dup2\n        /* \"#utility.yul\":25431:25451   */\n      sub\n        /* \"#utility.yul\":25427:25428   */\n      0x00\n        /* \"#utility.yul\":25416:25425   */\n      dup4\n        /* \"#utility.yul\":25412:25429   */\n      add\n        /* \"#utility.yul\":25405:25452   */\n      mstore\n        /* \"#utility.yul\":25469:25600   */\n      tag_541\n        /* \"#utility.yul\":25595:25599   */\n      dup2\n        /* \"#utility.yul\":25469:25600   */\n      tag_486\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":25461:25600   */\n      swap1\n      pop\n        /* \"#utility.yul\":25188:25607   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25613:25835   */\n    tag_17:\n        /* \"#utility.yul\":25706:25710   */\n      0x00\n        /* \"#utility.yul\":25744:25746   */\n      0x20\n        /* \"#utility.yul\":25733:25742   */\n      dup3\n        /* \"#utility.yul\":25729:25747   */\n      add\n        /* \"#utility.yul\":25721:25747   */\n      swap1\n      pop\n        /* \"#utility.yul\":25757:25828   */\n      tag_543\n        /* \"#utility.yul\":25825:25826   */\n      0x00\n        /* \"#utility.yul\":25814:25823   */\n      dup4\n        /* \"#utility.yul\":25810:25827   */\n      add\n        /* \"#utility.yul\":25801:25807   */\n      dup5\n        /* \"#utility.yul\":25757:25828   */\n      tag_494\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":25613:25835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25841:26173   */\n    tag_182:\n        /* \"#utility.yul\":25962:25966   */\n      0x00\n        /* \"#utility.yul\":26000:26002   */\n      0x40\n        /* \"#utility.yul\":25989:25998   */\n      dup3\n        /* \"#utility.yul\":25985:26003   */\n      add\n        /* \"#utility.yul\":25977:26003   */\n      swap1\n      pop\n        /* \"#utility.yul\":26013:26084   */\n      tag_545\n        /* \"#utility.yul\":26081:26082   */\n      0x00\n        /* \"#utility.yul\":26070:26079   */\n      dup4\n        /* \"#utility.yul\":26066:26083   */\n      add\n        /* \"#utility.yul\":26057:26063   */\n      dup6\n        /* \"#utility.yul\":26013:26084   */\n      tag_494\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":26094:26166   */\n      tag_546\n        /* \"#utility.yul\":26162:26164   */\n      0x20\n        /* \"#utility.yul\":26151:26160   */\n      dup4\n        /* \"#utility.yul\":26147:26165   */\n      add\n        /* \"#utility.yul\":26138:26144   */\n      dup5\n        /* \"#utility.yul\":26094:26166   */\n      tag_494\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":25841:26173   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26179:26308   */\n    tag_247:\n        /* \"#utility.yul\":26213:26219   */\n      0x00\n        /* \"#utility.yul\":26240:26260   */\n      tag_548\n      tag_549\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":26230:26260   */\n      swap1\n      pop\n        /* \"#utility.yul\":26269:26302   */\n      tag_550\n        /* \"#utility.yul\":26297:26301   */\n      dup3\n        /* \"#utility.yul\":26289:26295   */\n      dup3\n        /* \"#utility.yul\":26269:26302   */\n      tag_551\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":26179:26308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26314:26389   */\n    tag_549:\n        /* \"#utility.yul\":26347:26353   */\n      0x00\n        /* \"#utility.yul\":26380:26382   */\n      0x40\n        /* \"#utility.yul\":26374:26383   */\n      mload\n        /* \"#utility.yul\":26364:26383   */\n      swap1\n      pop\n        /* \"#utility.yul\":26314:26389   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":26395:26706   */\n    tag_246:\n        /* \"#utility.yul\":26472:26476   */\n      0x00\n        /* \"#utility.yul\":26562:26580   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":26554:26560   */\n      dup3\n        /* \"#utility.yul\":26551:26581   */\n      gt\n        /* \"#utility.yul\":26548:26604   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":26584:26602   */\n      tag_555\n      tag_84\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":26548:26604   */\n    tag_554:\n        /* \"#utility.yul\":26634:26638   */\n      0x20\n        /* \"#utility.yul\":26626:26632   */\n      dup3\n        /* \"#utility.yul\":26622:26639   */\n      mul\n        /* \"#utility.yul\":26614:26639   */\n      swap1\n      pop\n        /* \"#utility.yul\":26694:26698   */\n      0x20\n        /* \"#utility.yul\":26688:26692   */\n      dup2\n        /* \"#utility.yul\":26684:26699   */\n      add\n        /* \"#utility.yul\":26676:26699   */\n      swap1\n      pop\n        /* \"#utility.yul\":26395:26706   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26712:27023   */\n    tag_260:\n        /* \"#utility.yul\":26789:26793   */\n      0x00\n        /* \"#utility.yul\":26879:26897   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":26871:26877   */\n      dup3\n        /* \"#utility.yul\":26868:26898   */\n      gt\n        /* \"#utility.yul\":26865:26921   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":26901:26919   */\n      tag_558\n      tag_84\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":26865:26921   */\n    tag_557:\n        /* \"#utility.yul\":26951:26955   */\n      0x20\n        /* \"#utility.yul\":26943:26949   */\n      dup3\n        /* \"#utility.yul\":26939:26956   */\n      mul\n        /* \"#utility.yul\":26931:26956   */\n      swap1\n      pop\n        /* \"#utility.yul\":27011:27015   */\n      0x20\n        /* \"#utility.yul\":27005:27009   */\n      dup2\n        /* \"#utility.yul\":27001:27016   */\n      add\n        /* \"#utility.yul\":26993:27016   */\n      swap1\n      pop\n        /* \"#utility.yul\":26712:27023   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27029:27336   */\n    tag_272:\n        /* \"#utility.yul\":27090:27094   */\n      0x00\n        /* \"#utility.yul\":27180:27198   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":27172:27178   */\n      dup3\n        /* \"#utility.yul\":27169:27199   */\n      gt\n        /* \"#utility.yul\":27166:27222   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":27202:27220   */\n      tag_561\n      tag_84\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":27166:27222   */\n    tag_560:\n        /* \"#utility.yul\":27240:27269   */\n      tag_562\n        /* \"#utility.yul\":27262:27268   */\n      dup3\n        /* \"#utility.yul\":27240:27269   */\n      tag_408\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":27232:27269   */\n      swap1\n      pop\n        /* \"#utility.yul\":27324:27328   */\n      0x20\n        /* \"#utility.yul\":27318:27322   */\n      dup2\n        /* \"#utility.yul\":27314:27329   */\n      add\n        /* \"#utility.yul\":27306:27329   */\n      swap1\n      pop\n        /* \"#utility.yul\":27029:27336   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27342:27474   */\n    tag_388:\n        /* \"#utility.yul\":27409:27413   */\n      0x00\n        /* \"#utility.yul\":27432:27435   */\n      dup2\n        /* \"#utility.yul\":27424:27435   */\n      swap1\n      pop\n        /* \"#utility.yul\":27462:27466   */\n      0x20\n        /* \"#utility.yul\":27457:27460   */\n      dup3\n        /* \"#utility.yul\":27453:27467   */\n      add\n        /* \"#utility.yul\":27445:27467   */\n      swap1\n      pop\n        /* \"#utility.yul\":27342:27474   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27480:27621   */\n    tag_432:\n        /* \"#utility.yul\":27529:27533   */\n      0x00\n        /* \"#utility.yul\":27552:27555   */\n      dup2\n        /* \"#utility.yul\":27544:27555   */\n      swap1\n      pop\n        /* \"#utility.yul\":27575:27578   */\n      dup2\n        /* \"#utility.yul\":27572:27573   */\n      0x00\n        /* \"#utility.yul\":27565:27579   */\n      mstore\n        /* \"#utility.yul\":27609:27613   */\n      0x20\n        /* \"#utility.yul\":27606:27607   */\n      0x00\n        /* \"#utility.yul\":27596:27614   */\n      keccak256\n        /* \"#utility.yul\":27588:27614   */\n      swap1\n      pop\n        /* \"#utility.yul\":27480:27621   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27627:27741   */\n    tag_384:\n        /* \"#utility.yul\":27694:27700   */\n      0x00\n        /* \"#utility.yul\":27728:27733   */\n      dup2\n        /* \"#utility.yul\":27722:27734   */\n      mload\n        /* \"#utility.yul\":27712:27734   */\n      swap1\n      pop\n        /* \"#utility.yul\":27627:27741   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27747:27845   */\n    tag_402:\n        /* \"#utility.yul\":27798:27804   */\n      0x00\n        /* \"#utility.yul\":27832:27837   */\n      dup2\n        /* \"#utility.yul\":27826:27838   */\n      mload\n        /* \"#utility.yul\":27816:27838   */\n      swap1\n      pop\n        /* \"#utility.yul\":27747:27845   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27851:27950   */\n    tag_412:\n        /* \"#utility.yul\":27903:27909   */\n      0x00\n        /* \"#utility.yul\":27937:27942   */\n      dup2\n        /* \"#utility.yul\":27931:27943   */\n      mload\n        /* \"#utility.yul\":27921:27943   */\n      swap1\n      pop\n        /* \"#utility.yul\":27851:27950   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27956:28069   */\n    tag_394:\n        /* \"#utility.yul\":28026:28030   */\n      0x00\n        /* \"#utility.yul\":28058:28062   */\n      0x20\n        /* \"#utility.yul\":28053:28056   */\n      dup3\n        /* \"#utility.yul\":28049:28063   */\n      add\n        /* \"#utility.yul\":28041:28063   */\n      swap1\n      pop\n        /* \"#utility.yul\":27956:28069   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28075:28259   */\n    tag_386:\n        /* \"#utility.yul\":28174:28185   */\n      0x00\n        /* \"#utility.yul\":28208:28214   */\n      dup3\n        /* \"#utility.yul\":28203:28206   */\n      dup3\n        /* \"#utility.yul\":28196:28215   */\n      mstore\n        /* \"#utility.yul\":28248:28252   */\n      0x20\n        /* \"#utility.yul\":28243:28246   */\n      dup3\n        /* \"#utility.yul\":28239:28253   */\n      add\n        /* \"#utility.yul\":28224:28253   */\n      swap1\n      pop\n        /* \"#utility.yul\":28075:28259   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28265:28433   */\n    tag_404:\n        /* \"#utility.yul\":28348:28359   */\n      0x00\n        /* \"#utility.yul\":28382:28388   */\n      dup3\n        /* \"#utility.yul\":28377:28380   */\n      dup3\n        /* \"#utility.yul\":28370:28389   */\n      mstore\n        /* \"#utility.yul\":28422:28426   */\n      0x20\n        /* \"#utility.yul\":28417:28420   */\n      dup3\n        /* \"#utility.yul\":28413:28427   */\n      add\n        /* \"#utility.yul\":28398:28427   */\n      swap1\n      pop\n        /* \"#utility.yul\":28265:28433   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28439:28608   */\n    tag_414:\n        /* \"#utility.yul\":28523:28534   */\n      0x00\n        /* \"#utility.yul\":28557:28563   */\n      dup3\n        /* \"#utility.yul\":28552:28555   */\n      dup3\n        /* \"#utility.yul\":28545:28564   */\n      mstore\n        /* \"#utility.yul\":28597:28601   */\n      0x20\n        /* \"#utility.yul\":28592:28595   */\n      dup3\n        /* \"#utility.yul\":28588:28602   */\n      add\n        /* \"#utility.yul\":28573:28602   */\n      swap1\n      pop\n        /* \"#utility.yul\":28439:28608   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28614:28762   */\n    tag_421:\n        /* \"#utility.yul\":28716:28727   */\n      0x00\n        /* \"#utility.yul\":28753:28756   */\n      dup2\n        /* \"#utility.yul\":28738:28756   */\n      swap1\n      pop\n        /* \"#utility.yul\":28614:28762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28768:29073   */\n    tag_132:\n        /* \"#utility.yul\":28808:28811   */\n      0x00\n        /* \"#utility.yul\":28827:28847   */\n      tag_574\n        /* \"#utility.yul\":28845:28846   */\n      dup3\n        /* \"#utility.yul\":28827:28847   */\n      tag_493\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":28822:28847   */\n      swap2\n      pop\n        /* \"#utility.yul\":28861:28881   */\n      tag_575\n        /* \"#utility.yul\":28879:28880   */\n      dup4\n        /* \"#utility.yul\":28861:28881   */\n      tag_493\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":28856:28881   */\n      swap3\n      pop\n        /* \"#utility.yul\":29015:29016   */\n      dup3\n        /* \"#utility.yul\":28947:29013   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":28943:29017   */\n      sub\n        /* \"#utility.yul\":28940:28941   */\n      dup3\n        /* \"#utility.yul\":28937:29018   */\n      gt\n        /* \"#utility.yul\":28934:29041   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":29021:29039   */\n      tag_577\n      tag_578\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":28934:29041   */\n    tag_576:\n        /* \"#utility.yul\":29065:29066   */\n      dup3\n        /* \"#utility.yul\":29062:29063   */\n      dup3\n        /* \"#utility.yul\":29058:29067   */\n      add\n        /* \"#utility.yul\":29051:29067   */\n      swap1\n      pop\n        /* \"#utility.yul\":28768:29073   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29079:29264   */\n    tag_121:\n        /* \"#utility.yul\":29119:29120   */\n      0x00\n        /* \"#utility.yul\":29136:29156   */\n      tag_580\n        /* \"#utility.yul\":29154:29155   */\n      dup3\n        /* \"#utility.yul\":29136:29156   */\n      tag_493\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":29131:29156   */\n      swap2\n      pop\n        /* \"#utility.yul\":29170:29190   */\n      tag_581\n        /* \"#utility.yul\":29188:29189   */\n      dup4\n        /* \"#utility.yul\":29170:29190   */\n      tag_493\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":29165:29190   */\n      swap3\n      pop\n        /* \"#utility.yul\":29209:29210   */\n      dup3\n        /* \"#utility.yul\":29199:29234   */\n      tag_582\n      jumpi\n        /* \"#utility.yul\":29214:29232   */\n      tag_583\n      tag_584\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":29199:29234   */\n    tag_582:\n        /* \"#utility.yul\":29256:29257   */\n      dup3\n        /* \"#utility.yul\":29253:29254   */\n      dup3\n        /* \"#utility.yul\":29249:29258   */\n      div\n        /* \"#utility.yul\":29244:29258   */\n      swap1\n      pop\n        /* \"#utility.yul\":29079:29264   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29270:29461   */\n    tag_128:\n        /* \"#utility.yul\":29310:29314   */\n      0x00\n        /* \"#utility.yul\":29330:29350   */\n      tag_586\n        /* \"#utility.yul\":29348:29349   */\n      dup3\n        /* \"#utility.yul\":29330:29350   */\n      tag_493\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":29325:29350   */\n      swap2\n      pop\n        /* \"#utility.yul\":29364:29384   */\n      tag_587\n        /* \"#utility.yul\":29382:29383   */\n      dup4\n        /* \"#utility.yul\":29364:29384   */\n      tag_493\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":29359:29384   */\n      swap3\n      pop\n        /* \"#utility.yul\":29403:29404   */\n      dup3\n        /* \"#utility.yul\":29400:29401   */\n      dup3\n        /* \"#utility.yul\":29397:29405   */\n      lt\n        /* \"#utility.yul\":29394:29428   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":29408:29426   */\n      tag_589\n      tag_578\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":29394:29428   */\n    tag_588:\n        /* \"#utility.yul\":29453:29454   */\n      dup3\n        /* \"#utility.yul\":29450:29451   */\n      dup3\n        /* \"#utility.yul\":29446:29455   */\n      sub\n        /* \"#utility.yul\":29438:29455   */\n      swap1\n      pop\n        /* \"#utility.yul\":29270:29461   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29467:29563   */\n    tag_380:\n        /* \"#utility.yul\":29504:29511   */\n      0x00\n        /* \"#utility.yul\":29533:29557   */\n      tag_591\n        /* \"#utility.yul\":29551:29556   */\n      dup3\n        /* \"#utility.yul\":29533:29557   */\n      tag_592\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":29522:29557   */\n      swap1\n      pop\n        /* \"#utility.yul\":29467:29563   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29569:29659   */\n    tag_398:\n        /* \"#utility.yul\":29603:29610   */\n      0x00\n        /* \"#utility.yul\":29646:29651   */\n      dup2\n        /* \"#utility.yul\":29639:29652   */\n      iszero\n        /* \"#utility.yul\":29632:29653   */\n      iszero\n        /* \"#utility.yul\":29621:29653   */\n      swap1\n      pop\n        /* \"#utility.yul\":29569:29659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29665:29814   */\n    tag_594:\n        /* \"#utility.yul\":29701:29708   */\n      0x00\n        /* \"#utility.yul\":29741:29807   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29734:29739   */\n      dup3\n        /* \"#utility.yul\":29730:29808   */\n      and\n        /* \"#utility.yul\":29719:29808   */\n      swap1\n      pop\n        /* \"#utility.yul\":29665:29814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29820:29946   */\n    tag_592:\n        /* \"#utility.yul\":29857:29864   */\n      0x00\n        /* \"#utility.yul\":29897:29939   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":29890:29895   */\n      dup3\n        /* \"#utility.yul\":29886:29940   */\n      and\n        /* \"#utility.yul\":29875:29940   */\n      swap1\n      pop\n        /* \"#utility.yul\":29820:29946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29952:30029   */\n    tag_493:\n        /* \"#utility.yul\":29989:29996   */\n      0x00\n        /* \"#utility.yul\":30018:30023   */\n      dup2\n        /* \"#utility.yul\":30007:30023   */\n      swap1\n      pop\n        /* \"#utility.yul\":29952:30029   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30035:30189   */\n    tag_277:\n        /* \"#utility.yul\":30119:30125   */\n      dup3\n        /* \"#utility.yul\":30114:30117   */\n      dup2\n        /* \"#utility.yul\":30109:30112   */\n      dup4\n        /* \"#utility.yul\":30096:30126   */\n      calldatacopy\n        /* \"#utility.yul\":30181:30182   */\n      0x00\n        /* \"#utility.yul\":30172:30178   */\n      dup4\n        /* \"#utility.yul\":30167:30170   */\n      dup4\n        /* \"#utility.yul\":30163:30179   */\n      add\n        /* \"#utility.yul\":30156:30183   */\n      mstore\n        /* \"#utility.yul\":30035:30189   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30195:30502   */\n    tag_406:\n        /* \"#utility.yul\":30263:30264   */\n      0x00\n        /* \"#utility.yul\":30273:30386   */\n    tag_600:\n        /* \"#utility.yul\":30287:30293   */\n      dup4\n        /* \"#utility.yul\":30284:30285   */\n      dup2\n        /* \"#utility.yul\":30281:30294   */\n      lt\n        /* \"#utility.yul\":30273:30386   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":30372:30373   */\n      dup1\n        /* \"#utility.yul\":30367:30370   */\n      dup3\n        /* \"#utility.yul\":30363:30374   */\n      add\n        /* \"#utility.yul\":30357:30375   */\n      mload\n        /* \"#utility.yul\":30353:30354   */\n      dup2\n        /* \"#utility.yul\":30348:30351   */\n      dup5\n        /* \"#utility.yul\":30344:30355   */\n      add\n        /* \"#utility.yul\":30337:30376   */\n      mstore\n        /* \"#utility.yul\":30309:30311   */\n      0x20\n        /* \"#utility.yul\":30306:30307   */\n      dup2\n        /* \"#utility.yul\":30302:30312   */\n      add\n        /* \"#utility.yul\":30297:30312   */\n      swap1\n      pop\n        /* \"#utility.yul\":30273:30386   */\n      jump(tag_600)\n    tag_602:\n        /* \"#utility.yul\":30404:30410   */\n      dup4\n        /* \"#utility.yul\":30401:30402   */\n      dup2\n        /* \"#utility.yul\":30398:30411   */\n      gt\n        /* \"#utility.yul\":30395:30496   */\n      iszero\n      tag_603\n      jumpi\n        /* \"#utility.yul\":30484:30485   */\n      0x00\n        /* \"#utility.yul\":30475:30481   */\n      dup5\n        /* \"#utility.yul\":30470:30473   */\n      dup5\n        /* \"#utility.yul\":30466:30482   */\n      add\n        /* \"#utility.yul\":30459:30486   */\n      mstore\n        /* \"#utility.yul\":30395:30496   */\n    tag_603:\n        /* \"#utility.yul\":30244:30502   */\n      pop\n        /* \"#utility.yul\":30195:30502   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30508:30828   */\n    tag_426:\n        /* \"#utility.yul\":30552:30558   */\n      0x00\n        /* \"#utility.yul\":30589:30590   */\n      0x02\n        /* \"#utility.yul\":30583:30587   */\n      dup3\n        /* \"#utility.yul\":30579:30591   */\n      div\n        /* \"#utility.yul\":30569:30591   */\n      swap1\n      pop\n        /* \"#utility.yul\":30636:30637   */\n      0x01\n        /* \"#utility.yul\":30630:30634   */\n      dup3\n        /* \"#utility.yul\":30626:30638   */\n      and\n        /* \"#utility.yul\":30657:30675   */\n      dup1\n        /* \"#utility.yul\":30647:30728   */\n      tag_605\n      jumpi\n        /* \"#utility.yul\":30713:30717   */\n      0x7f\n        /* \"#utility.yul\":30705:30711   */\n      dup3\n        /* \"#utility.yul\":30701:30718   */\n      and\n        /* \"#utility.yul\":30691:30718   */\n      swap2\n      pop\n        /* \"#utility.yul\":30647:30728   */\n    tag_605:\n        /* \"#utility.yul\":30775:30777   */\n      0x20\n        /* \"#utility.yul\":30767:30773   */\n      dup3\n        /* \"#utility.yul\":30764:30778   */\n      lt\n        /* \"#utility.yul\":30744:30762   */\n      dup2\n        /* \"#utility.yul\":30741:30779   */\n      eq\n        /* \"#utility.yul\":30738:30822   */\n      iszero\n      tag_606\n      jumpi\n        /* \"#utility.yul\":30794:30812   */\n      tag_607\n      tag_608\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":30738:30822   */\n    tag_606:\n        /* \"#utility.yul\":30559:30828   */\n      pop\n        /* \"#utility.yul\":30508:30828   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30834:31115   */\n    tag_551:\n        /* \"#utility.yul\":30917:30944   */\n      tag_610\n        /* \"#utility.yul\":30939:30943   */\n      dup3\n        /* \"#utility.yul\":30917:30944   */\n      tag_408\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":30909:30915   */\n      dup2\n        /* \"#utility.yul\":30905:30945   */\n      add\n        /* \"#utility.yul\":31047:31053   */\n      dup2\n        /* \"#utility.yul\":31035:31045   */\n      dup2\n        /* \"#utility.yul\":31032:31054   */\n      lt\n        /* \"#utility.yul\":31011:31029   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":30999:31009   */\n      dup3\n        /* \"#utility.yul\":30996:31030   */\n      gt\n        /* \"#utility.yul\":30993:31055   */\n      or\n        /* \"#utility.yul\":30990:31078   */\n      iszero\n      tag_611\n      jumpi\n        /* \"#utility.yul\":31058:31076   */\n      tag_612\n      tag_84\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":30990:31078   */\n    tag_611:\n        /* \"#utility.yul\":31098:31108   */\n      dup1\n        /* \"#utility.yul\":31094:31096   */\n      0x40\n        /* \"#utility.yul\":31087:31109   */\n      mstore\n        /* \"#utility.yul\":30877:31115   */\n      pop\n        /* \"#utility.yul\":30834:31115   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31121:31354   */\n    tag_98:\n        /* \"#utility.yul\":31160:31163   */\n      0x00\n        /* \"#utility.yul\":31183:31207   */\n      tag_614\n        /* \"#utility.yul\":31201:31206   */\n      dup3\n        /* \"#utility.yul\":31183:31207   */\n      tag_493\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":31174:31207   */\n      swap2\n      pop\n        /* \"#utility.yul\":31229:31295   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":31222:31227   */\n      dup3\n        /* \"#utility.yul\":31219:31296   */\n      eq\n        /* \"#utility.yul\":31216:31319   */\n      iszero\n      tag_615\n      jumpi\n        /* \"#utility.yul\":31299:31317   */\n      tag_616\n      tag_578\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":31216:31319   */\n    tag_615:\n        /* \"#utility.yul\":31346:31347   */\n      0x01\n        /* \"#utility.yul\":31339:31344   */\n      dup3\n        /* \"#utility.yul\":31335:31348   */\n      add\n        /* \"#utility.yul\":31328:31348   */\n      swap1\n      pop\n        /* \"#utility.yul\":31121:31354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31360:31536   */\n    tag_130:\n        /* \"#utility.yul\":31392:31393   */\n      0x00\n        /* \"#utility.yul\":31409:31429   */\n      tag_618\n        /* \"#utility.yul\":31427:31428   */\n      dup3\n        /* \"#utility.yul\":31409:31429   */\n      tag_493\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":31404:31429   */\n      swap2\n      pop\n        /* \"#utility.yul\":31443:31463   */\n      tag_619\n        /* \"#utility.yul\":31461:31462   */\n      dup4\n        /* \"#utility.yul\":31443:31463   */\n      tag_493\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":31438:31463   */\n      swap3\n      pop\n        /* \"#utility.yul\":31482:31483   */\n      dup3\n        /* \"#utility.yul\":31472:31507   */\n      tag_620\n      jumpi\n        /* \"#utility.yul\":31487:31505   */\n      tag_621\n      tag_584\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":31472:31507   */\n    tag_620:\n        /* \"#utility.yul\":31528:31529   */\n      dup3\n        /* \"#utility.yul\":31525:31526   */\n      dup3\n        /* \"#utility.yul\":31521:31530   */\n      mod\n        /* \"#utility.yul\":31516:31530   */\n      swap1\n      pop\n        /* \"#utility.yul\":31360:31536   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31542:31722   */\n    tag_578:\n        /* \"#utility.yul\":31590:31667   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31587:31588   */\n      0x00\n        /* \"#utility.yul\":31580:31668   */\n      mstore\n        /* \"#utility.yul\":31687:31691   */\n      0x11\n        /* \"#utility.yul\":31684:31685   */\n      0x04\n        /* \"#utility.yul\":31677:31692   */\n      mstore\n        /* \"#utility.yul\":31711:31715   */\n      0x24\n        /* \"#utility.yul\":31708:31709   */\n      0x00\n        /* \"#utility.yul\":31701:31716   */\n      revert\n        /* \"#utility.yul\":31728:31908   */\n    tag_584:\n        /* \"#utility.yul\":31776:31853   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31773:31774   */\n      0x00\n        /* \"#utility.yul\":31766:31854   */\n      mstore\n        /* \"#utility.yul\":31873:31877   */\n      0x12\n        /* \"#utility.yul\":31870:31871   */\n      0x04\n        /* \"#utility.yul\":31863:31878   */\n      mstore\n        /* \"#utility.yul\":31897:31901   */\n      0x24\n        /* \"#utility.yul\":31894:31895   */\n      0x00\n        /* \"#utility.yul\":31887:31902   */\n      revert\n        /* \"#utility.yul\":31914:32094   */\n    tag_608:\n        /* \"#utility.yul\":31962:32039   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31959:31960   */\n      0x00\n        /* \"#utility.yul\":31952:32040   */\n      mstore\n        /* \"#utility.yul\":32059:32063   */\n      0x22\n        /* \"#utility.yul\":32056:32057   */\n      0x04\n        /* \"#utility.yul\":32049:32064   */\n      mstore\n        /* \"#utility.yul\":32083:32087   */\n      0x24\n        /* \"#utility.yul\":32080:32081   */\n      0x00\n        /* \"#utility.yul\":32073:32088   */\n      revert\n        /* \"#utility.yul\":32100:32280   */\n    tag_92:\n        /* \"#utility.yul\":32148:32225   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":32145:32146   */\n      0x00\n        /* \"#utility.yul\":32138:32226   */\n      mstore\n        /* \"#utility.yul\":32245:32249   */\n      0x32\n        /* \"#utility.yul\":32242:32243   */\n      0x04\n        /* \"#utility.yul\":32235:32250   */\n      mstore\n        /* \"#utility.yul\":32269:32273   */\n      0x24\n        /* \"#utility.yul\":32266:32267   */\n      0x00\n        /* \"#utility.yul\":32259:32274   */\n      revert\n        /* \"#utility.yul\":32286:32466   */\n    tag_84:\n        /* \"#utility.yul\":32334:32411   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":32331:32332   */\n      0x00\n        /* \"#utility.yul\":32324:32412   */\n      mstore\n        /* \"#utility.yul\":32431:32435   */\n      0x41\n        /* \"#utility.yul\":32428:32429   */\n      0x04\n        /* \"#utility.yul\":32421:32436   */\n      mstore\n        /* \"#utility.yul\":32455:32459   */\n      0x24\n        /* \"#utility.yul\":32452:32453   */\n      0x00\n        /* \"#utility.yul\":32445:32460   */\n      revert\n        /* \"#utility.yul\":32472:32655   */\n    tag_203:\n        /* \"#utility.yul\":32507:32510   */\n      0x00\n        /* \"#utility.yul\":32545:32546   */\n      0x03\n        /* \"#utility.yul\":32527:32543   */\n      returndatasize\n        /* \"#utility.yul\":32524:32547   */\n      gt\n        /* \"#utility.yul\":32521:32649   */\n      iszero\n      tag_628\n      jumpi\n        /* \"#utility.yul\":32583:32584   */\n      0x04\n        /* \"#utility.yul\":32580:32581   */\n      0x00\n        /* \"#utility.yul\":32577:32578   */\n      dup1\n        /* \"#utility.yul\":32562:32585   */\n      returndatacopy\n        /* \"#utility.yul\":32605:32639   */\n      tag_629\n        /* \"#utility.yul\":32636:32637   */\n      0x00\n        /* \"#utility.yul\":32630:32638   */\n      mload\n        /* \"#utility.yul\":32605:32639   */\n      tag_630\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":32598:32639   */\n      swap1\n      pop\n        /* \"#utility.yul\":32521:32649   */\n    tag_628:\n        /* \"#utility.yul\":32472:32655   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":32661:32778   */\n    tag_285:\n        /* \"#utility.yul\":32770:32771   */\n      0x00\n        /* \"#utility.yul\":32767:32768   */\n      dup1\n        /* \"#utility.yul\":32760:32772   */\n      revert\n        /* \"#utility.yul\":32784:32901   */\n    tag_250:\n        /* \"#utility.yul\":32893:32894   */\n      0x00\n        /* \"#utility.yul\":32890:32891   */\n      dup1\n        /* \"#utility.yul\":32883:32895   */\n      revert\n        /* \"#utility.yul\":32907:33024   */\n    tag_275:\n        /* \"#utility.yul\":33016:33017   */\n      0x00\n        /* \"#utility.yul\":33013:33014   */\n      dup1\n        /* \"#utility.yul\":33006:33018   */\n      revert\n        /* \"#utility.yul\":33030:33147   */\n    tag_324:\n        /* \"#utility.yul\":33139:33140   */\n      0x00\n        /* \"#utility.yul\":33136:33137   */\n      dup1\n        /* \"#utility.yul\":33129:33141   */\n      revert\n        /* \"#utility.yul\":33153:33270   */\n    tag_314:\n        /* \"#utility.yul\":33262:33263   */\n      0x00\n        /* \"#utility.yul\":33259:33260   */\n      dup1\n        /* \"#utility.yul\":33252:33264   */\n      revert\n        /* \"#utility.yul\":33276:33378   */\n    tag_408:\n        /* \"#utility.yul\":33317:33323   */\n      0x00\n        /* \"#utility.yul\":33368:33370   */\n      0x1f\n        /* \"#utility.yul\":33364:33371   */\n      not\n        /* \"#utility.yul\":33359:33361   */\n      0x1f\n        /* \"#utility.yul\":33352:33357   */\n      dup4\n        /* \"#utility.yul\":33348:33362   */\n      add\n        /* \"#utility.yul\":33344:33372   */\n      and\n        /* \"#utility.yul\":33334:33372   */\n      swap1\n      pop\n        /* \"#utility.yul\":33276:33378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33384:33490   */\n    tag_630:\n        /* \"#utility.yul\":33428:33436   */\n      0x00\n        /* \"#utility.yul\":33477:33482   */\n      dup2\n        /* \"#utility.yul\":33472:33475   */\n      0xe0\n        /* \"#utility.yul\":33468:33483   */\n      shr\n        /* \"#utility.yul\":33447:33483   */\n      swap1\n      pop\n        /* \"#utility.yul\":33384:33490   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33496:33735   */\n    tag_440:\n        /* \"#utility.yul\":33636:33670   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":33632:33633   */\n      0x00\n        /* \"#utility.yul\":33624:33630   */\n      dup3\n        /* \"#utility.yul\":33620:33634   */\n      add\n        /* \"#utility.yul\":33613:33671   */\n      mstore\n        /* \"#utility.yul\":33705:33727   */\n      0x526563656976657220696d706c656d656e746572000000000000000000000000\n        /* \"#utility.yul\":33700:33702   */\n      0x20\n        /* \"#utility.yul\":33692:33698   */\n      dup3\n        /* \"#utility.yul\":33688:33703   */\n      add\n        /* \"#utility.yul\":33681:33728   */\n      mstore\n        /* \"#utility.yul\":33496:33735   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33741:33968   */\n    tag_445:\n        /* \"#utility.yul\":33881:33915   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":33877:33878   */\n      0x00\n        /* \"#utility.yul\":33869:33875   */\n      dup3\n        /* \"#utility.yul\":33865:33879   */\n      add\n        /* \"#utility.yul\":33858:33916   */\n      mstore\n        /* \"#utility.yul\":33950:33960   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":33945:33947   */\n      0x20\n        /* \"#utility.yul\":33937:33943   */\n      dup3\n        /* \"#utility.yul\":33933:33948   */\n      add\n        /* \"#utility.yul\":33926:33961   */\n      mstore\n        /* \"#utility.yul\":33741:33968   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33974:34202   */\n    tag_450:\n        /* \"#utility.yul\":34114:34148   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":34110:34111   */\n      0x00\n        /* \"#utility.yul\":34102:34108   */\n      dup3\n        /* \"#utility.yul\":34098:34112   */\n      add\n        /* \"#utility.yul\":34091:34149   */\n      mstore\n        /* \"#utility.yul\":34183:34194   */\n      0x20617070726f7665640000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":34178:34180   */\n      0x20\n        /* \"#utility.yul\":34170:34176   */\n      dup3\n        /* \"#utility.yul\":34166:34181   */\n      add\n        /* \"#utility.yul\":34159:34195   */\n      mstore\n        /* \"#utility.yul\":33974:34202   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34208:34437   */\n    tag_455:\n        /* \"#utility.yul\":34348:34382   */\n      0x455243313135353a2061646472657373207a65726f206973206e6f7420612076\n        /* \"#utility.yul\":34344:34345   */\n      0x00\n        /* \"#utility.yul\":34336:34342   */\n      dup3\n        /* \"#utility.yul\":34332:34346   */\n      add\n        /* \"#utility.yul\":34325:34383   */\n      mstore\n        /* \"#utility.yul\":34417:34429   */\n      0x616c6964206f776e657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":34412:34414   */\n      0x20\n        /* \"#utility.yul\":34404:34410   */\n      dup3\n        /* \"#utility.yul\":34400:34415   */\n      add\n        /* \"#utility.yul\":34393:34430   */\n      mstore\n        /* \"#utility.yul\":34208:34437   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34443:34667   */\n    tag_460:\n        /* \"#utility.yul\":34583:34617   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":34579:34580   */\n      0x00\n        /* \"#utility.yul\":34571:34577   */\n      dup3\n        /* \"#utility.yul\":34567:34581   */\n      add\n        /* \"#utility.yul\":34560:34618   */\n      mstore\n        /* \"#utility.yul\":34652:34659   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":34647:34649   */\n      0x20\n        /* \"#utility.yul\":34639:34645   */\n      dup3\n        /* \"#utility.yul\":34635:34650   */\n      add\n        /* \"#utility.yul\":34628:34660   */\n      mstore\n        /* \"#utility.yul\":34443:34667   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34673:34910   */\n    tag_465:\n        /* \"#utility.yul\":34813:34847   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":34809:34810   */\n      0x00\n        /* \"#utility.yul\":34801:34807   */\n      dup3\n        /* \"#utility.yul\":34797:34811   */\n      add\n        /* \"#utility.yul\":34790:34848   */\n      mstore\n        /* \"#utility.yul\":34882:34902   */\n      0x6f776e6572206e6f7220617070726f7665640000000000000000000000000000\n        /* \"#utility.yul\":34877:34879   */\n      0x20\n        /* \"#utility.yul\":34869:34875   */\n      dup3\n        /* \"#utility.yul\":34865:34880   */\n      add\n        /* \"#utility.yul\":34858:34903   */\n      mstore\n        /* \"#utility.yul\":34673:34910   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34916:35145   */\n    tag_470:\n        /* \"#utility.yul\":35056:35090   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":35052:35053   */\n      0x00\n        /* \"#utility.yul\":35044:35050   */\n      dup3\n        /* \"#utility.yul\":35040:35054   */\n      add\n        /* \"#utility.yul\":35033:35091   */\n      mstore\n        /* \"#utility.yul\":35125:35137   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":35120:35122   */\n      0x20\n        /* \"#utility.yul\":35112:35118   */\n      dup3\n        /* \"#utility.yul\":35108:35123   */\n      add\n        /* \"#utility.yul\":35101:35138   */\n      mstore\n        /* \"#utility.yul\":34916:35145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35151:35306   */\n    tag_475:\n        /* \"#utility.yul\":35291:35298   */\n      0x2e6a736f6e000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":35287:35288   */\n      0x00\n        /* \"#utility.yul\":35279:35285   */\n      dup3\n        /* \"#utility.yul\":35275:35289   */\n      add\n        /* \"#utility.yul\":35268:35299   */\n      mstore\n        /* \"#utility.yul\":35151:35306   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35312:35540   */\n    tag_480:\n        /* \"#utility.yul\":35452:35486   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":35448:35449   */\n      0x00\n        /* \"#utility.yul\":35440:35446   */\n      dup3\n        /* \"#utility.yul\":35436:35450   */\n      add\n        /* \"#utility.yul\":35429:35487   */\n      mstore\n        /* \"#utility.yul\":35521:35532   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":35516:35518   */\n      0x20\n        /* \"#utility.yul\":35508:35514   */\n      dup3\n        /* \"#utility.yul\":35504:35519   */\n      add\n        /* \"#utility.yul\":35497:35533   */\n      mstore\n        /* \"#utility.yul\":35312:35540   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35546:35774   */\n    tag_485:\n        /* \"#utility.yul\":35686:35720   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":35682:35683   */\n      0x00\n        /* \"#utility.yul\":35674:35680   */\n      dup3\n        /* \"#utility.yul\":35670:35684   */\n      add\n        /* \"#utility.yul\":35663:35721   */\n      mstore\n        /* \"#utility.yul\":35755:35766   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":35750:35752   */\n      0x20\n        /* \"#utility.yul\":35742:35748   */\n      dup3\n        /* \"#utility.yul\":35738:35753   */\n      add\n        /* \"#utility.yul\":35731:35767   */\n      mstore\n        /* \"#utility.yul\":35546:35774   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35780:36007   */\n    tag_490:\n        /* \"#utility.yul\":35920:35954   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":35916:35917   */\n      0x00\n        /* \"#utility.yul\":35908:35914   */\n      dup3\n        /* \"#utility.yul\":35904:35918   */\n      add\n        /* \"#utility.yul\":35897:35955   */\n      mstore\n        /* \"#utility.yul\":35989:35999   */\n      0x6d69736d61746368000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":35984:35986   */\n      0x20\n        /* \"#utility.yul\":35976:35982   */\n      dup3\n        /* \"#utility.yul\":35972:35987   */\n      add\n        /* \"#utility.yul\":35965:36000   */\n      mstore\n        /* \"#utility.yul\":35780:36007   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36013:36724   */\n    tag_205:\n        /* \"#utility.yul\":36052:36055   */\n      0x00\n        /* \"#utility.yul\":36090:36094   */\n      0x44\n        /* \"#utility.yul\":36072:36088   */\n      returndatasize\n        /* \"#utility.yul\":36069:36095   */\n      lt\n        /* \"#utility.yul\":36066:36105   */\n      iszero\n      tag_650\n      jumpi\n        /* \"#utility.yul\":36098:36103   */\n      jump(tag_649)\n        /* \"#utility.yul\":36066:36105   */\n    tag_650:\n        /* \"#utility.yul\":36127:36147   */\n      tag_651\n      tag_549\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":36202:36203   */\n      0x04\n        /* \"#utility.yul\":36184:36200   */\n      returndatasize\n        /* \"#utility.yul\":36180:36204   */\n      sub\n        /* \"#utility.yul\":36177:36178   */\n      0x04\n        /* \"#utility.yul\":36171:36175   */\n      dup3\n        /* \"#utility.yul\":36156:36205   */\n      returndatacopy\n        /* \"#utility.yul\":36235:36239   */\n      dup1\n        /* \"#utility.yul\":36229:36240   */\n      mload\n        /* \"#utility.yul\":36334:36350   */\n      returndatasize\n        /* \"#utility.yul\":36327:36331   */\n      0x24\n        /* \"#utility.yul\":36319:36325   */\n      dup3\n        /* \"#utility.yul\":36315:36332   */\n      add\n        /* \"#utility.yul\":36312:36351   */\n      gt\n        /* \"#utility.yul\":36279:36297   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":36271:36277   */\n      dup3\n        /* \"#utility.yul\":36268:36298   */\n      gt\n        /* \"#utility.yul\":36252:36365   */\n      or\n        /* \"#utility.yul\":36249:36395   */\n      iszero\n      tag_652\n      jumpi\n        /* \"#utility.yul\":36380:36385   */\n      pop\n      pop\n      jump(tag_649)\n        /* \"#utility.yul\":36249:36395   */\n    tag_652:\n        /* \"#utility.yul\":36426:36432   */\n      dup1\n        /* \"#utility.yul\":36420:36424   */\n      dup3\n        /* \"#utility.yul\":36416:36433   */\n      add\n        /* \"#utility.yul\":36462:36465   */\n      dup1\n        /* \"#utility.yul\":36456:36466   */\n      mload\n        /* \"#utility.yul\":36489:36507   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":36481:36487   */\n      dup2\n        /* \"#utility.yul\":36478:36508   */\n      gt\n        /* \"#utility.yul\":36475:36518   */\n      iszero\n      tag_653\n      jumpi\n        /* \"#utility.yul\":36511:36516   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_649)\n        /* \"#utility.yul\":36475:36518   */\n    tag_653:\n        /* \"#utility.yul\":36559:36565   */\n      dup1\n        /* \"#utility.yul\":36552:36556   */\n      0x20\n        /* \"#utility.yul\":36547:36550   */\n      dup4\n        /* \"#utility.yul\":36543:36557   */\n      add\n        /* \"#utility.yul\":36539:36566   */\n      add\n        /* \"#utility.yul\":36618:36619   */\n      0x04\n        /* \"#utility.yul\":36600:36616   */\n      returndatasize\n        /* \"#utility.yul\":36596:36620   */\n      sub\n        /* \"#utility.yul\":36590:36594   */\n      dup6\n        /* \"#utility.yul\":36586:36621   */\n      add\n        /* \"#utility.yul\":36581:36584   */\n      dup2\n        /* \"#utility.yul\":36578:36622   */\n      gt\n        /* \"#utility.yul\":36575:36632   */\n      iszero\n      tag_654\n      jumpi\n        /* \"#utility.yul\":36625:36630   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_649)\n        /* \"#utility.yul\":36575:36632   */\n    tag_654:\n        /* \"#utility.yul\":36642:36699   */\n      tag_655\n        /* \"#utility.yul\":36690:36696   */\n      dup3\n        /* \"#utility.yul\":36684:36688   */\n      0x20\n        /* \"#utility.yul\":36680:36697   */\n      add\n        /* \"#utility.yul\":36672:36678   */\n      dup6\n        /* \"#utility.yul\":36668:36698   */\n      add\n        /* \"#utility.yul\":36662:36666   */\n      dup7\n        /* \"#utility.yul\":36642:36699   */\n      tag_551\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":36715:36718   */\n      dup3\n        /* \"#utility.yul\":36708:36718   */\n      swap6\n      pop\n        /* \"#utility.yul\":36056:36724   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":36013:36724   */\n    tag_649:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":36730:36852   */\n    tag_280:\n        /* \"#utility.yul\":36803:36827   */\n      tag_657\n        /* \"#utility.yul\":36821:36826   */\n      dup2\n        /* \"#utility.yul\":36803:36827   */\n      tag_380\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":36796:36801   */\n      dup2\n        /* \"#utility.yul\":36793:36828   */\n      eq\n        /* \"#utility.yul\":36783:36846   */\n      tag_658\n      jumpi\n        /* \"#utility.yul\":36842:36843   */\n      0x00\n        /* \"#utility.yul\":36839:36840   */\n      dup1\n        /* \"#utility.yul\":36832:36844   */\n      revert\n        /* \"#utility.yul\":36783:36846   */\n    tag_658:\n        /* \"#utility.yul\":36730:36852   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36858:36974   */\n    tag_295:\n        /* \"#utility.yul\":36928:36949   */\n      tag_660\n        /* \"#utility.yul\":36943:36948   */\n      dup2\n        /* \"#utility.yul\":36928:36949   */\n      tag_398\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":36921:36926   */\n      dup2\n        /* \"#utility.yul\":36918:36950   */\n      eq\n        /* \"#utility.yul\":36908:36968   */\n      tag_661\n      jumpi\n        /* \"#utility.yul\":36964:36965   */\n      0x00\n        /* \"#utility.yul\":36961:36962   */\n      dup1\n        /* \"#utility.yul\":36954:36966   */\n      revert\n        /* \"#utility.yul\":36908:36968   */\n    tag_661:\n        /* \"#utility.yul\":36858:36974   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36980:37100   */\n    tag_299:\n        /* \"#utility.yul\":37052:37075   */\n      tag_663\n        /* \"#utility.yul\":37069:37074   */\n      dup2\n        /* \"#utility.yul\":37052:37075   */\n      tag_594\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":37045:37050   */\n      dup2\n        /* \"#utility.yul\":37042:37076   */\n      eq\n        /* \"#utility.yul\":37032:37094   */\n      tag_664\n      jumpi\n        /* \"#utility.yul\":37090:37091   */\n      0x00\n        /* \"#utility.yul\":37087:37088   */\n      dup1\n        /* \"#utility.yul\":37080:37092   */\n      revert\n        /* \"#utility.yul\":37032:37094   */\n    tag_664:\n        /* \"#utility.yul\":36980:37100   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":37106:37228   */\n    tag_310:\n        /* \"#utility.yul\":37179:37203   */\n      tag_666\n        /* \"#utility.yul\":37197:37202   */\n      dup2\n        /* \"#utility.yul\":37179:37203   */\n      tag_493\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":37172:37177   */\n      dup2\n        /* \"#utility.yul\":37169:37204   */\n      eq\n        /* \"#utility.yul\":37159:37222   */\n      tag_667\n      jumpi\n        /* \"#utility.yul\":37218:37219   */\n      0x00\n        /* \"#utility.yul\":37215:37216   */\n      dup1\n        /* \"#utility.yul\":37208:37220   */\n      revert\n        /* \"#utility.yul\":37159:37222   */\n    tag_667:\n        /* \"#utility.yul\":37106:37228   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f30735d6d6e548d47e8ac77a714b032de212100e2cdc9b99f235c6840f1c669d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_438": {
									"entryPoint": null,
									"id": 438,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_960": {
									"entryPoint": 79,
									"id": 960,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 747,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 794,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 846,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3764:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:12"
															},
															"nodeType": "YulIf",
															"src": "262:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:12",
														"type": ""
													}
												],
												"src": "7:421:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:282:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "549:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "564:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:35:12"
															},
															"nodeType": "YulIf",
															"src": "531:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "666:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:99:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "778:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "793:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:90:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "698:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "515:5:12",
														"type": ""
													}
												],
												"src": "448:355:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "896:437:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "944:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "944:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "944:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "917:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "926:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "913:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "913:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "938:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "909:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "909:32:12"
															},
															"nodeType": "YulIf",
															"src": "906:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "1035:291:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1050:38:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1074:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1085:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1070:17:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1064:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1064:24:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1054:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1135:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1137:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1137:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1137:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1107:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1115:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1104:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1104:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "1101:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1232:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1288:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1299:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1284:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1284:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1308:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1242:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1242:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1232:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "866:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "877:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "889:6:12",
														"type": ""
													}
												],
												"src": "809:524:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1380:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1390:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1400:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1400:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1449:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1457:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1429:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1429:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1364:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1373:6:12",
														"type": ""
													}
												],
												"src": "1339:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1514:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1524:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1540:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1534:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1534:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1524:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1507:6:12",
														"type": ""
													}
												],
												"src": "1474:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1622:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1727:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1729:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1729:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1729:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1707:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1696:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:30:12"
															},
															"nodeType": "YulIf",
															"src": "1693:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1759:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1789:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1767:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1767:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1759:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1833:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1845:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1851:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1833:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1606:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1617:4:12",
														"type": ""
													}
												],
												"src": "1555:308:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1918:258:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1928:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1937:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1932:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1997:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2022:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2027:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2018:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2018:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2041:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2046:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2037:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2037:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2031:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2031:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2011:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2011:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2011:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1958:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1961:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1955:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1969:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1971:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1980:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1983:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1976:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1976:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1971:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1951:3:12",
																"statements": []
															},
															"src": "1947:113:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2094:76:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2144:3:12"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2149:6:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2140:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2140:16:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2158:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2133:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2133:27:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2133:27:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2075:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2078:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2072:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2072:13:12"
															},
															"nodeType": "YulIf",
															"src": "2069:101:12"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1900:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1905:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1910:6:12",
														"type": ""
													}
												],
												"src": "1869:307:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2233:269:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2243:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2257:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2253:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2253:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2243:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2274:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2304:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2310:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2300:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2300:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2278:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2351:51:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2365:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2379:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2387:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2375:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2375:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2365:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2331:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:26:12"
															},
															"nodeType": "YulIf",
															"src": "2321:81:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2454:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2468:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2468:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2468:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2418:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2441:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2449:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2438:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2438:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2415:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:38:12"
															},
															"nodeType": "YulIf",
															"src": "2412:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2217:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2226:6:12",
														"type": ""
													}
												],
												"src": "2182:320:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2551:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2561:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2583:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2613:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2591:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2591:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2579:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2579:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2565:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2730:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2732:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2732:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2732:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2673:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2685:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2670:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2670:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2709:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2721:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2706:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2706:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2667:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:62:12"
															},
															"nodeType": "YulIf",
															"src": "2664:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2768:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2772:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2761:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2761:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2537:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2545:4:12",
														"type": ""
													}
												],
												"src": "2508:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2823:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2840:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2843:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2833:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2833:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2940:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2930:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2930:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2930:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2961:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2964:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2954:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2954:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2954:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "2795:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3009:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3026:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3029:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3019:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3019:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3019:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3123:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3126:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3116:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3116:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3116:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3147:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3150:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3140:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2981:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3256:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3273:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3276:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3266:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3266:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3266:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3167:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3379:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3396:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3399:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3389:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3389:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3389:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3290:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3502:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3519:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3522:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3512:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3512:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3512:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3413:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3625:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3642:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3645:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3635:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3635:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3635:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3536:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3707:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3717:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3735:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3742:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3731:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3731:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3751:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3747:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3747:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3727:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3727:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3717:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3690:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3700:6:12",
														"type": ""
													}
												],
												"src": "3659:102:12"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2C7D CODESIZE SUB DUP1 PUSH3 0x2C7D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x199 JUMP JUMPDEST PUSH3 0x48 DUP2 PUSH3 0x4F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x36E JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x67 SWAP3 SWAP2 SWAP1 PUSH3 0x6B JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x79 SWAP1 PUSH3 0x27F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xCB JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xF8 SWAP2 SWAP1 PUSH3 0xFC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x117 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0xFD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x132 PUSH3 0x12C DUP5 PUSH3 0x213 JUMP JUMPDEST PUSH3 0x1EA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x151 JUMPI PUSH3 0x150 PUSH3 0x34E JUMP JUMPDEST JUMPDEST PUSH3 0x15E DUP5 DUP3 DUP6 PUSH3 0x249 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x17E JUMPI PUSH3 0x17D PUSH3 0x349 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x190 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x11B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1B2 JUMPI PUSH3 0x1B1 PUSH3 0x358 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1D3 JUMPI PUSH3 0x1D2 PUSH3 0x353 JUMP JUMPDEST JUMPDEST PUSH3 0x1E1 DUP5 DUP3 DUP6 ADD PUSH3 0x166 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1F6 PUSH3 0x209 JUMP JUMPDEST SWAP1 POP PUSH3 0x204 DUP3 DUP3 PUSH3 0x2B5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x31A JUMP JUMPDEST JUMPDEST PUSH3 0x23C DUP3 PUSH3 0x35D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x269 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x24C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x279 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x298 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2AF JUMPI PUSH3 0x2AE PUSH3 0x2EB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2C0 DUP3 PUSH3 0x35D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2E2 JUMPI PUSH3 0x2E1 PUSH3 0x31A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28FF DUP1 PUSH3 0x37E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x1F83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x1E06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x193A JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1E21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH2 0x3AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1868 JUMP JUMPDEST PUSH2 0x450 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1DAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH2 0x569 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1E06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x613 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x1EA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x364 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x374 JUMPI POP PUSH2 0x373 DUP3 PUSH2 0x6B4 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH2 0x388 DUP4 PUSH2 0x71E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x399 SWAP3 SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B7 PUSH2 0x87F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x3FD JUMPI POP PUSH2 0x3FC DUP6 PUSH2 0x3F7 PUSH2 0x87F JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST JUMPDEST PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x433 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x449 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x887 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x496 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48D SWAP1 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B3 JUMPI PUSH2 0x4B2 PUSH2 0x2410 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4E1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x55E JUMPI PUSH2 0x52E DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x506 JUMPI PUSH2 0x505 PUSH2 0x23E1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x521 JUMPI PUSH2 0x520 PUSH2 0x23E1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x541 JUMPI PUSH2 0x540 PUSH2 0x23E1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x557 SWAP1 PUSH2 0x22DA JUMP JUMPDEST SWAP1 POP PUSH2 0x4E7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x57B PUSH2 0x574 PUSH2 0x87F JUMP JUMPDEST DUP4 DUP4 PUSH2 0xBA9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x61B PUSH2 0x87F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x661 JUMPI POP PUSH2 0x660 DUP6 PUSH2 0x65B PUSH2 0x87F JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST JUMPDEST PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x1E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AD DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xD16 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x766 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x87A JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x798 JUMPI DUP1 DUP1 PUSH2 0x781 SWAP1 PUSH2 0x22DA JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x791 SWAP2 SWAP1 PUSH2 0x215C JUMP JUMPDEST SWAP2 POP PUSH2 0x76E JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7B4 JUMPI PUSH2 0x7B3 PUSH2 0x2410 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7E6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x873 JUMPI PUSH1 0x1 DUP3 PUSH2 0x7FF SWAP2 SWAP1 PUSH2 0x218D JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x80E SWAP2 SWAP1 PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x81A SWAP2 SWAP1 PUSH2 0x2106 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x830 JUMPI PUSH2 0x82F PUSH2 0x23E1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x86C SWAP2 SWAP1 PUSH2 0x215C JUMP JUMPDEST SWAP5 POP PUSH2 0x7EA JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x8CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C2 SWAP1 PUSH2 0x1F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x932 SWAP1 PUSH2 0x1EC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x945 PUSH2 0x87F JUMP JUMPDEST SWAP1 POP PUSH2 0x955 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xB06 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x976 JUMPI PUSH2 0x975 PUSH2 0x23E1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x995 JUMPI PUSH2 0x994 PUSH2 0x23E1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP1 PUSH2 0x1F03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAEB SWAP2 SWAP1 PUSH2 0x2106 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xAFF SWAP1 PUSH2 0x22DA JUMP JUMPDEST SWAP1 POP PUSH2 0x958 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xB7D SWAP3 SWAP2 SWAP1 PUSH2 0x1DCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xB93 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xFBA JUMP JUMPDEST PUSH2 0xBA1 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xFC2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0F SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD09 SWAP2 SWAP1 PUSH2 0x1E06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7D SWAP1 PUSH2 0x1EC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD90 PUSH2 0x87F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD9D DUP6 PUSH2 0x11A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDAA DUP6 PUSH2 0x11A9 JUMP JUMPDEST SWAP1 POP PUSH2 0xDBA DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xE51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE48 SWAP1 PUSH2 0x1F03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF06 SWAP2 SWAP1 PUSH2 0x2106 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xF83 SWAP3 SWAP2 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF99 DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xFBA JUMP JUMPDEST PUSH2 0xFA7 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1223 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFE1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x140A JUMP JUMPDEST ISZERO PUSH2 0x11A1 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1027 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CEB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1041 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1072 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x106F SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1118 JUMPI PUSH2 0x107E PUSH2 0x243F JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x10DB JUMPI POP PUSH2 0x1093 PUSH2 0x27D7 JUMP JUMPDEST DUP1 PUSH2 0x109E JUMPI POP PUSH2 0x10DD JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D2 SWAP2 SWAP1 PUSH2 0x1E21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110F SWAP1 PUSH2 0x1E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x119F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1196 SWAP1 PUSH2 0x1E63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11C8 JUMPI PUSH2 0x11C7 PUSH2 0x2410 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11F6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x120E JUMPI PUSH2 0x120D PUSH2 0x23E1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1242 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x140A JUMP JUMPDEST ISZERO PUSH2 0x1402 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1288 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D53 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12D3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12D0 SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1379 JUMPI PUSH2 0x12DF PUSH2 0x243F JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x133C JUMPI POP PUSH2 0x12F4 PUSH2 0x27D7 JUMP JUMPDEST DUP1 PUSH2 0x12FF JUMPI POP PUSH2 0x133E JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1333 SWAP2 SWAP1 PUSH2 0x1E21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1370 SWAP1 PUSH2 0x1E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1400 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F7 SWAP1 PUSH2 0x1E63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1440 PUSH2 0x143B DUP5 PUSH2 0x1FEC JUMP JUMPDEST PUSH2 0x1FC7 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x1463 JUMPI PUSH2 0x1462 PUSH2 0x2466 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1493 JUMPI DUP2 PUSH2 0x1479 DUP9 DUP3 PUSH2 0x154F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1466 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B0 PUSH2 0x14AB DUP5 PUSH2 0x2018 JUMP JUMPDEST PUSH2 0x1FC7 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x14D3 JUMPI PUSH2 0x14D2 PUSH2 0x2466 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1503 JUMPI DUP2 PUSH2 0x14E9 DUP9 DUP3 PUSH2 0x162D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x14D6 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1520 PUSH2 0x151B DUP5 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x1FC7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x153C JUMPI PUSH2 0x153B PUSH2 0x246B JUMP JUMPDEST JUMPDEST PUSH2 0x1547 DUP5 DUP3 DUP6 PUSH2 0x2235 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x155E DUP2 PUSH2 0x286D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1579 JUMPI PUSH2 0x1578 PUSH2 0x2461 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1589 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x142D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15A7 JUMPI PUSH2 0x15A6 PUSH2 0x2461 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15B7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x149D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15CF DUP2 PUSH2 0x2884 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15E4 DUP2 PUSH2 0x289B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x15F9 DUP2 PUSH2 0x289B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1614 JUMPI PUSH2 0x1613 PUSH2 0x2461 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1624 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x150D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x163C DUP2 PUSH2 0x28B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1659 JUMPI PUSH2 0x1658 PUSH2 0x2475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1667 DUP6 DUP3 DUP7 ADD PUSH2 0x154F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1678 DUP6 DUP3 DUP7 ADD PUSH2 0x154F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x169E JUMPI PUSH2 0x169D PUSH2 0x2475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16AC DUP9 DUP3 DUP10 ADD PUSH2 0x154F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x16BD DUP9 DUP3 DUP10 ADD PUSH2 0x154F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16DE JUMPI PUSH2 0x16DD PUSH2 0x2470 JUMP JUMPDEST JUMPDEST PUSH2 0x16EA DUP9 DUP3 DUP10 ADD PUSH2 0x1592 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x170B JUMPI PUSH2 0x170A PUSH2 0x2470 JUMP JUMPDEST JUMPDEST PUSH2 0x1717 DUP9 DUP3 DUP10 ADD PUSH2 0x1592 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1738 JUMPI PUSH2 0x1737 PUSH2 0x2470 JUMP JUMPDEST JUMPDEST PUSH2 0x1744 DUP9 DUP3 DUP10 ADD PUSH2 0x15FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x176D JUMPI PUSH2 0x176C PUSH2 0x2475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x177B DUP9 DUP3 DUP10 ADD PUSH2 0x154F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x178C DUP9 DUP3 DUP10 ADD PUSH2 0x154F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x179D DUP9 DUP3 DUP10 ADD PUSH2 0x162D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x17AE DUP9 DUP3 DUP10 ADD PUSH2 0x162D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17CF JUMPI PUSH2 0x17CE PUSH2 0x2470 JUMP JUMPDEST JUMPDEST PUSH2 0x17DB DUP9 DUP3 DUP10 ADD PUSH2 0x15FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17FF JUMPI PUSH2 0x17FE PUSH2 0x2475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x180D DUP6 DUP3 DUP7 ADD PUSH2 0x154F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x181E DUP6 DUP3 DUP7 ADD PUSH2 0x15C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x183F JUMPI PUSH2 0x183E PUSH2 0x2475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x184D DUP6 DUP3 DUP7 ADD PUSH2 0x154F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x185E DUP6 DUP3 DUP7 ADD PUSH2 0x162D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x187F JUMPI PUSH2 0x187E PUSH2 0x2475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x189D JUMPI PUSH2 0x189C PUSH2 0x2470 JUMP JUMPDEST JUMPDEST PUSH2 0x18A9 DUP6 DUP3 DUP7 ADD PUSH2 0x1564 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18CA JUMPI PUSH2 0x18C9 PUSH2 0x2470 JUMP JUMPDEST JUMPDEST PUSH2 0x18D6 DUP6 DUP3 DUP7 ADD PUSH2 0x1592 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F6 JUMPI PUSH2 0x18F5 PUSH2 0x2475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1904 DUP5 DUP3 DUP6 ADD PUSH2 0x15D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1923 JUMPI PUSH2 0x1922 PUSH2 0x2475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1931 DUP5 DUP3 DUP6 ADD PUSH2 0x15EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1950 JUMPI PUSH2 0x194F PUSH2 0x2475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x195E DUP5 DUP3 DUP6 ADD PUSH2 0x162D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1973 DUP4 DUP4 PUSH2 0x1C9E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1988 DUP2 PUSH2 0x21C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1999 DUP3 PUSH2 0x209A JUMP JUMPDEST PUSH2 0x19A3 DUP2 DUP6 PUSH2 0x20C8 JUMP JUMPDEST SWAP4 POP PUSH2 0x19AE DUP4 PUSH2 0x2075 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19DF JUMPI DUP2 MLOAD PUSH2 0x19C6 DUP9 DUP3 PUSH2 0x1967 JUMP JUMPDEST SWAP8 POP PUSH2 0x19D1 DUP4 PUSH2 0x20BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x19B2 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19F5 DUP2 PUSH2 0x21D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A06 DUP3 PUSH2 0x20A5 JUMP JUMPDEST PUSH2 0x1A10 DUP2 DUP6 PUSH2 0x20D9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A20 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2244 JUMP JUMPDEST PUSH2 0x1A29 DUP2 PUSH2 0x247A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3F DUP3 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x1A49 DUP2 DUP6 PUSH2 0x20EA JUMP JUMPDEST SWAP4 POP PUSH2 0x1A59 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2244 JUMP JUMPDEST PUSH2 0x1A62 DUP2 PUSH2 0x247A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A78 DUP3 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x1A82 DUP2 DUP6 PUSH2 0x20FB JUMP JUMPDEST SWAP4 POP PUSH2 0x1A92 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2244 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x1AAB DUP2 PUSH2 0x2277 JUMP JUMPDEST PUSH2 0x1AB5 DUP2 DUP7 PUSH2 0x20FB JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x1AD0 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1AE1 JUMPI PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 DUP7 ADD SWAP4 POP PUSH2 0x1B14 JUMP JUMPDEST PUSH2 0x1AEA DUP6 PUSH2 0x2085 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B0C JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1AED JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B2A PUSH1 0x34 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1B35 DUP3 PUSH2 0x2498 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B4D PUSH1 0x28 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1B58 DUP3 PUSH2 0x24E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B70 PUSH1 0x29 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7B DUP3 PUSH2 0x2536 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B93 PUSH1 0x2A DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9E DUP3 PUSH2 0x2585 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB6 PUSH1 0x25 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC1 DUP3 PUSH2 0x25D4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD9 PUSH1 0x32 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE4 DUP3 PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BFC PUSH1 0x2A DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1C07 DUP3 PUSH2 0x2672 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C1F PUSH1 0x5 DUP4 PUSH2 0x20FB JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2A DUP3 PUSH2 0x26C1 JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C42 PUSH1 0x29 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1C4D DUP3 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C65 PUSH1 0x29 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1C70 DUP3 PUSH2 0x2739 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C88 PUSH1 0x28 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1C93 DUP3 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CA7 DUP2 PUSH2 0x222B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1CB6 DUP2 PUSH2 0x222B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC8 DUP3 DUP6 PUSH2 0x1A9E JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD4 DUP3 DUP5 PUSH2 0x1A6D JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDF DUP3 PUSH2 0x1C12 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1D00 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x1D0D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x197F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1D1F DUP2 DUP7 PUSH2 0x198E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1D33 DUP2 DUP6 PUSH2 0x198E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1D47 DUP2 DUP5 PUSH2 0x19FB JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1D68 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x1D75 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x1D82 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1CAD JUMP JUMPDEST PUSH2 0x1D8F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1CAD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1DA1 DUP2 DUP5 PUSH2 0x19FB JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DC7 DUP2 DUP5 PUSH2 0x198E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DE9 DUP2 DUP6 PUSH2 0x198E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1DFD DUP2 DUP5 PUSH2 0x198E JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E1B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E3B DUP2 DUP5 PUSH2 0x1A34 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E5C DUP2 PUSH2 0x1B1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E7C DUP2 PUSH2 0x1B40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E9C DUP2 PUSH2 0x1B63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EBC DUP2 PUSH2 0x1B86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EDC DUP2 PUSH2 0x1BA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EFC DUP2 PUSH2 0x1BCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F1C DUP2 PUSH2 0x1BEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F3C DUP2 PUSH2 0x1C35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F5C DUP2 PUSH2 0x1C58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F7C DUP2 PUSH2 0x1C7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F98 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FB3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1CAD JUMP JUMPDEST PUSH2 0x1FC0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CAD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD1 PUSH2 0x1FE2 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FDD DUP3 DUP3 PUSH2 0x22A9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2007 JUMPI PUSH2 0x2006 PUSH2 0x2410 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2033 JUMPI PUSH2 0x2032 PUSH2 0x2410 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x205F JUMPI PUSH2 0x205E PUSH2 0x2410 JUMP JUMPDEST JUMPDEST PUSH2 0x2068 DUP3 PUSH2 0x247A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2111 DUP3 PUSH2 0x222B JUMP JUMPDEST SWAP2 POP PUSH2 0x211C DUP4 PUSH2 0x222B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2151 JUMPI PUSH2 0x2150 PUSH2 0x2354 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2167 DUP3 PUSH2 0x222B JUMP JUMPDEST SWAP2 POP PUSH2 0x2172 DUP4 PUSH2 0x222B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2182 JUMPI PUSH2 0x2181 PUSH2 0x2383 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2198 DUP3 PUSH2 0x222B JUMP JUMPDEST SWAP2 POP PUSH2 0x21A3 DUP4 PUSH2 0x222B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x21B6 JUMPI PUSH2 0x21B5 PUSH2 0x2354 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21CC DUP3 PUSH2 0x220B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2262 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2247 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2271 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x228F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x22A3 JUMPI PUSH2 0x22A2 PUSH2 0x23B2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22B2 DUP3 PUSH2 0x247A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x22D1 JUMPI PUSH2 0x22D0 PUSH2 0x2410 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22E5 DUP3 PUSH2 0x222B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2318 JUMPI PUSH2 0x2317 PUSH2 0x2354 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x232E DUP3 PUSH2 0x222B JUMP JUMPDEST SWAP2 POP PUSH2 0x2339 DUP4 PUSH2 0x222B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2349 JUMPI PUSH2 0x2348 PUSH2 0x2383 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x245E JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x245B PUSH1 0x0 MLOAD PUSH2 0x248B JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2E6A736F6E000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x27E7 JUMPI PUSH2 0x286A JUMP JUMPDEST PUSH2 0x27EF PUSH2 0x1FE2 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2817 JUMPI POP POP PUSH2 0x286A JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2835 JUMPI POP POP POP POP PUSH2 0x286A JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x2852 JUMPI POP POP POP POP POP PUSH2 0x286A JUMP JUMPDEST PUSH2 0x2861 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x22A9 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2876 DUP2 PUSH2 0x21C1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2881 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x288D DUP2 PUSH2 0x21D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x28A4 DUP2 PUSH2 0x21DF JUMP JUMPDEST DUP2 EQ PUSH2 0x28AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x28BB DUP2 PUSH2 0x222B JUMP JUMPDEST DUP2 EQ PUSH2 0x28C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN SMOD CALLDATALOAD 0xD6 0xD6 0xE5 BASEFEE 0xD4 PUSH31 0x8AC77A714B032DE212100E2CDC9B99F235C6840F1C669D64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "604:16694:2:-:0;;;1141:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1183:13;1191:4;1183:7;;;:13;;:::i;:::-;1141:62;604:16694;;8349:86;8422:6;8415:4;:13;;;;;;;;;;;;:::i;:::-;;8349:86;:::o;604:16694::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:12:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:524::-;889:6;938:2;926:9;917:7;913:23;909:32;906:119;;;944:79;;:::i;:::-;906:119;1085:1;1074:9;1070:17;1064:24;1115:18;1107:6;1104:30;1101:117;;;1137:79;;:::i;:::-;1101:117;1242:74;1308:7;1299:6;1288:9;1284:22;1242:74;:::i;:::-;1232:84;;1035:291;809:524;;;;:::o;1339:129::-;1373:6;1400:20;;:::i;:::-;1390:30;;1429:33;1457:4;1449:6;1429:33;:::i;:::-;1339:129;;;:::o;1474:75::-;1507:6;1540:2;1534:9;1524:19;;1474:75;:::o;1555:308::-;1617:4;1707:18;1699:6;1696:30;1693:56;;;1729:18;;:::i;:::-;1693:56;1767:29;1789:6;1767:29;:::i;:::-;1759:37;;1851:4;1845;1841:15;1833:23;;1555:308;;;:::o;1869:307::-;1937:1;1947:113;1961:6;1958:1;1955:13;1947:113;;;2046:1;2041:3;2037:11;2031:18;2027:1;2022:3;2018:11;2011:39;1983:2;1980:1;1976:10;1971:15;;1947:113;;;2078:6;2075:1;2072:13;2069:101;;;2158:1;2149:6;2144:3;2140:16;2133:27;2069:101;1918:258;1869:307;;;:::o;2182:320::-;2226:6;2263:1;2257:4;2253:12;2243:22;;2310:1;2304:4;2300:12;2331:18;2321:81;;2387:4;2379:6;2375:17;2365:27;;2321:81;2449:2;2441:6;2438:14;2418:18;2415:38;2412:84;;;2468:18;;:::i;:::-;2412:84;2233:269;2182:320;;;:::o;2508:281::-;2591:27;2613:4;2591:27;:::i;:::-;2583:6;2579:40;2721:6;2709:10;2706:22;2685:18;2673:10;2670:34;2667:62;2664:88;;;2732:18;;:::i;:::-;2664:88;2772:10;2768:2;2761:22;2551:238;2508:281;;:::o;2795:180::-;2843:77;2840:1;2833:88;2940:4;2937:1;2930:15;2964:4;2961:1;2954:15;2981:180;3029:77;3026:1;3019:88;3126:4;3123:1;3116:15;3150:4;3147:1;3140:15;3167:117;3276:1;3273;3266:12;3290:117;3399:1;3396;3389:12;3413:117;3522:1;3519;3512:12;3536:117;3645:1;3642;3635:12;3659:102;3700:6;3751:2;3747:7;3742:2;3735:5;3731:14;3727:28;3717:38;;3659:102;;;:::o;604:16694:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1470": {
									"entryPoint": 4026,
									"id": 1470,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1626": {
									"entryPoint": 4521,
									"id": 1626,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1451": {
									"entryPoint": 4018,
									"id": 1451,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1598": {
									"entryPoint": 4034,
									"id": 1598,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1533": {
									"entryPoint": 4643,
									"id": 1533,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_2301": {
									"entryPoint": 2175,
									"id": 2301,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_949": {
									"entryPoint": 2183,
									"id": 949,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_814": {
									"entryPoint": 3350,
									"id": 814,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1432": {
									"entryPoint": 2985,
									"id": 1432,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_584": {
									"entryPoint": 1104,
									"id": 584,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_520": {
									"entryPoint": 464,
									"id": 520,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_619": {
									"entryPoint": 1407,
									"id": 619,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_2012": {
									"entryPoint": 5130,
									"id": 2012,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_697": {
									"entryPoint": 943,
									"id": 697,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_657": {
									"entryPoint": 1555,
									"id": 657,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_601": {
									"entryPoint": 1385,
									"id": 601,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_2537": {
									"entryPoint": 1716,
									"id": 2537,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_469": {
									"entryPoint": 665,
									"id": 469,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toString_2396": {
									"entryPoint": 1822,
									"id": 2396,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_492": {
									"entryPoint": 891,
									"id": 492,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5165,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5277,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5389,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 5610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 5631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 5969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 7326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7356,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7403,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7507,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7631,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8094,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 8162,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 8260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 8325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 8757,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 8772,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 8922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 8995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9044,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9091,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9138,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9185,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9232,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 9279,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 9313,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 9318,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 9323,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 9328,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9333,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 9338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_224_unsigned": {
									"entryPoint": 9355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed": {
									"entryPoint": 9368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503": {
									"entryPoint": 9447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a": {
									"entryPoint": 9526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad": {
									"entryPoint": 9605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d": {
									"entryPoint": 9684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686": {
									"entryPoint": 9763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf": {
									"entryPoint": 9842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972": {
									"entryPoint": 9921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2": {
									"entryPoint": 9962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5": {
									"entryPoint": 10041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807": {
									"entryPoint": 10120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"try_decode_error_message": {
									"entryPoint": 10199,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 10349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 10395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:37231:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:620:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:12",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "268:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "275:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:21:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "291:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "302:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:16:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:17:12",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "335:6:12"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "328:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:103:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "404:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "360:3:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "369:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "377:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:17:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:27:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "385:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:36:12"
															},
															"nodeType": "YulIf",
															"src": "350:143:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:178:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "577:21:12",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:12"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "581:10:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "645:10:12"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "657:3:12"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "624:20:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "624:37:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:50:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:50:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "675:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "686:3:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "682:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "675:3:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "709:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "709:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "524:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "521:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "535:18:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "537:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "546:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "542:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "537:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "506:14:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "508:10:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "517:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "512:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "502:238:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:12",
														"type": ""
													}
												],
												"src": "24:722:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "871:620:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "881:90:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "963:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "906:56:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "906:64:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "890:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:81:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "881:5:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "980:16:12",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "991:5:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "984:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1013:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1020:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1006:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1006:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1006:21:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1036:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1047:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1054:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1043:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:16:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1036:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1069:17:12",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1080:6:12"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1073:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1135:103:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "1149:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1149:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1149:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1105:3:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1114:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1122:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1110:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1110:17:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1101:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1101:27:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1130:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1098:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:36:12"
															},
															"nodeType": "YulIf",
															"src": "1095:143:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1307:178:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1322:21:12",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "1340:3:12"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "1326:10:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1364:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "1390:10:12"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "1402:3:12"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "1369:20:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1369:37:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1357:50:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1357:50:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1420:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1436:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1427:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1427:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1420:3:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1454:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1465:3:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1470:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1461:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1454:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1269:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1272:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1266:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1280:18:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1282:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1291:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1294:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1287:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1287:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1282:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1251:14:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1253:10:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1262:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "1257:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1247:238:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "841:6:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "849:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "857:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "865:5:12",
														"type": ""
													}
												],
												"src": "769:722:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1580:327:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1590:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1656:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1615:40:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1615:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1599:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1599:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1590:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1680:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1687:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1673:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1673:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1673:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1703:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1718:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1725:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1714:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1714:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1707:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1768:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "1770:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1770:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1770:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1749:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1754:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1745:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1745:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1763:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1742:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:25:12"
															},
															"nodeType": "YulIf",
															"src": "1739:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1884:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1889:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1894:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1860:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1860:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1860:41:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1553:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1558:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1566:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1574:5:12",
														"type": ""
													}
												],
												"src": "1497:410:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1965:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1975:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1997:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1984:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1984:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1975:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2040:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2013:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2013:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2013:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1943:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1951:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1959:5:12",
														"type": ""
													}
												],
												"src": "1913:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2152:293:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2201:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2203:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2203:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2180:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2188:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2176:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2176:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2195:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2172:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2165:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2165:35:12"
															},
															"nodeType": "YulIf",
															"src": "2162:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2293:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2320:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2307:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2297:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2336:103:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2412:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2420:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2408:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2408:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2427:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2435:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2345:62:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2345:94:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2336:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2130:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2138:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2146:5:12",
														"type": ""
													}
												],
												"src": "2075:370:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:293:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2594:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2596:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2596:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2596:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2573:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2581:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2569:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2569:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2565:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2565:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2558:35:12"
															},
															"nodeType": "YulIf",
															"src": "2555:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2686:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2713:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2700:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2690:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2729:103:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2805:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2813:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2801:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2801:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2820:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2828:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2738:62:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2738:94:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2729:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2523:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2531:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2539:5:12",
														"type": ""
													}
												],
												"src": "2468:370:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2893:84:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2903:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2925:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2912:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2912:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2903:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2965:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2941:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2941:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2941:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2871:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2879:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:12",
														"type": ""
													}
												],
												"src": "2844:133:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3034:86:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3044:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3066:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3053:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3053:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3044:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3108:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3082:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3082:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3012:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3020:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3028:5:12",
														"type": ""
													}
												],
												"src": "2983:137:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3188:79:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3198:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3213:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3207:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3207:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3198:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3255:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3229:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3229:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3229:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3166:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3174:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3182:5:12",
														"type": ""
													}
												],
												"src": "3126:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3347:277:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3396:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3398:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3398:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3398:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3375:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3383:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3371:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3371:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3390:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3367:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3367:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3360:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3360:35:12"
															},
															"nodeType": "YulIf",
															"src": "3357:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3488:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3515:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3502:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3502:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3492:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3531:87:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3591:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3599:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3587:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3587:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3606:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3614:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3540:46:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3540:78:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3531:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3325:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3333:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3341:5:12",
														"type": ""
													}
												],
												"src": "3286:338:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3682:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3692:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3714:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3701:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3701:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3692:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3757:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3730:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3730:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3730:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3660:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3668:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3676:5:12",
														"type": ""
													}
												],
												"src": "3630:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3858:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3904:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3906:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3906:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3906:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3879:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3888:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3875:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3875:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3900:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:32:12"
															},
															"nodeType": "YulIf",
															"src": "3868:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "3997:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4012:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4026:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4016:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4041:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4076:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4087:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4072:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4072:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4096:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4051:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4051:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4041:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4124:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4139:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4153:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4143:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4169:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4204:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4215:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4200:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4200:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4224:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4179:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4179:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4169:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3820:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3831:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3843:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3851:6:12",
														"type": ""
													}
												],
												"src": "3775:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4448:1316:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4495:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4497:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4497:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4497:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4469:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4478:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4465:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4465:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4490:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:33:12"
															},
															"nodeType": "YulIf",
															"src": "4458:120:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "4588:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4603:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4617:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4607:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4632:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4667:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4678:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4663:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4663:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4687:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4642:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4642:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4632:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4715:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4730:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4744:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4734:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4760:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4795:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4806:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4791:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4791:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4815:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4770:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4770:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4760:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4843:303:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4858:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4889:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4900:2:12",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4885:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4885:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4872:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4872:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4862:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4951:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4953:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4953:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4953:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4923:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4931:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4920:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4920:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "4917:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5048:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5108:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5119:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5104:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5104:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5128:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5058:45:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5058:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5048:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5156:303:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5171:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5202:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5213:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5198:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5198:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5185:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5185:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5175:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5264:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5266:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5266:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5266:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5236:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5244:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5233:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5233:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "5230:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5361:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5421:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5432:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5417:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5417:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5441:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5371:45:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5371:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5361:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5469:288:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5484:47:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5515:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5526:3:12",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5511:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5511:19:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5498:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5498:33:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5488:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5578:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5580:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5580:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5580:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5550:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5558:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5547:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5547:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "5544:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5675:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5719:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5730:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5715:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5715:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5739:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5685:29:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5685:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "5675:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4386:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4397:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4409:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4417:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4425:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4433:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4441:6:12",
														"type": ""
													}
												],
												"src": "4255:1509:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5913:946:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5960:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5962:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5962:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5962:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5934:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5943:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5930:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5930:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5955:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5926:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5926:33:12"
															},
															"nodeType": "YulIf",
															"src": "5923:120:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "6053:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6068:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6082:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6072:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6097:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6132:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6143:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6128:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6128:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6152:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6107:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6107:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6097:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6180:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6195:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6209:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6199:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6225:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6260:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6271:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6256:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6256:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6280:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6235:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6235:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6225:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6308:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6323:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6337:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6327:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6353:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6388:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6399:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6384:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6384:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6408:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6363:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6363:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6353:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6436:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6451:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6465:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6455:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6481:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6516:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6527:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6512:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6512:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6536:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6491:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6491:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "6481:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6564:288:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6579:47:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6610:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6621:3:12",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6606:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6606:19:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6593:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6593:33:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6583:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6673:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6675:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6675:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6675:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6645:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6653:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6642:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6642:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "6639:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6770:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6814:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6825:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6810:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6810:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6834:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6780:29:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6780:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "6770:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5851:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5862:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5874:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5882:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5890:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5898:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5906:6:12",
														"type": ""
													}
												],
												"src": "5770:1089:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6945:388:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6991:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6993:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6993:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6993:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6966:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6975:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6962:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6962:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6987:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6958:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6958:32:12"
															},
															"nodeType": "YulIf",
															"src": "6955:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "7084:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7099:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7113:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7103:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7128:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7163:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7174:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7159:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7159:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7183:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7138:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7138:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7128:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7211:115:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7226:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7240:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7230:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7256:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7288:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7299:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7284:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7284:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7308:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "7266:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7266:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7256:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6907:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6918:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6930:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6938:6:12",
														"type": ""
													}
												],
												"src": "6865:468:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7422:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7468:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7470:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7470:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7470:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7443:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7452:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7439:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7439:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7464:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7435:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7435:32:12"
															},
															"nodeType": "YulIf",
															"src": "7432:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "7561:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7576:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7590:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7580:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7605:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7640:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7651:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7636:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7636:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7660:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7615:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7615:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7605:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7688:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7703:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7717:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7707:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7733:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7768:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7779:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7764:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7764:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7788:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7743:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7743:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7733:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7384:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7395:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7407:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7415:6:12",
														"type": ""
													}
												],
												"src": "7339:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7952:761:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7998:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8000:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8000:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8000:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7973:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7982:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7969:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7969:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7994:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7965:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7965:32:12"
															},
															"nodeType": "YulIf",
															"src": "7962:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "8091:302:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8106:45:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8137:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8148:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8133:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8133:17:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8120:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8120:31:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8110:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8198:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8200:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8200:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8200:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8170:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8178:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8167:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8167:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "8164:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8295:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8355:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8366:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8351:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8351:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8375:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8305:45:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8305:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8295:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8403:303:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8418:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8449:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8460:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8445:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8445:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8432:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8432:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8422:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8511:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8513:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8513:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8513:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8483:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8491:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8480:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8480:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "8477:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8608:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8668:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8679:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8664:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8664:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8688:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8618:45:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8618:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8608:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7914:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7925:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7937:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7945:6:12",
														"type": ""
													}
												],
												"src": "7819:894:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8784:262:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8830:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8832:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8832:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8832:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8805:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8814:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8801:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8801:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8826:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8797:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8797:32:12"
															},
															"nodeType": "YulIf",
															"src": "8794:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "8923:116:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8938:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8952:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8942:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8967:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9001:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9012:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8997:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8997:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9021:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "8977:19:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8977:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8967:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8754:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8765:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8777:6:12",
														"type": ""
													}
												],
												"src": "8719:327:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9128:273:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9174:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9176:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9176:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9176:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9149:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9158:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9145:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9145:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9170:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9141:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9141:32:12"
															},
															"nodeType": "YulIf",
															"src": "9138:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "9267:127:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9282:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9296:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9286:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9311:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9356:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9367:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9352:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9352:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9376:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9321:30:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9321:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9311:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9098:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9109:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9121:6:12",
														"type": ""
													}
												],
												"src": "9052:349:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9473:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9519:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9521:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9521:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9521:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9494:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9503:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9490:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9515:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9486:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9486:32:12"
															},
															"nodeType": "YulIf",
															"src": "9483:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "9612:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9627:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9641:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9631:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9656:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9691:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9702:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9687:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9687:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9711:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9666:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9666:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9656:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9443:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9454:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9466:6:12",
														"type": ""
													}
												],
												"src": "9407:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9822:99:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9866:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9874:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9832:33:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9832:46:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9832:46:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9887:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9905:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9910:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9901:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9901:14:12"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "9887:10:12"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9795:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9803:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "9811:10:12",
														"type": ""
													}
												],
												"src": "9742:179:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9992:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10009:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10032:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10014:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10014:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10002:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10002:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10002:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9980:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9987:3:12",
														"type": ""
													}
												],
												"src": "9927:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10205:608:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10215:68:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10277:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10229:47:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10229:54:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10219:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10292:93:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10373:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10378:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10299:73:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10299:86:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10292:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10394:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10459:5:12"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10409:49:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10409:56:12"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "10398:7:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10474:21:12",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "10488:7:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "10478:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10564:224:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10578:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10605:6:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "10599:5:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10599:13:12"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "10582:13:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10625:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "10676:13:12"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "10691:3:12"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "10632:43:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10632:63:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10625:3:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10708:70:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10771:6:12"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "10718:52:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10718:60:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10708:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10526:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10529:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10523:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10523:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10537:18:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10539:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10548:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10551:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10544:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10544:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10539:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10508:14:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10510:10:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10519:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "10514:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10504:284:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10797:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10804:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10797:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10184:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10191:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10200:3:12",
														"type": ""
													}
												],
												"src": "10081:732:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10878:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10895:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10915:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "10900:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10900:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10888:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10888:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10888:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10866:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10873:3:12",
														"type": ""
													}
												],
												"src": "10819:109:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11024:270:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11034:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11080:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11048:31:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11048:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11038:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11095:77:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11160:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11165:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11102:57:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11102:70:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11095:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11207:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11214:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11203:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11203:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11221:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11226:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11181:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11181:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11181:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11242:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11253:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11280:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "11258:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11258:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11249:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11249:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11242:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11005:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11012:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11020:3:12",
														"type": ""
													}
												],
												"src": "10934:360:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11392:272:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11402:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11449:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11416:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11416:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11406:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11464:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11530:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11535:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11471:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11471:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11464:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11577:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11584:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11573:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11573:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11591:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11596:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11551:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11551:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11551:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11612:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11623:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11650:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "11628:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11628:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11619:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11619:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11612:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11373:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11380:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11388:3:12",
														"type": ""
													}
												],
												"src": "11300:364:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11780:267:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11790:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11837:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11804:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11804:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11794:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11852:96:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11936:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11941:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11859:76:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11859:89:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11852:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11983:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11990:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11979:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11979:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11997:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12002:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11957:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11957:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11957:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12018:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12029:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12034:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12025:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12025:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12018:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11761:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11768:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11776:3:12",
														"type": ""
													}
												],
												"src": "11670:377:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12184:738:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12194:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12217:5:12"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "12211:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12211:12:12"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "12198:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12232:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "12272:9:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "12246:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12246:36:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12236:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12291:96:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12375:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12380:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12298:76:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12298:89:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12291:3:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12436:130:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "12489:3:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "12498:9:12"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "12513:4:12",
																											"type": "",
																											"value": "0xff"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "12509:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "12509:9:12"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "12494:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12494:25:12"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "12482:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12482:38:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "12482:38:12"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "12533:23:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "12544:3:12"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "12549:6:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12540:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12540:16:12"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "12533:3:12"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "12429:137:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12434:1:12",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12582:334:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "12627:53:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "12674:5:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "12642:31:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12642:38:12"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "12631:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "12693:10:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12702:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "12697:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "12760:110:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nodeType": "YulIdentifier",
																												"src": "12789:3:12"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "12794:1:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "12785:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "12785:11:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "12804:7:12"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "12798:5:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "12798:14:12"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "12778:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12778:35:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "12778:35:12"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "12830:26:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "12845:7:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "12854:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "12841:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12841:15:12"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "12830:7:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "12727:1:12"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "12730:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "12724:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12724:13:12"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "12738:21:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "12740:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "12749:1:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "12752:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "12745:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12745:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "12740:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "12720:3:12",
																					"statements": []
																				},
																				"src": "12716:154:12"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "12883:23:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "12894:3:12"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "12899:6:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12890:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12890:16:12"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "12883:3:12"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "12575:341:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12580:1:12",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "12407:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12418:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12403:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12403:17:12"
															},
															"nodeType": "YulSwitch",
															"src": "12396:520:12"
														}
													]
												},
												"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12165:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12172:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12180:3:12",
														"type": ""
													}
												],
												"src": "12077:845:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13074:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13084:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13150:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13155:2:12",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13091:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13091:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13084:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13256:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																	"nodeType": "YulIdentifier",
																	"src": "13167:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13167:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13167:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13269:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13280:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13285:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13276:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13276:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13269:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13062:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13070:3:12",
														"type": ""
													}
												],
												"src": "12928:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13446:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13456:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13522:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13527:2:12",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13463:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13463:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13456:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13628:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																	"nodeType": "YulIdentifier",
																	"src": "13539:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13539:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13539:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13641:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13652:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13657:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13648:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13648:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13641:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13434:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13442:3:12",
														"type": ""
													}
												],
												"src": "13300:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13818:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13828:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13894:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13899:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13835:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13835:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13828:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14000:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																	"nodeType": "YulIdentifier",
																	"src": "13911:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13911:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13911:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14013:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14024:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14029:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14020:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14020:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14013:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13806:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13814:3:12",
														"type": ""
													}
												],
												"src": "13672:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14190:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14200:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14266:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14271:2:12",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14207:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14207:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14200:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14372:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																	"nodeType": "YulIdentifier",
																	"src": "14283:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14283:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14283:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14385:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14396:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14401:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14392:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14392:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14385:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14178:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14186:3:12",
														"type": ""
													}
												],
												"src": "14044:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14562:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14572:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14638:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14643:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14579:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14579:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14572:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14744:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																	"nodeType": "YulIdentifier",
																	"src": "14655:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14655:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14655:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14757:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14768:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14773:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14764:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14764:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14757:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14550:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14558:3:12",
														"type": ""
													}
												],
												"src": "14416:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14934:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14944:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15010:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15015:2:12",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14951:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14951:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14944:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15116:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																	"nodeType": "YulIdentifier",
																	"src": "15027:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15027:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15027:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15129:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15140:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15145:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15136:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15136:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15129:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14922:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14930:3:12",
														"type": ""
													}
												],
												"src": "14788:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15306:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15316:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15382:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15387:2:12",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15323:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15323:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15316:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15488:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"nodeType": "YulIdentifier",
																	"src": "15399:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15399:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15399:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15501:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15512:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15517:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15508:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15508:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15501:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15294:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15302:3:12",
														"type": ""
													}
												],
												"src": "15160:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15696:236:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15706:91:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15790:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15795:1:12",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15713:76:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15713:84:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15706:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15895:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
																	"nodeType": "YulIdentifier",
																	"src": "15806:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15806:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15806:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15908:18:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15919:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15924:1:12",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15915:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15915:11:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15908:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15684:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15692:3:12",
														"type": ""
													}
												],
												"src": "15532:400:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16084:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16094:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16160:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16165:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16101:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16101:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16094:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16266:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																	"nodeType": "YulIdentifier",
																	"src": "16177:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16177:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16177:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16279:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16290:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16295:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16286:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16286:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16279:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16072:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16080:3:12",
														"type": ""
													}
												],
												"src": "15938:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16456:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16466:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16532:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16537:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16473:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16473:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16466:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16638:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																	"nodeType": "YulIdentifier",
																	"src": "16549:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16549:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16549:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16651:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16662:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16667:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16658:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16658:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16651:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16444:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16452:3:12",
														"type": ""
													}
												],
												"src": "16310:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16828:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16838:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16904:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16909:2:12",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16845:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16845:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16838:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17010:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																	"nodeType": "YulIdentifier",
																	"src": "16921:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16921:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16921:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17023:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17034:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17039:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17030:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17030:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17023:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16816:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16824:3:12",
														"type": ""
													}
												],
												"src": "16682:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17109:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17126:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17149:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "17131:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17131:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17119:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17119:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17119:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17097:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17104:3:12",
														"type": ""
													}
												],
												"src": "17054:108:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17233:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17250:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17273:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "17255:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17255:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17243:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17243:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17243:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17221:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17228:3:12",
														"type": ""
													}
												],
												"src": "17168:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17574:413:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17585:99:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17671:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17680:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17592:78:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17592:92:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17585:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17694:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17783:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17792:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17701:81:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17701:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17694:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17806:155:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17957:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17813:142:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17813:148:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17806:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17971:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "17978:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17971:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17545:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17551:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17559:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17570:3:12",
														"type": ""
													}
												],
												"src": "17292:695:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18321:725:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18331:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18343:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18354:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18339:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18339:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18331:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18412:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18425:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18436:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18421:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18421:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18368:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18368:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18368:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18493:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18506:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18517:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18502:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18502:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18449:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18449:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18449:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18542:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18553:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18538:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18538:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18562:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18568:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18558:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18558:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18531:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18531:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18531:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18588:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "18690:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18699:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18596:93:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18596:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18588:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18725:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18736:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18721:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18721:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18745:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18751:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18741:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18741:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18714:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18714:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18714:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18771:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "18873:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18882:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18779:93:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18779:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18771:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18908:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18919:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18904:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18904:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18929:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18935:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18925:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18925:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18897:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18897:49:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18897:49:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18955:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "19025:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19034:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18963:61:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18963:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18955:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18261:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "18273:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "18281:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18289:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18297:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18305:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18316:4:12",
														"type": ""
													}
												],
												"src": "17993:1053:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19280:523:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19290:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19302:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19313:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19298:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19298:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19290:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19371:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19384:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19395:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19380:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19380:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19327:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19327:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19327:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19452:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19465:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19476:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19461:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19461:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19408:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19408:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19408:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "19534:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19547:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19558:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19543:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19543:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19490:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19490:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19490:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "19616:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19629:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19640:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19625:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19625:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19572:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19572:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19572:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19665:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19676:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19661:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19661:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19686:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19692:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19682:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19682:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19654:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19654:49:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19654:49:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19712:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "19782:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19791:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19720:61:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19720:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19712:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19220:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "19232:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "19240:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19248:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19256:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19264:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19275:4:12",
														"type": ""
													}
												],
												"src": "19052:751:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19957:225:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19967:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19979:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19990:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19975:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19975:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19967:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20014:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20025:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20010:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20010:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20033:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20039:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20029:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20029:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20003:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20003:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20003:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20059:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20161:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20170:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20067:93:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20067:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20059:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19929:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19941:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19952:4:12",
														"type": ""
													}
												],
												"src": "19809:373:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20414:408:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20424:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20436:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20447:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20432:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20432:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20424:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20471:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20482:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20467:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20467:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20490:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20496:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20486:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20486:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20460:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20460:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20460:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20516:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20618:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20627:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20524:93:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20524:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20516:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20653:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20664:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20649:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20649:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20673:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20679:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20669:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20669:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20642:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20642:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20642:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20699:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20801:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20810:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20707:93:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20707:108:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20699:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20378:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20390:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20398:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20409:4:12",
														"type": ""
													}
												],
												"src": "20188:634:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20920:118:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20930:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20942:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20953:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20938:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20938:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20930:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21004:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21017:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21028:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21013:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21013:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20966:37:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20966:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20966:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20892:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20904:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20915:4:12",
														"type": ""
													}
												],
												"src": "20828:210:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21162:195:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21172:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21184:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21195:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21180:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21180:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21172:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21219:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21230:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21215:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21215:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21238:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21244:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21234:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21234:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21208:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21208:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21208:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21264:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21336:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21345:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21272:63:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21272:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21264:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21134:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21146:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21157:4:12",
														"type": ""
													}
												],
												"src": "21044:313:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21534:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21544:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21556:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21567:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21552:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21552:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21544:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21591:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21602:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21587:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21587:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21610:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21616:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21606:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21606:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21580:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21580:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21580:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21636:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21770:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21644:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21644:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21636:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21514:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21529:4:12",
														"type": ""
													}
												],
												"src": "21363:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21959:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21969:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21981:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21992:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21977:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21977:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21969:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22016:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22027:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22012:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22012:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22035:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22041:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22031:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22031:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22005:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22005:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22005:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22061:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22195:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22069:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22069:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22061:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21939:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21954:4:12",
														"type": ""
													}
												],
												"src": "21788:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22384:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22394:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22406:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22417:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22402:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22402:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22394:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22441:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22452:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22437:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22437:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22460:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22466:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22456:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22456:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22430:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22430:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22430:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22486:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22620:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22494:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22494:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22486:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22364:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22379:4:12",
														"type": ""
													}
												],
												"src": "22213:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22809:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22819:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22831:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22842:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22827:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22827:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22819:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22866:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22877:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22862:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22862:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22885:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22891:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22881:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22881:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22855:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22855:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22855:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22911:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23045:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22919:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22919:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22911:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22789:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22804:4:12",
														"type": ""
													}
												],
												"src": "22638:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23234:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23244:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23256:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23267:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23252:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23252:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23244:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23291:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23302:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23287:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23287:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23310:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23316:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23306:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23306:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23280:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23280:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23280:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23336:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23470:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23344:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23344:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23336:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23214:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23229:4:12",
														"type": ""
													}
												],
												"src": "23063:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23659:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23669:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23681:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23692:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23677:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23677:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23669:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23716:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23727:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23712:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23712:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23735:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23741:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23731:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23731:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23705:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23705:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23705:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23761:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23895:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23769:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23769:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23761:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23639:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23654:4:12",
														"type": ""
													}
												],
												"src": "23488:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24084:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24094:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24106:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24117:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24102:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24102:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24094:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24141:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24152:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24137:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24137:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24160:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24166:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24156:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24156:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24130:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24130:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24130:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24186:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24320:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24194:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24194:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24186:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24064:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24079:4:12",
														"type": ""
													}
												],
												"src": "23913:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24509:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24519:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24531:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24542:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24527:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24527:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24519:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24566:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24577:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24562:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24562:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24585:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24591:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24581:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24581:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24555:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24555:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24555:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24611:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24745:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24619:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24619:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24611:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24489:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24504:4:12",
														"type": ""
													}
												],
												"src": "24338:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24934:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24944:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24956:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24967:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24952:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24952:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24944:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24991:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25002:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24987:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24987:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25010:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25016:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25006:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25006:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24980:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24980:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24980:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25036:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25170:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25044:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25044:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25036:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24914:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24929:4:12",
														"type": ""
													}
												],
												"src": "24763:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25359:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25369:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25381:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25392:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25377:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25377:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25369:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25416:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25427:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25412:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25412:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25435:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25441:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25431:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25431:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25405:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25405:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25405:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25461:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25595:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25469:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25469:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25461:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25339:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25354:4:12",
														"type": ""
													}
												],
												"src": "25188:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25711:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25721:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25733:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25744:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25729:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25729:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25721:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25801:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25814:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25825:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25810:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25810:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25757:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25757:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25757:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25683:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25695:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25706:4:12",
														"type": ""
													}
												],
												"src": "25613:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25967:206:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25977:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25989:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26000:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25985:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25985:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25977:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26057:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26070:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26081:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26066:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26066:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26013:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26013:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26013:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26138:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26151:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26162:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26147:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26147:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26094:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26094:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26094:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25931:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25943:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25951:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25962:4:12",
														"type": ""
													}
												],
												"src": "25841:332:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26220:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26230:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "26240:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26240:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "26230:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "26289:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "26297:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "26269:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26269:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26269:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "26204:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26213:6:12",
														"type": ""
													}
												],
												"src": "26179:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26354:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26364:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26380:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26374:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26374:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "26364:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26347:6:12",
														"type": ""
													}
												],
												"src": "26314:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26477:229:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26582:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "26584:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26584:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26584:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26554:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26562:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "26551:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26551:30:12"
															},
															"nodeType": "YulIf",
															"src": "26548:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26614:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26626:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26634:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "26622:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26622:17:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "26614:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26676:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "26688:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26694:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26684:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26684:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "26676:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26461:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "26472:4:12",
														"type": ""
													}
												],
												"src": "26395:311:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26794:229:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26899:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "26901:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26901:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26901:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26871:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26879:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "26868:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26868:30:12"
															},
															"nodeType": "YulIf",
															"src": "26865:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26931:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26943:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26951:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "26939:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26939:17:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "26931:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26993:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "27005:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27011:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27001:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27001:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "26993:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26778:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "26789:4:12",
														"type": ""
													}
												],
												"src": "26712:311:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27095:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27200:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "27202:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27202:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27202:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27172:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27180:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "27169:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27169:30:12"
															},
															"nodeType": "YulIf",
															"src": "27166:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27232:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27262:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "27240:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27240:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "27232:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27306:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "27318:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27324:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27314:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27314:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "27306:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27079:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "27090:4:12",
														"type": ""
													}
												],
												"src": "27029:307:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27414:60:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27424:11:12",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "27432:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "27424:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27445:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "27457:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27462:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27453:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27453:14:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "27445:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "27401:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "27409:4:12",
														"type": ""
													}
												],
												"src": "27342:132:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27534:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27544:11:12",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "27552:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "27544:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27572:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "27575:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27565:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27565:14:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27565:14:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27588:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27606:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27609:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "27596:9:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27596:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "27588:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "27521:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "27529:4:12",
														"type": ""
													}
												],
												"src": "27480:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27701:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27712:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27728:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27722:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27722:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "27712:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27684:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27694:6:12",
														"type": ""
													}
												],
												"src": "27627:114:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27805:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27816:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27832:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27826:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27826:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "27816:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27788:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27798:6:12",
														"type": ""
													}
												],
												"src": "27747:98:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27910:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27921:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27937:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27931:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27931:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "27921:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27893:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27903:6:12",
														"type": ""
													}
												],
												"src": "27851:99:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28031:38:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28041:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "28053:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28058:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28049:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28049:14:12"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "28041:4:12"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "28018:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "28026:4:12",
														"type": ""
													}
												],
												"src": "27956:113:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28186:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28203:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28208:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28196:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28196:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28196:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28224:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28243:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28248:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28239:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28239:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "28224:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28158:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "28163:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "28174:11:12",
														"type": ""
													}
												],
												"src": "28075:184:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28360:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28377:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28382:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28370:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28370:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28370:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28398:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28417:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28422:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28413:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28413:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "28398:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28332:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "28337:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "28348:11:12",
														"type": ""
													}
												],
												"src": "28265:168:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28535:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28552:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28557:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28545:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28545:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28545:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28573:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28592:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28597:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28588:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28588:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "28573:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28507:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "28512:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "28523:11:12",
														"type": ""
													}
												],
												"src": "28439:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28728:34:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28738:18:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "28753:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "28738:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28700:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "28705:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "28716:11:12",
														"type": ""
													}
												],
												"src": "28614:148:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28812:261:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28822:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28845:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "28827:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28827:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "28822:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28856:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "28879:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "28861:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28861:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "28856:1:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29019:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "29021:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29021:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29021:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28940:1:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28947:66:12",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "29015:1:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28943:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28943:74:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "28937:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28937:81:12"
															},
															"nodeType": "YulIf",
															"src": "28934:107:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29051:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "29062:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "29065:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29058:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29058:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "29051:3:12"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "28799:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "28802:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "28808:3:12",
														"type": ""
													}
												],
												"src": "28768:305:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29121:143:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29131:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "29154:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "29136:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29136:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "29131:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29165:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "29188:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "29170:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29170:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "29165:1:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29212:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "29214:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29214:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29214:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "29209:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "29202:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29202:9:12"
															},
															"nodeType": "YulIf",
															"src": "29199:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29244:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "29253:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "29256:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "29249:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29249:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "29244:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "29110:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "29113:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "29119:1:12",
														"type": ""
													}
												],
												"src": "29079:185:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29315:146:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29325:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "29348:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "29330:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29330:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "29325:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29359:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "29382:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "29364:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29364:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "29359:1:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29406:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "29408:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29408:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29408:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "29400:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "29403:1:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "29397:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29397:8:12"
															},
															"nodeType": "YulIf",
															"src": "29394:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29438:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "29450:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "29453:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "29446:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29446:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "29438:4:12"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "29301:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "29304:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "29310:4:12",
														"type": ""
													}
												],
												"src": "29270:191:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29512:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29522:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29551:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "29533:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29533:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "29522:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29494:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "29504:7:12",
														"type": ""
													}
												],
												"src": "29467:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29611:48:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29621:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "29646:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "29639:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29639:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "29632:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29632:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "29621:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29593:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "29603:7:12",
														"type": ""
													}
												],
												"src": "29569:90:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29709:105:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29719:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29734:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29741:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "29730:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29730:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "29719:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29691:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "29701:7:12",
														"type": ""
													}
												],
												"src": "29665:149:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29865:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29875:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29890:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29897:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "29886:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29886:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "29875:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29847:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "29857:7:12",
														"type": ""
													}
												],
												"src": "29820:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29997:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30007:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "30018:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "30007:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29979:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "29989:7:12",
														"type": ""
													}
												],
												"src": "29952:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30086:103:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "30109:3:12"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "30114:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30119:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "30096:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "30096:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30096:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "30167:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "30172:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30163:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30163:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30181:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30156:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "30156:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30156:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "30068:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "30073:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "30078:6:12",
														"type": ""
													}
												],
												"src": "30035:154:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30244:258:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30254:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "30263:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "30258:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30323:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "30348:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "30353:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "30344:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30344:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "30367:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "30372:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "30363:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "30363:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "30357:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30357:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "30337:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30337:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30337:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "30284:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30287:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "30281:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "30281:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "30295:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "30297:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "30306:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30309:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "30302:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30302:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "30297:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "30277:3:12",
																"statements": []
															},
															"src": "30273:113:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30420:76:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "30470:3:12"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "30475:6:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "30466:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30466:16:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30484:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "30459:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30459:27:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30459:27:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "30401:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30404:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "30398:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "30398:13:12"
															},
															"nodeType": "YulIf",
															"src": "30395:101:12"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "30226:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "30231:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "30236:6:12",
														"type": ""
													}
												],
												"src": "30195:307:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30559:269:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30569:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30583:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30589:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "30579:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "30579:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "30569:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30600:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30630:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30636:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "30626:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "30626:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "30604:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30677:51:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "30691:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "30705:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30713:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "30701:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30701:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "30691:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "30657:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "30650:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "30650:26:12"
															},
															"nodeType": "YulIf",
															"src": "30647:81:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30780:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "30794:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30794:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30794:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "30744:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "30767:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30775:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "30764:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30764:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "30741:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "30741:38:12"
															},
															"nodeType": "YulIf",
															"src": "30738:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "30543:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "30552:6:12",
														"type": ""
													}
												],
												"src": "30508:320:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30877:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30887:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "30909:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "30939:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "30917:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30917:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30905:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "30905:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "30891:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31056:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "31058:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31058:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31058:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "30999:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31011:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "30996:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30996:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "31035:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31047:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "31032:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31032:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "30993:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "30993:62:12"
															},
															"nodeType": "YulIf",
															"src": "30990:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31094:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "31098:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31087:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "31087:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31087:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30863:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "30871:4:12",
														"type": ""
													}
												],
												"src": "30834:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31164:190:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31174:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "31201:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "31183:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "31183:24:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "31174:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31297:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "31299:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31299:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31299:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "31222:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31229:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "31219:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "31219:77:12"
															},
															"nodeType": "YulIf",
															"src": "31216:103:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31328:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "31339:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31346:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31335:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "31335:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "31328:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31150:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "31160:3:12",
														"type": ""
													}
												],
												"src": "31121:233:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31394:142:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31404:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "31427:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "31409:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "31409:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "31404:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "31438:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "31461:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "31443:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "31443:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "31438:1:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31485:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "31487:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31487:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31487:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "31482:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "31475:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "31475:9:12"
															},
															"nodeType": "YulIf",
															"src": "31472:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31516:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "31525:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "31528:1:12"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "31521:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "31521:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "31516:1:12"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "31383:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "31386:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "31392:1:12",
														"type": ""
													}
												],
												"src": "31360:176:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31570:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31587:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31590:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31580:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "31580:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31580:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31684:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31687:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31677:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "31677:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31677:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31708:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31711:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "31701:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "31701:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31701:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "31542:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31756:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31773:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31776:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31766:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "31766:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31766:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31870:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31873:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31863:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "31863:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31863:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31894:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31897:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "31887:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "31887:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31887:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "31728:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31942:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31959:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31962:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31952:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "31952:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31952:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32056:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32059:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32049:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "32049:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32049:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32080:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32083:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "32073:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "32073:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32073:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "31914:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32128:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32145:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32148:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32138:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "32138:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32138:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32242:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32245:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32235:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "32235:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32235:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32266:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32269:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "32259:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "32259:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32259:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "32100:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32314:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32331:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32334:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32324:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "32324:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32324:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32428:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32431:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32421:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "32421:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32421:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32452:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32455:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "32445:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "32445:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32445:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "32286:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32511:144:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32548:101:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32577:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32580:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32583:1:12",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "32562:14:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32562:23:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32562:23:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "32598:41:12",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "32636:1:12",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "32630:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "32630:8:12"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_224_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "32605:24:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32605:34:12"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "32598:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "32527:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32527:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32545:1:12",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "32524:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "32524:23:12"
															},
															"nodeType": "YulIf",
															"src": "32521:128:12"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "32507:3:12",
														"type": ""
													}
												],
												"src": "32472:183:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32750:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32767:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32770:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "32760:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "32760:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32760:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "32661:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32873:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32890:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32893:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "32883:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "32883:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32883:12:12"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "32784:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32996:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33013:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33016:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "33006:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "33006:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33006:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "32907:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33119:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33136:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33139:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "33129:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "33129:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33129:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "33030:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33242:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33259:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33262:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "33252:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "33252:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33252:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "33153:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33324:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33334:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "33352:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33359:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33348:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33348:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33368:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "33364:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33364:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "33344:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "33344:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "33334:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "33307:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "33317:6:12",
														"type": ""
													}
												],
												"src": "33276:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33437:53:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33447:36:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33472:3:12",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "33477:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "33468:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "33468:15:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "33447:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_224_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "33418:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "33428:8:12",
														"type": ""
													}
												],
												"src": "33384:106:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33602:133:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "33624:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33632:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33620:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33620:14:12"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "33636:34:12",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33613:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "33613:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33613:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "33692:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33700:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33688:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33688:15:12"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "33705:22:12",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33681:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "33681:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33681:47:12"
														}
													]
												},
												"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "33594:6:12",
														"type": ""
													}
												],
												"src": "33496:239:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33847:121:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "33869:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33877:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33865:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33865:14:12"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "33881:34:12",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33858:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "33858:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33858:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "33937:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33945:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33933:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33933:15:12"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "33950:10:12",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33926:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "33926:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33926:35:12"
														}
													]
												},
												"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "33839:6:12",
														"type": ""
													}
												],
												"src": "33741:227:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34080:122:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "34102:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34110:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34098:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34098:14:12"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "34114:34:12",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34091:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "34091:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34091:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "34170:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34178:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34166:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34166:15:12"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "34183:11:12",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34159:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "34159:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34159:36:12"
														}
													]
												},
												"name": "store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "34072:6:12",
														"type": ""
													}
												],
												"src": "33974:228:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34314:123:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "34336:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34344:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34332:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34332:14:12"
																	},
																	{
																		"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "34348:34:12",
																		"type": "",
																		"value": "ERC1155: address zero is not a v"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34325:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "34325:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34325:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "34404:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34412:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34400:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34400:15:12"
																	},
																	{
																		"hexValue": "616c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "34417:12:12",
																		"type": "",
																		"value": "alid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34393:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "34393:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34393:37:12"
														}
													]
												},
												"name": "store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "34306:6:12",
														"type": ""
													}
												],
												"src": "34208:229:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34549:118:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "34571:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34579:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34567:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34567:14:12"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "34583:34:12",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34560:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "34560:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34560:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "34639:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34647:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34635:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34635:15:12"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "34652:7:12",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34628:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "34628:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34628:32:12"
														}
													]
												},
												"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "34541:6:12",
														"type": ""
													}
												],
												"src": "34443:224:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34779:131:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "34801:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34809:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34797:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34797:14:12"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "34813:34:12",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34790:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "34790:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34790:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "34869:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34877:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34865:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34865:15:12"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "34882:20:12",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34858:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "34858:45:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34858:45:12"
														}
													]
												},
												"name": "store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "34771:6:12",
														"type": ""
													}
												],
												"src": "34673:237:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35022:123:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "35044:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "35052:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "35040:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "35040:14:12"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "35056:34:12",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "35033:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "35033:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "35033:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "35112:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "35120:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "35108:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "35108:15:12"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "35125:12:12",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "35101:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "35101:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "35101:37:12"
														}
													]
												},
												"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "35014:6:12",
														"type": ""
													}
												],
												"src": "34916:229:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35257:49:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "35279:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "35287:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "35275:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "35275:14:12"
																	},
																	{
																		"hexValue": "2e6a736f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "35291:7:12",
																		"type": "",
																		"value": ".json"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "35268:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "35268:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "35268:31:12"
														}
													]
												},
												"name": "store_literal_in_memory_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "35249:6:12",
														"type": ""
													}
												],
												"src": "35151:155:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35418:122:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "35440:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "35448:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "35436:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "35436:14:12"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "35452:34:12",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "35429:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "35429:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "35429:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "35508:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "35516:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "35504:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "35504:15:12"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "35521:11:12",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "35497:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "35497:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "35497:36:12"
														}
													]
												},
												"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "35410:6:12",
														"type": ""
													}
												],
												"src": "35312:228:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35652:122:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "35674:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "35682:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "35670:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "35670:14:12"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "35686:34:12",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "35663:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "35663:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "35663:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "35742:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "35750:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "35738:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "35738:15:12"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "35755:11:12",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "35731:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "35731:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "35731:36:12"
														}
													]
												},
												"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "35644:6:12",
														"type": ""
													}
												],
												"src": "35546:228:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35886:121:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "35908:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "35916:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "35904:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "35904:14:12"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "35920:34:12",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "35897:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "35897:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "35897:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "35976:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "35984:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "35972:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "35972:15:12"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "35989:10:12",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "35965:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "35965:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "35965:35:12"
														}
													]
												},
												"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "35878:6:12",
														"type": ""
													}
												],
												"src": "35780:227:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "36056:668:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "36096:9:12",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "36098:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "36072:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "36072:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "36090:4:12",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "36069:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "36069:26:12"
															},
															"nodeType": "YulIf",
															"src": "36066:39:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "36115:32:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "36127:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "36127:20:12"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "36119:4:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "36171:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "36177:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "36184:14:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "36184:16:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "36202:1:12",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "36180:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "36180:24:12"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "36156:14:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "36156:49:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "36156:49:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "36215:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "36235:4:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "36229:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "36229:11:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "36219:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "36366:29:12",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "36380:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "36271:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "36279:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "36268:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "36268:30:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "36319:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "36327:4:12",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "36315:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "36315:17:12"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "36334:14:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "36334:16:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "36312:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "36312:39:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "36252:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "36252:113:12"
															},
															"nodeType": "YulIf",
															"src": "36249:146:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "36405:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "36420:4:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "36426:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "36416:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "36416:17:12"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "36409:3:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "36442:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "36462:3:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "36456:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "36456:10:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "36446:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "36509:9:12",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "36511:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "36481:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "36489:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "36478:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "36478:30:12"
															},
															"nodeType": "YulIf",
															"src": "36475:43:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "36528:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msg",
																				"nodeType": "YulIdentifier",
																				"src": "36547:3:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "36552:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "36543:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "36543:14:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "36559:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "36539:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "36539:27:12"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "36532:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "36623:9:12",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "36625:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "36581:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "36590:4:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "36600:14:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "36600:16:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "36618:1:12",
																						"type": "",
																						"value": "4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "36596:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "36596:24:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "36586:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "36586:35:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "36578:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "36578:44:12"
															},
															"nodeType": "YulIf",
															"src": "36575:57:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "36662:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "36672:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "36684:4:12",
																						"type": "",
																						"value": "0x20"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "36690:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "36680:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "36680:17:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "36668:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "36668:30:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "36642:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "36642:57:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "36642:57:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "36708:10:12",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "36715:3:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "36708:3:12"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "36052:3:12",
														"type": ""
													}
												],
												"src": "36013:711:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "36773:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "36830:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "36839:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "36842:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "36832:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "36832:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "36832:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "36796:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "36821:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "36803:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "36803:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "36793:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "36793:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "36786:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "36786:43:12"
															},
															"nodeType": "YulIf",
															"src": "36783:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "36766:5:12",
														"type": ""
													}
												],
												"src": "36730:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "36898:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "36952:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "36961:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "36964:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "36954:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "36954:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "36954:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "36921:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "36943:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "36928:14:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "36928:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "36918:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "36918:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "36911:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "36911:40:12"
															},
															"nodeType": "YulIf",
															"src": "36908:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "36891:5:12",
														"type": ""
													}
												],
												"src": "36858:116:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "37022:78:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "37078:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "37087:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "37090:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "37080:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "37080:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "37080:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "37045:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "37069:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "37052:16:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "37052:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "37042:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "37042:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "37035:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "37035:42:12"
															},
															"nodeType": "YulIf",
															"src": "37032:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "37015:5:12",
														"type": ""
													}
												],
												"src": "36980:120:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "37149:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "37206:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "37215:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "37218:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "37208:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "37208:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "37208:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "37172:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "37197:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "37179:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "37179:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "37169:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "37169:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "37162:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "37162:43:12"
															},
															"nodeType": "YulIf",
															"src": "37159:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "37142:5:12",
														"type": ""
													}
												],
												"src": "37106:122:12"
											}
										]
									},
									"contents": "{\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, length)\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 5)\n        store_literal_in_memory_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972(pos)\n        end := add(pos, 5)\n    }\n\n    function abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to non ERC1155\")\n\n        mstore(add(memPtr, 32), \"Receiver implementer\")\n\n    }\n\n    function store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ERC1155Receiver rejecte\")\n\n        mstore(add(memPtr, 32), \"d tokens\")\n\n    }\n\n    function store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: caller is not owner nor\")\n\n        mstore(add(memPtr, 32), \" approved\")\n\n    }\n\n    function store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: address zero is not a v\")\n\n        mstore(add(memPtr, 32), \"alid owner\")\n\n    }\n\n    function store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer caller is not \")\n\n        mstore(add(memPtr, 32), \"owner nor approved\")\n\n    }\n\n    function store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r transfer\")\n\n    }\n\n    function store_literal_in_memory_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972(memPtr) {\n\n        mstore(add(memPtr, 0), \".json\")\n\n    }\n\n    function store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: setting approval status\")\n\n        mstore(add(memPtr, 32), \" for self\")\n\n    }\n\n    function store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: accounts and ids length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ids and amounts length \")\n\n        mstore(add(memPtr, 32), \"mismatch\")\n\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610138578063a22cb46514610168578063e985e9c514610184578063f242432a146101b457610087565b8062fdd58e1461008c57806301ffc9a7146100bc5780630e89341c146100ec5780632eb2c2d61461011c575b600080fd5b6100a660048036038101906100a19190611828565b6101d0565b6040516100b39190611f83565b60405180910390f35b6100d660048036038101906100d191906118e0565b610299565b6040516100e39190611e06565b60405180910390f35b6101066004803603810190610101919061193a565b61037b565b6040516101139190611e21565b60405180910390f35b61013660048036038101906101319190611682565b6103af565b005b610152600480360381019061014d9190611868565b610450565b60405161015f9190611dad565b60405180910390f35b610182600480360381019061017d91906117e8565b610569565b005b61019e60048036038101906101999190611642565b61057f565b6040516101ab9190611e06565b60405180910390f35b6101ce60048036038101906101c99190611751565b610613565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023890611ea3565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036457507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103745750610373826106b4565b5b9050919050565b606060026103888361071e565b604051602001610399929190611cbc565b6040516020818303038152906040529050919050565b6103b761087f565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806103fd57506103fc856103f761087f565b61057f565b5b61043c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043390611ee3565b60405180910390fd5b6104498585858585610887565b5050505050565b60608151835114610496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048d90611f43565b60405180910390fd5b6000835167ffffffffffffffff8111156104b3576104b2612410565b5b6040519080825280602002602001820160405280156104e15781602001602082028036833780820191505090505b50905060005b845181101561055e5761052e858281518110610506576105056123e1565b5b6020026020010151858381518110610521576105206123e1565b5b60200260200101516101d0565b828281518110610541576105406123e1565b5b60200260200101818152505080610557906122da565b90506104e7565b508091505092915050565b61057b61057461087f565b8383610ba9565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61061b61087f565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061066157506106608561065b61087f565b61057f565b5b6106a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069790611e83565b60405180910390fd5b6106ad8585858585610d16565b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60606000821415610766576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061087a565b600082905060005b60008214610798578080610781906122da565b915050600a82610791919061215c565b915061076e565b60008167ffffffffffffffff8111156107b4576107b3612410565b5b6040519080825280601f01601f1916602001820160405280156107e65781602001600182028036833780820191505090505b5090505b60008514610873576001826107ff919061218d565b9150600a8561080e9190612323565b603061081a9190612106565b60f81b8183815181106108305761082f6123e1565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561086c919061215c565b94506107ea565b8093505050505b919050565b600033905090565b81518351146108cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c290611f63565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561093b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093290611ec3565b60405180910390fd5b600061094561087f565b9050610955818787878787610fb2565b60005b8451811015610b06576000858281518110610976576109756123e1565b5b602002602001015190506000858381518110610995576109946123e1565b5b60200260200101519050600080600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2d90611f03565b60405180910390fd5b81810360008085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610aeb9190612106565b9250508190555050505080610aff906122da565b9050610958565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610b7d929190611dcf565b60405180910390a4610b93818787878787610fba565b610ba1818787878787610fc2565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0f90611f23565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610d099190611e06565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610d86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7d90611ec3565b60405180910390fd5b6000610d9061087f565b90506000610d9d856111a9565b90506000610daa856111a9565b9050610dba838989858589610fb2565b600080600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905085811015610e51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4890611f03565b60405180910390fd5b85810360008089815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508560008089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f069190612106565b925050819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a604051610f83929190611f9e565b60405180910390a4610f99848a8a86868a610fba565b610fa7848a8a8a8a8a611223565b505050505050505050565b505050505050565b505050505050565b610fe18473ffffffffffffffffffffffffffffffffffffffff1661140a565b156111a1578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611027959493929190611ceb565b602060405180830381600087803b15801561104157600080fd5b505af192505050801561107257506040513d601f19601f8201168201806040525081019061106f919061190d565b60015b6111185761107e61243f565b806308c379a014156110db57506110936127d7565b8061109e57506110dd565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d29190611e21565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110f90611e43565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461119f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119690611e63565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff8111156111c8576111c7612410565b5b6040519080825280602002602001820160405280156111f65781602001602082028036833780820191505090505b509050828160008151811061120e5761120d6123e1565b5b60200260200101818152505080915050919050565b6112428473ffffffffffffffffffffffffffffffffffffffff1661140a565b15611402578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611288959493929190611d53565b602060405180830381600087803b1580156112a257600080fd5b505af19250505080156112d357506040513d601f19601f820116820180604052508101906112d0919061190d565b60015b611379576112df61243f565b806308c379a0141561133c57506112f46127d7565b806112ff575061133e565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113339190611e21565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137090611e43565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611400576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f790611e63565b60405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600061144061143b84611fec565b611fc7565b9050808382526020820190508285602086028201111561146357611462612466565b5b60005b858110156114935781611479888261154f565b845260208401935060208301925050600181019050611466565b5050509392505050565b60006114b06114ab84612018565b611fc7565b905080838252602082019050828560208602820111156114d3576114d2612466565b5b60005b8581101561150357816114e9888261162d565b8452602084019350602083019250506001810190506114d6565b5050509392505050565b600061152061151b84612044565b611fc7565b90508281526020810184848401111561153c5761153b61246b565b5b611547848285612235565b509392505050565b60008135905061155e8161286d565b92915050565b600082601f83011261157957611578612461565b5b813561158984826020860161142d565b91505092915050565b600082601f8301126115a7576115a6612461565b5b81356115b784826020860161149d565b91505092915050565b6000813590506115cf81612884565b92915050565b6000813590506115e48161289b565b92915050565b6000815190506115f98161289b565b92915050565b600082601f83011261161457611613612461565b5b813561162484826020860161150d565b91505092915050565b60008135905061163c816128b2565b92915050565b6000806040838503121561165957611658612475565b5b60006116678582860161154f565b92505060206116788582860161154f565b9150509250929050565b600080600080600060a0868803121561169e5761169d612475565b5b60006116ac8882890161154f565b95505060206116bd8882890161154f565b945050604086013567ffffffffffffffff8111156116de576116dd612470565b5b6116ea88828901611592565b935050606086013567ffffffffffffffff81111561170b5761170a612470565b5b61171788828901611592565b925050608086013567ffffffffffffffff81111561173857611737612470565b5b611744888289016115ff565b9150509295509295909350565b600080600080600060a0868803121561176d5761176c612475565b5b600061177b8882890161154f565b955050602061178c8882890161154f565b945050604061179d8882890161162d565b93505060606117ae8882890161162d565b925050608086013567ffffffffffffffff8111156117cf576117ce612470565b5b6117db888289016115ff565b9150509295509295909350565b600080604083850312156117ff576117fe612475565b5b600061180d8582860161154f565b925050602061181e858286016115c0565b9150509250929050565b6000806040838503121561183f5761183e612475565b5b600061184d8582860161154f565b925050602061185e8582860161162d565b9150509250929050565b6000806040838503121561187f5761187e612475565b5b600083013567ffffffffffffffff81111561189d5761189c612470565b5b6118a985828601611564565b925050602083013567ffffffffffffffff8111156118ca576118c9612470565b5b6118d685828601611592565b9150509250929050565b6000602082840312156118f6576118f5612475565b5b6000611904848285016115d5565b91505092915050565b60006020828403121561192357611922612475565b5b6000611931848285016115ea565b91505092915050565b6000602082840312156119505761194f612475565b5b600061195e8482850161162d565b91505092915050565b60006119738383611c9e565b60208301905092915050565b611988816121c1565b82525050565b60006119998261209a565b6119a381856120c8565b93506119ae83612075565b8060005b838110156119df5781516119c68882611967565b97506119d1836120bb565b9250506001810190506119b2565b5085935050505092915050565b6119f5816121d3565b82525050565b6000611a06826120a5565b611a1081856120d9565b9350611a20818560208601612244565b611a298161247a565b840191505092915050565b6000611a3f826120b0565b611a4981856120ea565b9350611a59818560208601612244565b611a628161247a565b840191505092915050565b6000611a78826120b0565b611a8281856120fb565b9350611a92818560208601612244565b80840191505092915050565b60008154611aab81612277565b611ab581866120fb565b94506001821660008114611ad05760018114611ae157611b14565b60ff19831686528186019350611b14565b611aea85612085565b60005b83811015611b0c57815481890152600182019150602081019050611aed565b838801955050505b50505092915050565b6000611b2a6034836120ea565b9150611b3582612498565b604082019050919050565b6000611b4d6028836120ea565b9150611b58826124e7565b604082019050919050565b6000611b706029836120ea565b9150611b7b82612536565b604082019050919050565b6000611b93602a836120ea565b9150611b9e82612585565b604082019050919050565b6000611bb66025836120ea565b9150611bc1826125d4565b604082019050919050565b6000611bd96032836120ea565b9150611be482612623565b604082019050919050565b6000611bfc602a836120ea565b9150611c0782612672565b604082019050919050565b6000611c1f6005836120fb565b9150611c2a826126c1565b600582019050919050565b6000611c426029836120ea565b9150611c4d826126ea565b604082019050919050565b6000611c656029836120ea565b9150611c7082612739565b604082019050919050565b6000611c886028836120ea565b9150611c9382612788565b604082019050919050565b611ca78161222b565b82525050565b611cb68161222b565b82525050565b6000611cc88285611a9e565b9150611cd48284611a6d565b9150611cdf82611c12565b91508190509392505050565b600060a082019050611d00600083018861197f565b611d0d602083018761197f565b8181036040830152611d1f818661198e565b90508181036060830152611d33818561198e565b90508181036080830152611d4781846119fb565b90509695505050505050565b600060a082019050611d68600083018861197f565b611d75602083018761197f565b611d826040830186611cad565b611d8f6060830185611cad565b8181036080830152611da181846119fb565b90509695505050505050565b60006020820190508181036000830152611dc7818461198e565b905092915050565b60006040820190508181036000830152611de9818561198e565b90508181036020830152611dfd818461198e565b90509392505050565b6000602082019050611e1b60008301846119ec565b92915050565b60006020820190508181036000830152611e3b8184611a34565b905092915050565b60006020820190508181036000830152611e5c81611b1d565b9050919050565b60006020820190508181036000830152611e7c81611b40565b9050919050565b60006020820190508181036000830152611e9c81611b63565b9050919050565b60006020820190508181036000830152611ebc81611b86565b9050919050565b60006020820190508181036000830152611edc81611ba9565b9050919050565b60006020820190508181036000830152611efc81611bcc565b9050919050565b60006020820190508181036000830152611f1c81611bef565b9050919050565b60006020820190508181036000830152611f3c81611c35565b9050919050565b60006020820190508181036000830152611f5c81611c58565b9050919050565b60006020820190508181036000830152611f7c81611c7b565b9050919050565b6000602082019050611f986000830184611cad565b92915050565b6000604082019050611fb36000830185611cad565b611fc06020830184611cad565b9392505050565b6000611fd1611fe2565b9050611fdd82826122a9565b919050565b6000604051905090565b600067ffffffffffffffff82111561200757612006612410565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561203357612032612410565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561205f5761205e612410565b5b6120688261247a565b9050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006121118261222b565b915061211c8361222b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561215157612150612354565b5b828201905092915050565b60006121678261222b565b91506121728361222b565b92508261218257612181612383565b5b828204905092915050565b60006121988261222b565b91506121a38361222b565b9250828210156121b6576121b5612354565b5b828203905092915050565b60006121cc8261220b565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015612262578082015181840152602081019050612247565b83811115612271576000848401525b50505050565b6000600282049050600182168061228f57607f821691505b602082108114156122a3576122a26123b2565b5b50919050565b6122b28261247a565b810181811067ffffffffffffffff821117156122d1576122d0612410565b5b80604052505050565b60006122e58261222b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561231857612317612354565b5b600182019050919050565b600061232e8261222b565b91506123398361222b565b92508261234957612348612383565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d111561245e5760046000803e61245b60005161248b565b90505b90565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160e01c9050919050565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260008201527f20617070726f7665640000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2061646472657373207a65726f206973206e6f742061207660008201527f616c6964206f776e657200000000000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000600082015250565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b600060443d10156127e75761286a565b6127ef611fe2565b60043d036004823e80513d602482011167ffffffffffffffff8211171561281757505061286a565b808201805167ffffffffffffffff811115612835575050505061286a565b80602083010160043d03850181111561285257505050505061286a565b612861826020018501866122a9565b82955050505050505b90565b612876816121c1565b811461288157600080fd5b50565b61288d816121d3565b811461289857600080fd5b50565b6128a4816121df565b81146128af57600080fd5b50565b6128bb8161222b565b81146128c657600080fd5b5056fea2646970667358221220f30735d6d6e548d47e8ac77a714b032de212100e2cdc9b99f235c6840f1c669d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x1F83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x1E06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x193A JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1E21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1682 JUMP JUMPDEST PUSH2 0x3AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1868 JUMP JUMPDEST PUSH2 0x450 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1DAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH2 0x569 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1E06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x613 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x1EA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x364 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x374 JUMPI POP PUSH2 0x373 DUP3 PUSH2 0x6B4 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH2 0x388 DUP4 PUSH2 0x71E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x399 SWAP3 SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B7 PUSH2 0x87F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x3FD JUMPI POP PUSH2 0x3FC DUP6 PUSH2 0x3F7 PUSH2 0x87F JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST JUMPDEST PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x433 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x449 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x887 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x496 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48D SWAP1 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B3 JUMPI PUSH2 0x4B2 PUSH2 0x2410 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4E1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x55E JUMPI PUSH2 0x52E DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x506 JUMPI PUSH2 0x505 PUSH2 0x23E1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x521 JUMPI PUSH2 0x520 PUSH2 0x23E1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x541 JUMPI PUSH2 0x540 PUSH2 0x23E1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x557 SWAP1 PUSH2 0x22DA JUMP JUMPDEST SWAP1 POP PUSH2 0x4E7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x57B PUSH2 0x574 PUSH2 0x87F JUMP JUMPDEST DUP4 DUP4 PUSH2 0xBA9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x61B PUSH2 0x87F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x661 JUMPI POP PUSH2 0x660 DUP6 PUSH2 0x65B PUSH2 0x87F JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST JUMPDEST PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x1E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AD DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xD16 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x766 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x87A JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x798 JUMPI DUP1 DUP1 PUSH2 0x781 SWAP1 PUSH2 0x22DA JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x791 SWAP2 SWAP1 PUSH2 0x215C JUMP JUMPDEST SWAP2 POP PUSH2 0x76E JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7B4 JUMPI PUSH2 0x7B3 PUSH2 0x2410 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7E6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x873 JUMPI PUSH1 0x1 DUP3 PUSH2 0x7FF SWAP2 SWAP1 PUSH2 0x218D JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x80E SWAP2 SWAP1 PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x81A SWAP2 SWAP1 PUSH2 0x2106 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x830 JUMPI PUSH2 0x82F PUSH2 0x23E1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x86C SWAP2 SWAP1 PUSH2 0x215C JUMP JUMPDEST SWAP5 POP PUSH2 0x7EA JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x8CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C2 SWAP1 PUSH2 0x1F63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x932 SWAP1 PUSH2 0x1EC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x945 PUSH2 0x87F JUMP JUMPDEST SWAP1 POP PUSH2 0x955 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xB06 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x976 JUMPI PUSH2 0x975 PUSH2 0x23E1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x995 JUMPI PUSH2 0x994 PUSH2 0x23E1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP1 PUSH2 0x1F03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAEB SWAP2 SWAP1 PUSH2 0x2106 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xAFF SWAP1 PUSH2 0x22DA JUMP JUMPDEST SWAP1 POP PUSH2 0x958 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xB7D SWAP3 SWAP2 SWAP1 PUSH2 0x1DCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xB93 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xFBA JUMP JUMPDEST PUSH2 0xBA1 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xFC2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0F SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD09 SWAP2 SWAP1 PUSH2 0x1E06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7D SWAP1 PUSH2 0x1EC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD90 PUSH2 0x87F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD9D DUP6 PUSH2 0x11A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDAA DUP6 PUSH2 0x11A9 JUMP JUMPDEST SWAP1 POP PUSH2 0xDBA DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xE51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE48 SWAP1 PUSH2 0x1F03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF06 SWAP2 SWAP1 PUSH2 0x2106 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xF83 SWAP3 SWAP2 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF99 DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xFBA JUMP JUMPDEST PUSH2 0xFA7 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1223 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFE1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x140A JUMP JUMPDEST ISZERO PUSH2 0x11A1 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1027 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CEB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1041 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1072 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x106F SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1118 JUMPI PUSH2 0x107E PUSH2 0x243F JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x10DB JUMPI POP PUSH2 0x1093 PUSH2 0x27D7 JUMP JUMPDEST DUP1 PUSH2 0x109E JUMPI POP PUSH2 0x10DD JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D2 SWAP2 SWAP1 PUSH2 0x1E21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110F SWAP1 PUSH2 0x1E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x119F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1196 SWAP1 PUSH2 0x1E63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11C8 JUMPI PUSH2 0x11C7 PUSH2 0x2410 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11F6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x120E JUMPI PUSH2 0x120D PUSH2 0x23E1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1242 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x140A JUMP JUMPDEST ISZERO PUSH2 0x1402 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1288 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D53 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12D3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12D0 SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1379 JUMPI PUSH2 0x12DF PUSH2 0x243F JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x133C JUMPI POP PUSH2 0x12F4 PUSH2 0x27D7 JUMP JUMPDEST DUP1 PUSH2 0x12FF JUMPI POP PUSH2 0x133E JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1333 SWAP2 SWAP1 PUSH2 0x1E21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1370 SWAP1 PUSH2 0x1E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1400 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F7 SWAP1 PUSH2 0x1E63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1440 PUSH2 0x143B DUP5 PUSH2 0x1FEC JUMP JUMPDEST PUSH2 0x1FC7 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x1463 JUMPI PUSH2 0x1462 PUSH2 0x2466 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1493 JUMPI DUP2 PUSH2 0x1479 DUP9 DUP3 PUSH2 0x154F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1466 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B0 PUSH2 0x14AB DUP5 PUSH2 0x2018 JUMP JUMPDEST PUSH2 0x1FC7 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x14D3 JUMPI PUSH2 0x14D2 PUSH2 0x2466 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1503 JUMPI DUP2 PUSH2 0x14E9 DUP9 DUP3 PUSH2 0x162D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x14D6 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1520 PUSH2 0x151B DUP5 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x1FC7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x153C JUMPI PUSH2 0x153B PUSH2 0x246B JUMP JUMPDEST JUMPDEST PUSH2 0x1547 DUP5 DUP3 DUP6 PUSH2 0x2235 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x155E DUP2 PUSH2 0x286D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1579 JUMPI PUSH2 0x1578 PUSH2 0x2461 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1589 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x142D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15A7 JUMPI PUSH2 0x15A6 PUSH2 0x2461 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15B7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x149D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15CF DUP2 PUSH2 0x2884 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15E4 DUP2 PUSH2 0x289B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x15F9 DUP2 PUSH2 0x289B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1614 JUMPI PUSH2 0x1613 PUSH2 0x2461 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1624 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x150D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x163C DUP2 PUSH2 0x28B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1659 JUMPI PUSH2 0x1658 PUSH2 0x2475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1667 DUP6 DUP3 DUP7 ADD PUSH2 0x154F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1678 DUP6 DUP3 DUP7 ADD PUSH2 0x154F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x169E JUMPI PUSH2 0x169D PUSH2 0x2475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16AC DUP9 DUP3 DUP10 ADD PUSH2 0x154F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x16BD DUP9 DUP3 DUP10 ADD PUSH2 0x154F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16DE JUMPI PUSH2 0x16DD PUSH2 0x2470 JUMP JUMPDEST JUMPDEST PUSH2 0x16EA DUP9 DUP3 DUP10 ADD PUSH2 0x1592 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x170B JUMPI PUSH2 0x170A PUSH2 0x2470 JUMP JUMPDEST JUMPDEST PUSH2 0x1717 DUP9 DUP3 DUP10 ADD PUSH2 0x1592 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1738 JUMPI PUSH2 0x1737 PUSH2 0x2470 JUMP JUMPDEST JUMPDEST PUSH2 0x1744 DUP9 DUP3 DUP10 ADD PUSH2 0x15FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x176D JUMPI PUSH2 0x176C PUSH2 0x2475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x177B DUP9 DUP3 DUP10 ADD PUSH2 0x154F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x178C DUP9 DUP3 DUP10 ADD PUSH2 0x154F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x179D DUP9 DUP3 DUP10 ADD PUSH2 0x162D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x17AE DUP9 DUP3 DUP10 ADD PUSH2 0x162D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17CF JUMPI PUSH2 0x17CE PUSH2 0x2470 JUMP JUMPDEST JUMPDEST PUSH2 0x17DB DUP9 DUP3 DUP10 ADD PUSH2 0x15FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17FF JUMPI PUSH2 0x17FE PUSH2 0x2475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x180D DUP6 DUP3 DUP7 ADD PUSH2 0x154F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x181E DUP6 DUP3 DUP7 ADD PUSH2 0x15C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x183F JUMPI PUSH2 0x183E PUSH2 0x2475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x184D DUP6 DUP3 DUP7 ADD PUSH2 0x154F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x185E DUP6 DUP3 DUP7 ADD PUSH2 0x162D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x187F JUMPI PUSH2 0x187E PUSH2 0x2475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x189D JUMPI PUSH2 0x189C PUSH2 0x2470 JUMP JUMPDEST JUMPDEST PUSH2 0x18A9 DUP6 DUP3 DUP7 ADD PUSH2 0x1564 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18CA JUMPI PUSH2 0x18C9 PUSH2 0x2470 JUMP JUMPDEST JUMPDEST PUSH2 0x18D6 DUP6 DUP3 DUP7 ADD PUSH2 0x1592 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F6 JUMPI PUSH2 0x18F5 PUSH2 0x2475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1904 DUP5 DUP3 DUP6 ADD PUSH2 0x15D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1923 JUMPI PUSH2 0x1922 PUSH2 0x2475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1931 DUP5 DUP3 DUP6 ADD PUSH2 0x15EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1950 JUMPI PUSH2 0x194F PUSH2 0x2475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x195E DUP5 DUP3 DUP6 ADD PUSH2 0x162D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1973 DUP4 DUP4 PUSH2 0x1C9E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1988 DUP2 PUSH2 0x21C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1999 DUP3 PUSH2 0x209A JUMP JUMPDEST PUSH2 0x19A3 DUP2 DUP6 PUSH2 0x20C8 JUMP JUMPDEST SWAP4 POP PUSH2 0x19AE DUP4 PUSH2 0x2075 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19DF JUMPI DUP2 MLOAD PUSH2 0x19C6 DUP9 DUP3 PUSH2 0x1967 JUMP JUMPDEST SWAP8 POP PUSH2 0x19D1 DUP4 PUSH2 0x20BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x19B2 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19F5 DUP2 PUSH2 0x21D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A06 DUP3 PUSH2 0x20A5 JUMP JUMPDEST PUSH2 0x1A10 DUP2 DUP6 PUSH2 0x20D9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A20 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2244 JUMP JUMPDEST PUSH2 0x1A29 DUP2 PUSH2 0x247A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3F DUP3 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x1A49 DUP2 DUP6 PUSH2 0x20EA JUMP JUMPDEST SWAP4 POP PUSH2 0x1A59 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2244 JUMP JUMPDEST PUSH2 0x1A62 DUP2 PUSH2 0x247A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A78 DUP3 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x1A82 DUP2 DUP6 PUSH2 0x20FB JUMP JUMPDEST SWAP4 POP PUSH2 0x1A92 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2244 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x1AAB DUP2 PUSH2 0x2277 JUMP JUMPDEST PUSH2 0x1AB5 DUP2 DUP7 PUSH2 0x20FB JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x1AD0 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1AE1 JUMPI PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 DUP7 ADD SWAP4 POP PUSH2 0x1B14 JUMP JUMPDEST PUSH2 0x1AEA DUP6 PUSH2 0x2085 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B0C JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1AED JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B2A PUSH1 0x34 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1B35 DUP3 PUSH2 0x2498 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B4D PUSH1 0x28 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1B58 DUP3 PUSH2 0x24E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B70 PUSH1 0x29 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7B DUP3 PUSH2 0x2536 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B93 PUSH1 0x2A DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9E DUP3 PUSH2 0x2585 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB6 PUSH1 0x25 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC1 DUP3 PUSH2 0x25D4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD9 PUSH1 0x32 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE4 DUP3 PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BFC PUSH1 0x2A DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1C07 DUP3 PUSH2 0x2672 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C1F PUSH1 0x5 DUP4 PUSH2 0x20FB JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2A DUP3 PUSH2 0x26C1 JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C42 PUSH1 0x29 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1C4D DUP3 PUSH2 0x26EA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C65 PUSH1 0x29 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1C70 DUP3 PUSH2 0x2739 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C88 PUSH1 0x28 DUP4 PUSH2 0x20EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1C93 DUP3 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CA7 DUP2 PUSH2 0x222B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1CB6 DUP2 PUSH2 0x222B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC8 DUP3 DUP6 PUSH2 0x1A9E JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD4 DUP3 DUP5 PUSH2 0x1A6D JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDF DUP3 PUSH2 0x1C12 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1D00 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x1D0D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x197F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1D1F DUP2 DUP7 PUSH2 0x198E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1D33 DUP2 DUP6 PUSH2 0x198E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1D47 DUP2 DUP5 PUSH2 0x19FB JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1D68 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x1D75 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x1D82 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1CAD JUMP JUMPDEST PUSH2 0x1D8F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1CAD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1DA1 DUP2 DUP5 PUSH2 0x19FB JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DC7 DUP2 DUP5 PUSH2 0x198E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DE9 DUP2 DUP6 PUSH2 0x198E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1DFD DUP2 DUP5 PUSH2 0x198E JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E1B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E3B DUP2 DUP5 PUSH2 0x1A34 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E5C DUP2 PUSH2 0x1B1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E7C DUP2 PUSH2 0x1B40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E9C DUP2 PUSH2 0x1B63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EBC DUP2 PUSH2 0x1B86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EDC DUP2 PUSH2 0x1BA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EFC DUP2 PUSH2 0x1BCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F1C DUP2 PUSH2 0x1BEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F3C DUP2 PUSH2 0x1C35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F5C DUP2 PUSH2 0x1C58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F7C DUP2 PUSH2 0x1C7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F98 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FB3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1CAD JUMP JUMPDEST PUSH2 0x1FC0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CAD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD1 PUSH2 0x1FE2 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FDD DUP3 DUP3 PUSH2 0x22A9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2007 JUMPI PUSH2 0x2006 PUSH2 0x2410 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2033 JUMPI PUSH2 0x2032 PUSH2 0x2410 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x205F JUMPI PUSH2 0x205E PUSH2 0x2410 JUMP JUMPDEST JUMPDEST PUSH2 0x2068 DUP3 PUSH2 0x247A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2111 DUP3 PUSH2 0x222B JUMP JUMPDEST SWAP2 POP PUSH2 0x211C DUP4 PUSH2 0x222B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2151 JUMPI PUSH2 0x2150 PUSH2 0x2354 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2167 DUP3 PUSH2 0x222B JUMP JUMPDEST SWAP2 POP PUSH2 0x2172 DUP4 PUSH2 0x222B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2182 JUMPI PUSH2 0x2181 PUSH2 0x2383 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2198 DUP3 PUSH2 0x222B JUMP JUMPDEST SWAP2 POP PUSH2 0x21A3 DUP4 PUSH2 0x222B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x21B6 JUMPI PUSH2 0x21B5 PUSH2 0x2354 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21CC DUP3 PUSH2 0x220B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2262 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2247 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2271 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x228F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x22A3 JUMPI PUSH2 0x22A2 PUSH2 0x23B2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22B2 DUP3 PUSH2 0x247A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x22D1 JUMPI PUSH2 0x22D0 PUSH2 0x2410 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22E5 DUP3 PUSH2 0x222B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2318 JUMPI PUSH2 0x2317 PUSH2 0x2354 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x232E DUP3 PUSH2 0x222B JUMP JUMPDEST SWAP2 POP PUSH2 0x2339 DUP4 PUSH2 0x222B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2349 JUMPI PUSH2 0x2348 PUSH2 0x2383 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x245E JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x245B PUSH1 0x0 MLOAD PUSH2 0x248B JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x2E6A736F6E000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x27E7 JUMPI PUSH2 0x286A JUMP JUMPDEST PUSH2 0x27EF PUSH2 0x1FE2 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2817 JUMPI POP POP PUSH2 0x286A JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2835 JUMPI POP POP POP POP PUSH2 0x286A JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x2852 JUMPI POP POP POP POP POP PUSH2 0x286A JUMP JUMPDEST PUSH2 0x2861 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x22A9 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2876 DUP2 PUSH2 0x21C1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2881 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x288D DUP2 PUSH2 0x21D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x28A4 DUP2 PUSH2 0x21DF JUMP JUMPDEST DUP2 EQ PUSH2 0x28AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x28BB DUP2 PUSH2 0x222B JUMP JUMPDEST DUP2 EQ PUSH2 0x28C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN SMOD CALLDATALOAD 0xD6 0xD6 0xE5 BASEFEE 0xD4 PUSH31 0x8AC77A714B032DE212100E2CDC9B99F235C6840F1C669D64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "604:16694:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2363:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1270:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1974:247;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4237:430;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2747:508;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3543:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3776:389;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2363:227;2449:7;2495:1;2476:21;;:7;:21;;;;2468:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2561:9;:13;2571:2;2561:13;;;;;;;;;;;:22;2575:7;2561:22;;;;;;;;;;;;;;;;2554:29;;2363:227;;;;:::o;1270:305::-;1372:4;1422:26;1407:41;;;:11;:41;;;;:109;;;;1479:37;1464:52;;;:11;:52;;;;1407:109;:161;;;;1532:36;1556:11;1532:23;:36::i;:::-;1407:161;1388:180;;1270:305;;;:::o;1974:247::-;2037:13;2123:4;2145:20;2162:2;2145:16;:20::i;:::-;2089:115;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2062:152;;1974:247;;;:::o;4237:430::-;4470:12;:10;:12::i;:::-;4462:20;;:4;:20;;;:60;;;;4486:36;4503:4;4509:12;:10;:12::i;:::-;4486:16;:36::i;:::-;4462:60;4441:157;;;;;;;;;;;;:::i;:::-;;;;;;;;;4608:52;4631:4;4637:2;4641:3;4646:7;4655:4;4608:22;:52::i;:::-;4237:430;;;;;:::o;2747:508::-;2898:16;2957:3;:10;2938:8;:15;:29;2930:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;3024:30;3071:8;:15;3057:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3024:63;;3103:9;3098:120;3122:8;:15;3118:1;:19;3098:120;;;3177:30;3187:8;3196:1;3187:11;;;;;;;;:::i;:::-;;;;;;;;3200:3;3204:1;3200:6;;;;;;;;:::i;:::-;;;;;;;;3177:9;:30::i;:::-;3158:13;3172:1;3158:16;;;;;;;;:::i;:::-;;;;;;;:49;;;;;3139:3;;;;:::i;:::-;;;3098:120;;;;3235:13;3228:20;;;2747:508;;;;:::o;3323:153::-;3417:52;3436:12;:10;:12::i;:::-;3450:8;3460;3417:18;:52::i;:::-;3323:153;;:::o;3543:166::-;3642:4;3665:18;:27;3684:7;3665:27;;;;;;;;;;;;;;;:37;3693:8;3665:37;;;;;;;;;;;;;;;;;;;;;;;;;3658:44;;3543:166;;;;:::o;3776:389::-;3984:12;:10;:12::i;:::-;3976:20;;:4;:20;;;:60;;;;4000:36;4017:4;4023:12;:10;:12::i;:::-;4000:16;:36::i;:::-;3976:60;3955:148;;;;;;;;;;;;:::i;:::-;;;;;;;;;4113:45;4131:4;4137:2;4141;4145:6;4153:4;4113:17;:45::i;:::-;3776:389;;;;;:::o;829:155:10:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;328:703:9:-;384:13;610:1;601:5;:10;597:51;;;627:10;;;;;;;;;;;;;;;;;;;;;597:51;657:12;672:5;657:20;;687:14;711:75;726:1;718:4;:9;711:75;;743:8;;;;;:::i;:::-;;;;773:2;765:10;;;;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;795:39;;844:150;860:1;851:5;:10;844:150;;887:1;877:11;;;;;:::i;:::-;;;953:2;945:5;:10;;;;:::i;:::-;932:2;:24;;;;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;981:2;972:11;;;;;:::i;:::-;;;844:150;;;1017:6;1003:21;;;;;328:703;;;;:::o;640:96:8:-;693:7;719:10;712:17;;640:96;:::o;6411:1115:2:-;6631:7;:14;6617:3;:10;:28;6609:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;6722:1;6708:16;;:2;:16;;;;6700:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6777:16;6796:12;:10;:12::i;:::-;6777:31;;6819:60;6840:8;6850:4;6856:2;6860:3;6865:7;6874:4;6819:20;:60::i;:::-;6895:9;6890:411;6914:3;:10;6910:1;:14;6890:411;;;6945:10;6958:3;6962:1;6958:6;;;;;;;;:::i;:::-;;;;;;;;6945:19;;6978:14;6995:7;7003:1;6995:10;;;;;;;;:::i;:::-;;;;;;;;6978:27;;7020:19;7042:9;:13;7052:2;7042:13;;;;;;;;;;;:19;7056:4;7042:19;;;;;;;;;;;;;;;;7020:41;;7098:6;7083:11;:21;;7075:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;7229:6;7215:11;:20;7193:9;:13;7203:2;7193:13;;;;;;;;;;;:19;7207:4;7193:19;;;;;;;;;;;;;;;:42;;;;7284:6;7263:9;:13;7273:2;7263:13;;;;;;;;;;;:17;7277:2;7263:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;6931:370;;;6926:3;;;;:::i;:::-;;;6890:411;;;;7346:2;7316:47;;7340:4;7316:47;;7330:8;7316:47;;;7350:3;7355:7;7316:47;;;;;;;:::i;:::-;;;;;;;;7374:59;7394:8;7404:4;7410:2;7414:3;7419:7;7428:4;7374:19;:59::i;:::-;7444:75;7480:8;7490:4;7496:2;7500:3;7505:7;7514:4;7444:35;:75::i;:::-;6599:927;6411:1115;;;;;:::o;12951:323::-;13101:8;13092:17;;:5;:17;;;;13084:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;13203:8;13165:18;:25;13184:5;13165:25;;;;;;;;;;;;;;;:35;13191:8;13165:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13248:8;13226:41;;13241:5;13226:41;;;13258:8;13226:41;;;;;;:::i;:::-;;;;;;;;12951:323;;;:::o;5118:947::-;5313:1;5299:16;;:2;:16;;;;5291:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5368:16;5387:12;:10;:12::i;:::-;5368:31;;5409:20;5432:21;5450:2;5432:17;:21::i;:::-;5409:44;;5463:24;5490:25;5508:6;5490:17;:25::i;:::-;5463:52;;5526:60;5547:8;5557:4;5563:2;5567:3;5572:7;5581:4;5526:20;:60::i;:::-;5597:19;5619:9;:13;5629:2;5619:13;;;;;;;;;;;:19;5633:4;5619:19;;;;;;;;;;;;;;;;5597:41;;5671:6;5656:11;:21;;5648:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;5794:6;5780:11;:20;5758:9;:13;5768:2;5758:13;;;;;;;;;;;:19;5772:4;5758:19;;;;;;;;;;;;;;;:42;;;;5841:6;5820:9;:13;5830:2;5820:13;;;;;;;;;;;:17;5834:2;5820:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;5894:2;5863:46;;5888:4;5863:46;;5878:8;5863:46;;;5898:2;5902:6;5863:46;;;;;;;:::i;:::-;;;;;;;;5920:59;5940:8;5950:4;5956:2;5960:3;5965:7;5974:4;5920:19;:59::i;:::-;5990:68;6021:8;6031:4;6037:2;6041;6045:6;6053:4;5990:30;:68::i;:::-;5281:784;;;;5118:947;;;;;:::o;14208:214::-;;;;;;;:::o;15355:213::-;;;;;;;:::o;16305:792::-;16537:15;:2;:13;;;:15::i;:::-;16533:558;;;16589:2;16572:43;;;16616:8;16626:4;16632:3;16637:7;16646:4;16572:79;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;16568:513;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;16957:6;16950:14;;;;;;;;;;;:::i;:::-;;;;;;;;16568:513;;;17004:62;;;;;;;;;;:::i;:::-;;;;;;;;16568:513;16742:48;;;16730:60;;;:8;:60;;;;16726:157;;16814:50;;;;;;;;;;:::i;:::-;;;;;;;;16726:157;16652:245;16533:558;16305:792;;;;;;:::o;17103:193::-;17169:16;17197:22;17236:1;17222:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17197:41;;17259:7;17248:5;17254:1;17248:8;;;;;;;;:::i;:::-;;;;;;;:18;;;;;17284:5;17277:12;;;17103:193;;;:::o;15574:725::-;15781:15;:2;:13;;;:15::i;:::-;15777:516;;;15833:2;15816:38;;;15855:8;15865:4;15871:2;15875:6;15883:4;15816:72;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15812:471;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;16159:6;16152:14;;;;;;;;;;;:::i;:::-;;;;;;;;15812:471;;;16206:62;;;;;;;;;;:::i;:::-;;;;;;;;15812:471;15949:43;;;15937:55;;;:8;:55;;;;15933:152;;16016:50;;;;;;;;;;:::i;:::-;;;;;;;;15933:152;15889:210;15777:516;15574:725;;;;;;:::o;1175:320:7:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;24:722:12:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;769:::-;865:5;890:81;906:64;963:6;906:64;:::i;:::-;890:81;:::i;:::-;881:90;;991:5;1020:6;1013:5;1006:21;1054:4;1047:5;1043:16;1036:23;;1080:6;1130:3;1122:4;1114:6;1110:17;1105:3;1101:27;1098:36;1095:143;;;1149:79;;:::i;:::-;1095:143;1262:1;1247:238;1272:6;1269:1;1266:13;1247:238;;;1340:3;1369:37;1402:3;1390:10;1369:37;:::i;:::-;1364:3;1357:50;1436:4;1431:3;1427:14;1420:21;;1470:4;1465:3;1461:14;1454:21;;1307:178;1294:1;1291;1287:9;1282:14;;1247:238;;;1251:14;871:620;;769:722;;;;;:::o;1497:410::-;1574:5;1599:65;1615:48;1656:6;1615:48;:::i;:::-;1599:65;:::i;:::-;1590:74;;1687:6;1680:5;1673:21;1725:4;1718:5;1714:16;1763:3;1754:6;1749:3;1745:16;1742:25;1739:112;;;1770:79;;:::i;:::-;1739:112;1860:41;1894:6;1889:3;1884;1860:41;:::i;:::-;1580:327;1497:410;;;;;:::o;1913:139::-;1959:5;1997:6;1984:20;1975:29;;2013:33;2040:5;2013:33;:::i;:::-;1913:139;;;;:::o;2075:370::-;2146:5;2195:3;2188:4;2180:6;2176:17;2172:27;2162:122;;2203:79;;:::i;:::-;2162:122;2320:6;2307:20;2345:94;2435:3;2427:6;2420:4;2412:6;2408:17;2345:94;:::i;:::-;2336:103;;2152:293;2075:370;;;;:::o;2468:::-;2539:5;2588:3;2581:4;2573:6;2569:17;2565:27;2555:122;;2596:79;;:::i;:::-;2555:122;2713:6;2700:20;2738:94;2828:3;2820:6;2813:4;2805:6;2801:17;2738:94;:::i;:::-;2729:103;;2545:293;2468:370;;;;:::o;2844:133::-;2887:5;2925:6;2912:20;2903:29;;2941:30;2965:5;2941:30;:::i;:::-;2844:133;;;;:::o;2983:137::-;3028:5;3066:6;3053:20;3044:29;;3082:32;3108:5;3082:32;:::i;:::-;2983:137;;;;:::o;3126:141::-;3182:5;3213:6;3207:13;3198:22;;3229:32;3255:5;3229:32;:::i;:::-;3126:141;;;;:::o;3286:338::-;3341:5;3390:3;3383:4;3375:6;3371:17;3367:27;3357:122;;3398:79;;:::i;:::-;3357:122;3515:6;3502:20;3540:78;3614:3;3606:6;3599:4;3591:6;3587:17;3540:78;:::i;:::-;3531:87;;3347:277;3286:338;;;;:::o;3630:139::-;3676:5;3714:6;3701:20;3692:29;;3730:33;3757:5;3730:33;:::i;:::-;3630:139;;;;:::o;3775:474::-;3843:6;3851;3900:2;3888:9;3879:7;3875:23;3871:32;3868:119;;;3906:79;;:::i;:::-;3868:119;4026:1;4051:53;4096:7;4087:6;4076:9;4072:22;4051:53;:::i;:::-;4041:63;;3997:117;4153:2;4179:53;4224:7;4215:6;4204:9;4200:22;4179:53;:::i;:::-;4169:63;;4124:118;3775:474;;;;;:::o;4255:1509::-;4409:6;4417;4425;4433;4441;4490:3;4478:9;4469:7;4465:23;4461:33;4458:120;;;4497:79;;:::i;:::-;4458:120;4617:1;4642:53;4687:7;4678:6;4667:9;4663:22;4642:53;:::i;:::-;4632:63;;4588:117;4744:2;4770:53;4815:7;4806:6;4795:9;4791:22;4770:53;:::i;:::-;4760:63;;4715:118;4900:2;4889:9;4885:18;4872:32;4931:18;4923:6;4920:30;4917:117;;;4953:79;;:::i;:::-;4917:117;5058:78;5128:7;5119:6;5108:9;5104:22;5058:78;:::i;:::-;5048:88;;4843:303;5213:2;5202:9;5198:18;5185:32;5244:18;5236:6;5233:30;5230:117;;;5266:79;;:::i;:::-;5230:117;5371:78;5441:7;5432:6;5421:9;5417:22;5371:78;:::i;:::-;5361:88;;5156:303;5526:3;5515:9;5511:19;5498:33;5558:18;5550:6;5547:30;5544:117;;;5580:79;;:::i;:::-;5544:117;5685:62;5739:7;5730:6;5719:9;5715:22;5685:62;:::i;:::-;5675:72;;5469:288;4255:1509;;;;;;;;:::o;5770:1089::-;5874:6;5882;5890;5898;5906;5955:3;5943:9;5934:7;5930:23;5926:33;5923:120;;;5962:79;;:::i;:::-;5923:120;6082:1;6107:53;6152:7;6143:6;6132:9;6128:22;6107:53;:::i;:::-;6097:63;;6053:117;6209:2;6235:53;6280:7;6271:6;6260:9;6256:22;6235:53;:::i;:::-;6225:63;;6180:118;6337:2;6363:53;6408:7;6399:6;6388:9;6384:22;6363:53;:::i;:::-;6353:63;;6308:118;6465:2;6491:53;6536:7;6527:6;6516:9;6512:22;6491:53;:::i;:::-;6481:63;;6436:118;6621:3;6610:9;6606:19;6593:33;6653:18;6645:6;6642:30;6639:117;;;6675:79;;:::i;:::-;6639:117;6780:62;6834:7;6825:6;6814:9;6810:22;6780:62;:::i;:::-;6770:72;;6564:288;5770:1089;;;;;;;;:::o;6865:468::-;6930:6;6938;6987:2;6975:9;6966:7;6962:23;6958:32;6955:119;;;6993:79;;:::i;:::-;6955:119;7113:1;7138:53;7183:7;7174:6;7163:9;7159:22;7138:53;:::i;:::-;7128:63;;7084:117;7240:2;7266:50;7308:7;7299:6;7288:9;7284:22;7266:50;:::i;:::-;7256:60;;7211:115;6865:468;;;;;:::o;7339:474::-;7407:6;7415;7464:2;7452:9;7443:7;7439:23;7435:32;7432:119;;;7470:79;;:::i;:::-;7432:119;7590:1;7615:53;7660:7;7651:6;7640:9;7636:22;7615:53;:::i;:::-;7605:63;;7561:117;7717:2;7743:53;7788:7;7779:6;7768:9;7764:22;7743:53;:::i;:::-;7733:63;;7688:118;7339:474;;;;;:::o;7819:894::-;7937:6;7945;7994:2;7982:9;7973:7;7969:23;7965:32;7962:119;;;8000:79;;:::i;:::-;7962:119;8148:1;8137:9;8133:17;8120:31;8178:18;8170:6;8167:30;8164:117;;;8200:79;;:::i;:::-;8164:117;8305:78;8375:7;8366:6;8355:9;8351:22;8305:78;:::i;:::-;8295:88;;8091:302;8460:2;8449:9;8445:18;8432:32;8491:18;8483:6;8480:30;8477:117;;;8513:79;;:::i;:::-;8477:117;8618:78;8688:7;8679:6;8668:9;8664:22;8618:78;:::i;:::-;8608:88;;8403:303;7819:894;;;;;:::o;8719:327::-;8777:6;8826:2;8814:9;8805:7;8801:23;8797:32;8794:119;;;8832:79;;:::i;:::-;8794:119;8952:1;8977:52;9021:7;9012:6;9001:9;8997:22;8977:52;:::i;:::-;8967:62;;8923:116;8719:327;;;;:::o;9052:349::-;9121:6;9170:2;9158:9;9149:7;9145:23;9141:32;9138:119;;;9176:79;;:::i;:::-;9138:119;9296:1;9321:63;9376:7;9367:6;9356:9;9352:22;9321:63;:::i;:::-;9311:73;;9267:127;9052:349;;;;:::o;9407:329::-;9466:6;9515:2;9503:9;9494:7;9490:23;9486:32;9483:119;;;9521:79;;:::i;:::-;9483:119;9641:1;9666:53;9711:7;9702:6;9691:9;9687:22;9666:53;:::i;:::-;9656:63;;9612:117;9407:329;;;;:::o;9742:179::-;9811:10;9832:46;9874:3;9866:6;9832:46;:::i;:::-;9910:4;9905:3;9901:14;9887:28;;9742:179;;;;:::o;9927:118::-;10014:24;10032:5;10014:24;:::i;:::-;10009:3;10002:37;9927:118;;:::o;10081:732::-;10200:3;10229:54;10277:5;10229:54;:::i;:::-;10299:86;10378:6;10373:3;10299:86;:::i;:::-;10292:93;;10409:56;10459:5;10409:56;:::i;:::-;10488:7;10519:1;10504:284;10529:6;10526:1;10523:13;10504:284;;;10605:6;10599:13;10632:63;10691:3;10676:13;10632:63;:::i;:::-;10625:70;;10718:60;10771:6;10718:60;:::i;:::-;10708:70;;10564:224;10551:1;10548;10544:9;10539:14;;10504:284;;;10508:14;10804:3;10797:10;;10205:608;;;10081:732;;;;:::o;10819:109::-;10900:21;10915:5;10900:21;:::i;:::-;10895:3;10888:34;10819:109;;:::o;10934:360::-;11020:3;11048:38;11080:5;11048:38;:::i;:::-;11102:70;11165:6;11160:3;11102:70;:::i;:::-;11095:77;;11181:52;11226:6;11221:3;11214:4;11207:5;11203:16;11181:52;:::i;:::-;11258:29;11280:6;11258:29;:::i;:::-;11253:3;11249:39;11242:46;;11024:270;10934:360;;;;:::o;11300:364::-;11388:3;11416:39;11449:5;11416:39;:::i;:::-;11471:71;11535:6;11530:3;11471:71;:::i;:::-;11464:78;;11551:52;11596:6;11591:3;11584:4;11577:5;11573:16;11551:52;:::i;:::-;11628:29;11650:6;11628:29;:::i;:::-;11623:3;11619:39;11612:46;;11392:272;11300:364;;;;:::o;11670:377::-;11776:3;11804:39;11837:5;11804:39;:::i;:::-;11859:89;11941:6;11936:3;11859:89;:::i;:::-;11852:96;;11957:52;12002:6;11997:3;11990:4;11983:5;11979:16;11957:52;:::i;:::-;12034:6;12029:3;12025:16;12018:23;;11780:267;11670:377;;;;:::o;12077:845::-;12180:3;12217:5;12211:12;12246:36;12272:9;12246:36;:::i;:::-;12298:89;12380:6;12375:3;12298:89;:::i;:::-;12291:96;;12418:1;12407:9;12403:17;12434:1;12429:137;;;;12580:1;12575:341;;;;12396:520;;12429:137;12513:4;12509:9;12498;12494:25;12489:3;12482:38;12549:6;12544:3;12540:16;12533:23;;12429:137;;12575:341;12642:38;12674:5;12642:38;:::i;:::-;12702:1;12716:154;12730:6;12727:1;12724:13;12716:154;;;12804:7;12798:14;12794:1;12789:3;12785:11;12778:35;12854:1;12845:7;12841:15;12830:26;;12752:4;12749:1;12745:12;12740:17;;12716:154;;;12899:6;12894:3;12890:16;12883:23;;12582:334;;12396:520;;12184:738;;12077:845;;;;:::o;12928:366::-;13070:3;13091:67;13155:2;13150:3;13091:67;:::i;:::-;13084:74;;13167:93;13256:3;13167:93;:::i;:::-;13285:2;13280:3;13276:12;13269:19;;12928:366;;;:::o;13300:::-;13442:3;13463:67;13527:2;13522:3;13463:67;:::i;:::-;13456:74;;13539:93;13628:3;13539:93;:::i;:::-;13657:2;13652:3;13648:12;13641:19;;13300:366;;;:::o;13672:::-;13814:3;13835:67;13899:2;13894:3;13835:67;:::i;:::-;13828:74;;13911:93;14000:3;13911:93;:::i;:::-;14029:2;14024:3;14020:12;14013:19;;13672:366;;;:::o;14044:::-;14186:3;14207:67;14271:2;14266:3;14207:67;:::i;:::-;14200:74;;14283:93;14372:3;14283:93;:::i;:::-;14401:2;14396:3;14392:12;14385:19;;14044:366;;;:::o;14416:::-;14558:3;14579:67;14643:2;14638:3;14579:67;:::i;:::-;14572:74;;14655:93;14744:3;14655:93;:::i;:::-;14773:2;14768:3;14764:12;14757:19;;14416:366;;;:::o;14788:::-;14930:3;14951:67;15015:2;15010:3;14951:67;:::i;:::-;14944:74;;15027:93;15116:3;15027:93;:::i;:::-;15145:2;15140:3;15136:12;15129:19;;14788:366;;;:::o;15160:::-;15302:3;15323:67;15387:2;15382:3;15323:67;:::i;:::-;15316:74;;15399:93;15488:3;15399:93;:::i;:::-;15517:2;15512:3;15508:12;15501:19;;15160:366;;;:::o;15532:400::-;15692:3;15713:84;15795:1;15790:3;15713:84;:::i;:::-;15706:91;;15806:93;15895:3;15806:93;:::i;:::-;15924:1;15919:3;15915:11;15908:18;;15532:400;;;:::o;15938:366::-;16080:3;16101:67;16165:2;16160:3;16101:67;:::i;:::-;16094:74;;16177:93;16266:3;16177:93;:::i;:::-;16295:2;16290:3;16286:12;16279:19;;15938:366;;;:::o;16310:::-;16452:3;16473:67;16537:2;16532:3;16473:67;:::i;:::-;16466:74;;16549:93;16638:3;16549:93;:::i;:::-;16667:2;16662:3;16658:12;16651:19;;16310:366;;;:::o;16682:::-;16824:3;16845:67;16909:2;16904:3;16845:67;:::i;:::-;16838:74;;16921:93;17010:3;16921:93;:::i;:::-;17039:2;17034:3;17030:12;17023:19;;16682:366;;;:::o;17054:108::-;17131:24;17149:5;17131:24;:::i;:::-;17126:3;17119:37;17054:108;;:::o;17168:118::-;17255:24;17273:5;17255:24;:::i;:::-;17250:3;17243:37;17168:118;;:::o;17292:695::-;17570:3;17592:92;17680:3;17671:6;17592:92;:::i;:::-;17585:99;;17701:95;17792:3;17783:6;17701:95;:::i;:::-;17694:102;;17813:148;17957:3;17813:148;:::i;:::-;17806:155;;17978:3;17971:10;;17292:695;;;;;:::o;17993:1053::-;18316:4;18354:3;18343:9;18339:19;18331:27;;18368:71;18436:1;18425:9;18421:17;18412:6;18368:71;:::i;:::-;18449:72;18517:2;18506:9;18502:18;18493:6;18449:72;:::i;:::-;18568:9;18562:4;18558:20;18553:2;18542:9;18538:18;18531:48;18596:108;18699:4;18690:6;18596:108;:::i;:::-;18588:116;;18751:9;18745:4;18741:20;18736:2;18725:9;18721:18;18714:48;18779:108;18882:4;18873:6;18779:108;:::i;:::-;18771:116;;18935:9;18929:4;18925:20;18919:3;18908:9;18904:19;18897:49;18963:76;19034:4;19025:6;18963:76;:::i;:::-;18955:84;;17993:1053;;;;;;;;:::o;19052:751::-;19275:4;19313:3;19302:9;19298:19;19290:27;;19327:71;19395:1;19384:9;19380:17;19371:6;19327:71;:::i;:::-;19408:72;19476:2;19465:9;19461:18;19452:6;19408:72;:::i;:::-;19490;19558:2;19547:9;19543:18;19534:6;19490:72;:::i;:::-;19572;19640:2;19629:9;19625:18;19616:6;19572:72;:::i;:::-;19692:9;19686:4;19682:20;19676:3;19665:9;19661:19;19654:49;19720:76;19791:4;19782:6;19720:76;:::i;:::-;19712:84;;19052:751;;;;;;;;:::o;19809:373::-;19952:4;19990:2;19979:9;19975:18;19967:26;;20039:9;20033:4;20029:20;20025:1;20014:9;20010:17;20003:47;20067:108;20170:4;20161:6;20067:108;:::i;:::-;20059:116;;19809:373;;;;:::o;20188:634::-;20409:4;20447:2;20436:9;20432:18;20424:26;;20496:9;20490:4;20486:20;20482:1;20471:9;20467:17;20460:47;20524:108;20627:4;20618:6;20524:108;:::i;:::-;20516:116;;20679:9;20673:4;20669:20;20664:2;20653:9;20649:18;20642:48;20707:108;20810:4;20801:6;20707:108;:::i;:::-;20699:116;;20188:634;;;;;:::o;20828:210::-;20915:4;20953:2;20942:9;20938:18;20930:26;;20966:65;21028:1;21017:9;21013:17;21004:6;20966:65;:::i;:::-;20828:210;;;;:::o;21044:313::-;21157:4;21195:2;21184:9;21180:18;21172:26;;21244:9;21238:4;21234:20;21230:1;21219:9;21215:17;21208:47;21272:78;21345:4;21336:6;21272:78;:::i;:::-;21264:86;;21044:313;;;;:::o;21363:419::-;21529:4;21567:2;21556:9;21552:18;21544:26;;21616:9;21610:4;21606:20;21602:1;21591:9;21587:17;21580:47;21644:131;21770:4;21644:131;:::i;:::-;21636:139;;21363:419;;;:::o;21788:::-;21954:4;21992:2;21981:9;21977:18;21969:26;;22041:9;22035:4;22031:20;22027:1;22016:9;22012:17;22005:47;22069:131;22195:4;22069:131;:::i;:::-;22061:139;;21788:419;;;:::o;22213:::-;22379:4;22417:2;22406:9;22402:18;22394:26;;22466:9;22460:4;22456:20;22452:1;22441:9;22437:17;22430:47;22494:131;22620:4;22494:131;:::i;:::-;22486:139;;22213:419;;;:::o;22638:::-;22804:4;22842:2;22831:9;22827:18;22819:26;;22891:9;22885:4;22881:20;22877:1;22866:9;22862:17;22855:47;22919:131;23045:4;22919:131;:::i;:::-;22911:139;;22638:419;;;:::o;23063:::-;23229:4;23267:2;23256:9;23252:18;23244:26;;23316:9;23310:4;23306:20;23302:1;23291:9;23287:17;23280:47;23344:131;23470:4;23344:131;:::i;:::-;23336:139;;23063:419;;;:::o;23488:::-;23654:4;23692:2;23681:9;23677:18;23669:26;;23741:9;23735:4;23731:20;23727:1;23716:9;23712:17;23705:47;23769:131;23895:4;23769:131;:::i;:::-;23761:139;;23488:419;;;:::o;23913:::-;24079:4;24117:2;24106:9;24102:18;24094:26;;24166:9;24160:4;24156:20;24152:1;24141:9;24137:17;24130:47;24194:131;24320:4;24194:131;:::i;:::-;24186:139;;23913:419;;;:::o;24338:::-;24504:4;24542:2;24531:9;24527:18;24519:26;;24591:9;24585:4;24581:20;24577:1;24566:9;24562:17;24555:47;24619:131;24745:4;24619:131;:::i;:::-;24611:139;;24338:419;;;:::o;24763:::-;24929:4;24967:2;24956:9;24952:18;24944:26;;25016:9;25010:4;25006:20;25002:1;24991:9;24987:17;24980:47;25044:131;25170:4;25044:131;:::i;:::-;25036:139;;24763:419;;;:::o;25188:::-;25354:4;25392:2;25381:9;25377:18;25369:26;;25441:9;25435:4;25431:20;25427:1;25416:9;25412:17;25405:47;25469:131;25595:4;25469:131;:::i;:::-;25461:139;;25188:419;;;:::o;25613:222::-;25706:4;25744:2;25733:9;25729:18;25721:26;;25757:71;25825:1;25814:9;25810:17;25801:6;25757:71;:::i;:::-;25613:222;;;;:::o;25841:332::-;25962:4;26000:2;25989:9;25985:18;25977:26;;26013:71;26081:1;26070:9;26066:17;26057:6;26013:71;:::i;:::-;26094:72;26162:2;26151:9;26147:18;26138:6;26094:72;:::i;:::-;25841:332;;;;;:::o;26179:129::-;26213:6;26240:20;;:::i;:::-;26230:30;;26269:33;26297:4;26289:6;26269:33;:::i;:::-;26179:129;;;:::o;26314:75::-;26347:6;26380:2;26374:9;26364:19;;26314:75;:::o;26395:311::-;26472:4;26562:18;26554:6;26551:30;26548:56;;;26584:18;;:::i;:::-;26548:56;26634:4;26626:6;26622:17;26614:25;;26694:4;26688;26684:15;26676:23;;26395:311;;;:::o;26712:::-;26789:4;26879:18;26871:6;26868:30;26865:56;;;26901:18;;:::i;:::-;26865:56;26951:4;26943:6;26939:17;26931:25;;27011:4;27005;27001:15;26993:23;;26712:311;;;:::o;27029:307::-;27090:4;27180:18;27172:6;27169:30;27166:56;;;27202:18;;:::i;:::-;27166:56;27240:29;27262:6;27240:29;:::i;:::-;27232:37;;27324:4;27318;27314:15;27306:23;;27029:307;;;:::o;27342:132::-;27409:4;27432:3;27424:11;;27462:4;27457:3;27453:14;27445:22;;27342:132;;;:::o;27480:141::-;27529:4;27552:3;27544:11;;27575:3;27572:1;27565:14;27609:4;27606:1;27596:18;27588:26;;27480:141;;;:::o;27627:114::-;27694:6;27728:5;27722:12;27712:22;;27627:114;;;:::o;27747:98::-;27798:6;27832:5;27826:12;27816:22;;27747:98;;;:::o;27851:99::-;27903:6;27937:5;27931:12;27921:22;;27851:99;;;:::o;27956:113::-;28026:4;28058;28053:3;28049:14;28041:22;;27956:113;;;:::o;28075:184::-;28174:11;28208:6;28203:3;28196:19;28248:4;28243:3;28239:14;28224:29;;28075:184;;;;:::o;28265:168::-;28348:11;28382:6;28377:3;28370:19;28422:4;28417:3;28413:14;28398:29;;28265:168;;;;:::o;28439:169::-;28523:11;28557:6;28552:3;28545:19;28597:4;28592:3;28588:14;28573:29;;28439:169;;;;:::o;28614:148::-;28716:11;28753:3;28738:18;;28614:148;;;;:::o;28768:305::-;28808:3;28827:20;28845:1;28827:20;:::i;:::-;28822:25;;28861:20;28879:1;28861:20;:::i;:::-;28856:25;;29015:1;28947:66;28943:74;28940:1;28937:81;28934:107;;;29021:18;;:::i;:::-;28934:107;29065:1;29062;29058:9;29051:16;;28768:305;;;;:::o;29079:185::-;29119:1;29136:20;29154:1;29136:20;:::i;:::-;29131:25;;29170:20;29188:1;29170:20;:::i;:::-;29165:25;;29209:1;29199:35;;29214:18;;:::i;:::-;29199:35;29256:1;29253;29249:9;29244:14;;29079:185;;;;:::o;29270:191::-;29310:4;29330:20;29348:1;29330:20;:::i;:::-;29325:25;;29364:20;29382:1;29364:20;:::i;:::-;29359:25;;29403:1;29400;29397:8;29394:34;;;29408:18;;:::i;:::-;29394:34;29453:1;29450;29446:9;29438:17;;29270:191;;;;:::o;29467:96::-;29504:7;29533:24;29551:5;29533:24;:::i;:::-;29522:35;;29467:96;;;:::o;29569:90::-;29603:7;29646:5;29639:13;29632:21;29621:32;;29569:90;;;:::o;29665:149::-;29701:7;29741:66;29734:5;29730:78;29719:89;;29665:149;;;:::o;29820:126::-;29857:7;29897:42;29890:5;29886:54;29875:65;;29820:126;;;:::o;29952:77::-;29989:7;30018:5;30007:16;;29952:77;;;:::o;30035:154::-;30119:6;30114:3;30109;30096:30;30181:1;30172:6;30167:3;30163:16;30156:27;30035:154;;;:::o;30195:307::-;30263:1;30273:113;30287:6;30284:1;30281:13;30273:113;;;30372:1;30367:3;30363:11;30357:18;30353:1;30348:3;30344:11;30337:39;30309:2;30306:1;30302:10;30297:15;;30273:113;;;30404:6;30401:1;30398:13;30395:101;;;30484:1;30475:6;30470:3;30466:16;30459:27;30395:101;30244:258;30195:307;;;:::o;30508:320::-;30552:6;30589:1;30583:4;30579:12;30569:22;;30636:1;30630:4;30626:12;30657:18;30647:81;;30713:4;30705:6;30701:17;30691:27;;30647:81;30775:2;30767:6;30764:14;30744:18;30741:38;30738:84;;;30794:18;;:::i;:::-;30738:84;30559:269;30508:320;;;:::o;30834:281::-;30917:27;30939:4;30917:27;:::i;:::-;30909:6;30905:40;31047:6;31035:10;31032:22;31011:18;30999:10;30996:34;30993:62;30990:88;;;31058:18;;:::i;:::-;30990:88;31098:10;31094:2;31087:22;30877:238;30834:281;;:::o;31121:233::-;31160:3;31183:24;31201:5;31183:24;:::i;:::-;31174:33;;31229:66;31222:5;31219:77;31216:103;;;31299:18;;:::i;:::-;31216:103;31346:1;31339:5;31335:13;31328:20;;31121:233;;;:::o;31360:176::-;31392:1;31409:20;31427:1;31409:20;:::i;:::-;31404:25;;31443:20;31461:1;31443:20;:::i;:::-;31438:25;;31482:1;31472:35;;31487:18;;:::i;:::-;31472:35;31528:1;31525;31521:9;31516:14;;31360:176;;;;:::o;31542:180::-;31590:77;31587:1;31580:88;31687:4;31684:1;31677:15;31711:4;31708:1;31701:15;31728:180;31776:77;31773:1;31766:88;31873:4;31870:1;31863:15;31897:4;31894:1;31887:15;31914:180;31962:77;31959:1;31952:88;32059:4;32056:1;32049:15;32083:4;32080:1;32073:15;32100:180;32148:77;32145:1;32138:88;32245:4;32242:1;32235:15;32269:4;32266:1;32259:15;32286:180;32334:77;32331:1;32324:88;32431:4;32428:1;32421:15;32455:4;32452:1;32445:15;32472:183;32507:3;32545:1;32527:16;32524:23;32521:128;;;32583:1;32580;32577;32562:23;32605:34;32636:1;32630:8;32605:34;:::i;:::-;32598:41;;32521:128;32472:183;:::o;32661:117::-;32770:1;32767;32760:12;32784:117;32893:1;32890;32883:12;32907:117;33016:1;33013;33006:12;33030:117;33139:1;33136;33129:12;33153:117;33262:1;33259;33252:12;33276:102;33317:6;33368:2;33364:7;33359:2;33352:5;33348:14;33344:28;33334:38;;33276:102;;;:::o;33384:106::-;33428:8;33477:5;33472:3;33468:15;33447:36;;33384:106;;;:::o;33496:239::-;33636:34;33632:1;33624:6;33620:14;33613:58;33705:22;33700:2;33692:6;33688:15;33681:47;33496:239;:::o;33741:227::-;33881:34;33877:1;33869:6;33865:14;33858:58;33950:10;33945:2;33937:6;33933:15;33926:35;33741:227;:::o;33974:228::-;34114:34;34110:1;34102:6;34098:14;34091:58;34183:11;34178:2;34170:6;34166:15;34159:36;33974:228;:::o;34208:229::-;34348:34;34344:1;34336:6;34332:14;34325:58;34417:12;34412:2;34404:6;34400:15;34393:37;34208:229;:::o;34443:224::-;34583:34;34579:1;34571:6;34567:14;34560:58;34652:7;34647:2;34639:6;34635:15;34628:32;34443:224;:::o;34673:237::-;34813:34;34809:1;34801:6;34797:14;34790:58;34882:20;34877:2;34869:6;34865:15;34858:45;34673:237;:::o;34916:229::-;35056:34;35052:1;35044:6;35040:14;35033:58;35125:12;35120:2;35112:6;35108:15;35101:37;34916:229;:::o;35151:155::-;35291:7;35287:1;35279:6;35275:14;35268:31;35151:155;:::o;35312:228::-;35452:34;35448:1;35440:6;35436:14;35429:58;35521:11;35516:2;35508:6;35504:15;35497:36;35312:228;:::o;35546:::-;35686:34;35682:1;35674:6;35670:14;35663:58;35755:11;35750:2;35742:6;35738:15;35731:36;35546:228;:::o;35780:227::-;35920:34;35916:1;35908:6;35904:14;35897:58;35989:10;35984:2;35976:6;35972:15;35965:35;35780:227;:::o;36013:711::-;36052:3;36090:4;36072:16;36069:26;36066:39;;;36098:5;;36066:39;36127:20;;:::i;:::-;36202:1;36184:16;36180:24;36177:1;36171:4;36156:49;36235:4;36229:11;36334:16;36327:4;36319:6;36315:17;36312:39;36279:18;36271:6;36268:30;36252:113;36249:146;;;36380:5;;;;36249:146;36426:6;36420:4;36416:17;36462:3;36456:10;36489:18;36481:6;36478:30;36475:43;;;36511:5;;;;;;36475:43;36559:6;36552:4;36547:3;36543:14;36539:27;36618:1;36600:16;36596:24;36590:4;36586:35;36581:3;36578:44;36575:57;;;36625:5;;;;;;;36575:57;36642;36690:6;36684:4;36680:17;36672:6;36668:30;36662:4;36642:57;:::i;:::-;36715:3;36708:10;;36056:668;;;;;36013:711;;:::o;36730:122::-;36803:24;36821:5;36803:24;:::i;:::-;36796:5;36793:35;36783:63;;36842:1;36839;36832:12;36783:63;36730:122;:::o;36858:116::-;36928:21;36943:5;36928:21;:::i;:::-;36921:5;36918:32;36908:60;;36964:1;36961;36954:12;36908:60;36858:116;:::o;36980:120::-;37052:23;37069:5;37052:23;:::i;:::-;37045:5;37042:34;37032:62;;37090:1;37087;37080:12;37032:62;36980:120;:::o;37106:122::-;37179:24;37197:5;37179:24;:::i;:::-;37172:5;37169:35;37159:63;;37218:1;37215;37208:12;37159:63;37106:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2099000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "796",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1183,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1191,
									"end": 1195,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1183,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1183,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1183,
									"end": 1190,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1183,
									"end": 1196,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1183,
									"end": 1196,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1183,
									"end": 1196,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1183,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1183,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8349,
									"end": 8435,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 8349,
									"end": 8435,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8422,
									"end": 8428,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8415,
									"end": 8419,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8415,
									"end": 8428,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8415,
									"end": 8428,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8415,
									"end": 8428,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8415,
									"end": 8428,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8415,
									"end": 8428,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8415,
									"end": 8428,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8415,
									"end": 8428,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8415,
									"end": 8428,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8415,
									"end": 8428,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 8415,
									"end": 8428,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8415,
									"end": 8428,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8415,
									"end": 8428,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 8415,
									"end": 8428,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8415,
									"end": 8428,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8415,
									"end": 8428,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8415,
									"end": 8428,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8349,
									"end": 8435,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8349,
									"end": 8435,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 567,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 545,
									"end": 562,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 541,
									"end": 568,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 531,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 531,
									"end": 653,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 682,
									"end": 688,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 676,
									"end": 689,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 793,
									"end": 796,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 766,
									"end": 783,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 698,
									"end": 797,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 698,
									"end": 797,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 521,
									"end": 803,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 889,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 938,
									"end": 940,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 926,
									"end": 935,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 917,
									"end": 924,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 913,
									"end": 936,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 909,
									"end": 941,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1085,
									"end": 1086,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1083,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1070,
									"end": 1087,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1064,
									"end": 1088,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1115,
									"end": 1133,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1107,
									"end": 1113,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1104,
									"end": 1134,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 1308,
									"end": 1315,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1299,
									"end": 1305,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1288,
									"end": 1297,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1284,
									"end": 1306,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1232,
									"end": 1316,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1232,
									"end": 1316,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1035,
									"end": 1326,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1373,
									"end": 1379,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1390,
									"end": 1420,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1390,
									"end": 1420,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 1457,
									"end": 1461,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1449,
									"end": 1455,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1507,
									"end": 1513,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1540,
									"end": 1542,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1534,
									"end": 1543,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1524,
									"end": 1543,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1524,
									"end": 1543,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1617,
									"end": 1621,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1707,
									"end": 1725,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1696,
									"end": 1726,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 1789,
									"end": 1795,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1759,
									"end": 1796,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1759,
									"end": 1796,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1851,
									"end": 1855,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1849,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1841,
									"end": 1856,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1833,
									"end": 1856,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1833,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1937,
									"end": 1938,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1961,
									"end": 1967,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1958,
									"end": 1959,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1955,
									"end": 1968,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2046,
									"end": 2047,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2044,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2037,
									"end": 2048,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2031,
									"end": 2049,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2027,
									"end": 2028,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 2025,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2018,
									"end": 2029,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2011,
									"end": 2050,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1983,
									"end": 1985,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 1981,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1976,
									"end": 1986,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1971,
									"end": 1986,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1971,
									"end": 1986,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2078,
									"end": 2084,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2075,
									"end": 2076,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2072,
									"end": 2085,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2158,
									"end": 2159,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2149,
									"end": 2155,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2144,
									"end": 2147,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2140,
									"end": 2156,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2133,
									"end": 2160,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1918,
									"end": 2176,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2226,
									"end": 2232,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2263,
									"end": 2264,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 2257,
									"end": 2261,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2253,
									"end": 2265,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 2243,
									"end": 2265,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2243,
									"end": 2265,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2310,
									"end": 2311,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2304,
									"end": 2308,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2312,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2331,
									"end": 2349,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2387,
									"end": 2391,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 2379,
									"end": 2385,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2375,
									"end": 2392,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2392,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2392,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2449,
									"end": 2451,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2441,
									"end": 2447,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2438,
									"end": 2452,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2436,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2415,
									"end": 2453,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2233,
									"end": 2502,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 2613,
									"end": 2617,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2583,
									"end": 2589,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2619,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2721,
									"end": 2727,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2709,
									"end": 2719,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2706,
									"end": 2728,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2685,
									"end": 2703,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2673,
									"end": 2683,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2670,
									"end": 2704,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2667,
									"end": 2729,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "tag",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2772,
									"end": 2782,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2770,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2761,
									"end": 2783,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2551,
									"end": 2789,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 2795,
									"end": 2975,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2795,
									"end": 2975,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2843,
									"end": 2920,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2840,
									"end": 2841,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2833,
									"end": 2921,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2940,
									"end": 2944,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 2937,
									"end": 2938,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 2930,
									"end": 2945,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2964,
									"end": 2968,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2961,
									"end": 2962,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2969,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2981,
									"end": 3161,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 2981,
									"end": 3161,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3029,
									"end": 3106,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3026,
									"end": 3027,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3019,
									"end": 3107,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3126,
									"end": 3130,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 3123,
									"end": 3124,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3116,
									"end": 3131,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3150,
									"end": 3154,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3147,
									"end": 3148,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3140,
									"end": 3155,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3167,
									"end": 3284,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 3167,
									"end": 3284,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3276,
									"end": 3277,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3273,
									"end": 3274,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3266,
									"end": 3278,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3290,
									"end": 3407,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 3290,
									"end": 3407,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3400,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3396,
									"end": 3397,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3389,
									"end": 3401,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3413,
									"end": 3530,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 3413,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3522,
									"end": 3523,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3519,
									"end": 3520,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3512,
									"end": 3524,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3536,
									"end": 3653,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 3536,
									"end": 3653,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3645,
									"end": 3646,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3642,
									"end": 3643,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3635,
									"end": 3647,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3700,
									"end": 3706,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3751,
									"end": 3753,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 3747,
									"end": 3754,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3742,
									"end": 3744,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 3735,
									"end": 3740,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3731,
									"end": 3745,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3727,
									"end": 3755,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3717,
									"end": 3755,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3717,
									"end": 3755,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 604,
									"end": 17298,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f30735d6d6e548d47e8ac77a714b032de212100e2cdc9b99f235c6840f1c669d64736f6c63430008070033",
									".code": [
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH",
											"source": 2,
											"value": "E985E9C5"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH",
											"source": 2,
											"value": "F242432A"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH",
											"source": 2,
											"value": "FDD58E"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH",
											"source": 2,
											"value": "2EB2C2D6"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 604,
											"end": 17298,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2497,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2476,
											"end": 2497,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2483,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2497,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2476,
											"end": 2497,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2497,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2497,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2468,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2570,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2574,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2571,
											"end": 2573,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2574,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2574,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2574,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2561,
											"end": 2574,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2574,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2574,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2574,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2574,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2561,
											"end": 2574,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2574,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2574,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2582,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2583,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2561,
											"end": 2583,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2583,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2561,
											"end": 2583,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2583,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2583,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2583,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2561,
											"end": 2583,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2583,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2583,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2583,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2561,
											"end": 2583,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2583,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2583,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2590,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1372,
											"end": 1376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1407,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1407,
											"end": 1448,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1448,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1418,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1407,
											"end": 1448,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1448,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1448,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1407,
											"end": 1516,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1479,
											"end": 1516,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1464,
											"end": 1516,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1516,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1516,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1475,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1516,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1516,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1516,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1516,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1516,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1407,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1568,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1407,
											"end": 1568,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1568,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1556,
											"end": 1567,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1532,
											"end": 1568,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1532,
											"end": 1568,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1532,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1568,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1407,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1568,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1568,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2037,
											"end": 2050,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2123,
											"end": 2127,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2162,
											"end": 2164,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2089,
											"end": 2204,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2214,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2214,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2221,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4470,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4470,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4470,
											"end": 4482,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4470,
											"end": 4482,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4470,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4482,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4462,
											"end": 4482,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4466,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4482,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4462,
											"end": 4482,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4482,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4462,
											"end": 4522,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4486,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4503,
											"end": 4507,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4509,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4509,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4509,
											"end": 4521,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4509,
											"end": 4521,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4509,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4486,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4486,
											"end": 4522,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4486,
											"end": 4522,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4486,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4522,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4462,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4441,
											"end": 4598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4631,
											"end": 4635,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4637,
											"end": 4639,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4641,
											"end": 4644,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4646,
											"end": 4653,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4655,
											"end": 4659,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4608,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4667,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2914,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2957,
											"end": 2960,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2938,
											"end": 2946,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2938,
											"end": 2953,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2938,
											"end": 2967,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2930,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3054,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3079,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3071,
											"end": 3086,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3103,
											"end": 3112,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3218,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3098,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3130,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3137,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3119,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3137,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3218,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3098,
											"end": 3218,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3177,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3187,
											"end": 3195,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3203,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3204,
											"end": 3205,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3177,
											"end": 3186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3177,
											"end": 3207,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3177,
											"end": 3207,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3177,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3171,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3172,
											"end": 3173,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3174,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3174,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3174,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3174,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3158,
											"end": 3174,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3158,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3158,
											"end": 3174,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3158,
											"end": 3174,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3158,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3174,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3158,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3174,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3158,
											"end": 3174,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3174,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3158,
											"end": 3174,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3174,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3207,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3207,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3207,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3207,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3207,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3139,
											"end": 3142,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3139,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3139,
											"end": 3142,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3139,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3139,
											"end": 3142,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3139,
											"end": 3142,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3139,
											"end": 3142,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3139,
											"end": 3142,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3139,
											"end": 3142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3098,
											"end": 3218,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3218,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3098,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3248,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3248,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3248,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3248,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 3255,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3417,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3436,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3458,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3468,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3417,
											"end": 3469,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3417,
											"end": 3469,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3417,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3476,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3642,
											"end": 3646,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3684,
											"end": 3691,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3665,
											"end": 3692,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 3701,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3658,
											"end": 3702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3658,
											"end": 3702,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3709,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3984,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3984,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3984,
											"end": 3996,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3984,
											"end": 3996,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3984,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 3996,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3976,
											"end": 3996,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 3980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 3996,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3976,
											"end": 3996,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 3996,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 4036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3976,
											"end": 4036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 4036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4000,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4017,
											"end": 4021,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4023,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4023,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4023,
											"end": 4035,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4023,
											"end": 4035,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4023,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4000,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4000,
											"end": 4036,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4036,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4000,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 4036,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3976,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3955,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4113,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4131,
											"end": 4135,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4137,
											"end": 4139,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4143,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4145,
											"end": 4151,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4157,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4113,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4113,
											"end": 4158,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4113,
											"end": 4158,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4113,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 4165,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 384,
											"end": 397,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 606,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 601,
											"end": 611,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 597,
											"end": 648,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 9,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 627,
											"end": 637,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 627,
											"end": 637,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 597,
											"end": 648,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 657,
											"end": 669,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 657,
											"end": 677,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 657,
											"end": 677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 687,
											"end": 701,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 726,
											"end": 727,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 722,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 718,
											"end": 727,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 743,
											"end": 751,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 743,
											"end": 751,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 743,
											"end": 751,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 773,
											"end": 775,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 765,
											"end": 775,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 795,
											"end": 814,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 795,
											"end": 834,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 795,
											"end": 834,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 844,
											"end": 994,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 860,
											"end": 861,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 851,
											"end": 861,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 887,
											"end": 888,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 877,
											"end": 888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 945,
											"end": 950,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 945,
											"end": 955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 932,
											"end": 956,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 919,
											"end": 958,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 919,
											"end": 958,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 902,
											"end": 908,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 902,
											"end": 916,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 902,
											"end": 958,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 958,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 902,
											"end": 958,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 902,
											"end": 958,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 902,
											"end": 958,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 958,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 902,
											"end": 958,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 902,
											"end": 958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 981,
											"end": 983,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 972,
											"end": 983,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 844,
											"end": 994,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1017,
											"end": 1023,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6411,
											"end": 7526,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 6411,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6631,
											"end": 6638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6631,
											"end": 6645,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6620,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6627,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6645,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 6609,
											"end": 6690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6723,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6708,
											"end": 6724,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6708,
											"end": 6724,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6708,
											"end": 6710,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6708,
											"end": 6724,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6708,
											"end": 6724,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6708,
											"end": 6724,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6708,
											"end": 6724,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 6700,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6777,
											"end": 6793,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6796,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 6796,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 6796,
											"end": 6808,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6796,
											"end": 6808,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 6796,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6777,
											"end": 6808,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6777,
											"end": 6808,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 6840,
											"end": 6848,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6854,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6856,
											"end": 6858,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6860,
											"end": 6863,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6865,
											"end": 6872,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6874,
											"end": 6878,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 6819,
											"end": 6879,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6819,
											"end": 6879,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 6819,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6895,
											"end": 6904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6890,
											"end": 7301,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 6890,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6914,
											"end": 6917,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6914,
											"end": 6924,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6924,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7301,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 6890,
											"end": 7301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 6955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6958,
											"end": 6961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6962,
											"end": 6963,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 6964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 6964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6978,
											"end": 6992,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6995,
											"end": 7002,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7003,
											"end": 7004,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6978,
											"end": 7005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6978,
											"end": 7005,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7020,
											"end": 7039,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7042,
											"end": 7051,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7055,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7052,
											"end": 7054,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7055,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7055,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7055,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7042,
											"end": 7055,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7055,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7055,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7055,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7042,
											"end": 7055,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7055,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7042,
											"end": 7055,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7061,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7056,
											"end": 7060,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7061,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7042,
											"end": 7061,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7061,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7042,
											"end": 7061,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7061,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7042,
											"end": 7061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7061,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7061,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7042,
											"end": 7061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7061,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7042,
											"end": 7061,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7042,
											"end": 7061,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7020,
											"end": 7061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7020,
											"end": 7061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7104,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7104,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7104,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 7075,
											"end": 7151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7229,
											"end": 7235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7215,
											"end": 7226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7215,
											"end": 7235,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7193,
											"end": 7206,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7203,
											"end": 7205,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7206,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7206,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7193,
											"end": 7206,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7206,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7206,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7193,
											"end": 7206,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7206,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7193,
											"end": 7206,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7212,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7207,
											"end": 7211,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7212,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7193,
											"end": 7212,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7212,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7193,
											"end": 7212,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7212,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7212,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7193,
											"end": 7212,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7212,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7212,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7193,
											"end": 7212,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7212,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7193,
											"end": 7212,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7263,
											"end": 7276,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7273,
											"end": 7275,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7276,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7276,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7276,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7263,
											"end": 7276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7276,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7276,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7276,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7263,
											"end": 7276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7276,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7263,
											"end": 7276,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7280,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7277,
											"end": 7279,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7280,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7263,
											"end": 7280,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7280,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7263,
											"end": 7280,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7280,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7280,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7280,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7263,
											"end": 7280,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7280,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7280,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7280,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7263,
											"end": 7280,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7280,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7263,
											"end": 7280,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7280,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7263,
											"end": 7290,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7290,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7290,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 7263,
											"end": 7290,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7263,
											"end": 7290,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7263,
											"end": 7290,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 7263,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7290,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7290,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6926,
											"end": 6929,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6926,
											"end": 6929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6926,
											"end": 6929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6926,
											"end": 6929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6926,
											"end": 6929,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6926,
											"end": 6929,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6926,
											"end": 6929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6926,
											"end": 6929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6926,
											"end": 6929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 6890,
											"end": 7301,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7301,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 6890,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7348,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7340,
											"end": 7344,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7350,
											"end": 7353,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7362,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7316,
											"end": 7363,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 7394,
											"end": 7402,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7404,
											"end": 7408,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7410,
											"end": 7412,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7414,
											"end": 7417,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7419,
											"end": 7426,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7432,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 7374,
											"end": 7433,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7374,
											"end": 7433,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 7374,
											"end": 7433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7444,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 7480,
											"end": 7488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7490,
											"end": 7494,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7496,
											"end": 7498,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7500,
											"end": 7503,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7512,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7514,
											"end": 7518,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7444,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7444,
											"end": 7519,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7444,
											"end": 7519,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 7444,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 7526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 7526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 7526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 7526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 7526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 7526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 7526,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12951,
											"end": 13274,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 12951,
											"end": 13274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13101,
											"end": 13109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13092,
											"end": 13109,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13092,
											"end": 13109,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13092,
											"end": 13097,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13092,
											"end": 13109,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13092,
											"end": 13109,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13092,
											"end": 13109,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 13092,
											"end": 13109,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 13084,
											"end": 13155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13203,
											"end": 13211,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13183,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13165,
											"end": 13190,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13184,
											"end": 13189,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13190,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13165,
											"end": 13190,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13190,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13165,
											"end": 13190,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13190,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13190,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13190,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13165,
											"end": 13190,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13190,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13190,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13190,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13190,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13165,
											"end": 13190,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13190,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13165,
											"end": 13190,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13191,
											"end": 13199,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13200,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13165,
											"end": 13200,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13200,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13165,
											"end": 13200,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13200,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13200,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13165,
											"end": 13200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13200,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13200,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13165,
											"end": 13200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13165,
											"end": 13200,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13165,
											"end": 13211,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 13165,
											"end": 13211,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13211,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13211,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13211,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13211,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 13165,
											"end": 13211,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13211,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13211,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13211,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13211,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13211,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13211,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13211,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13211,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13165,
											"end": 13211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13248,
											"end": 13256,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13226,
											"end": 13267,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13226,
											"end": 13267,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13241,
											"end": 13246,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13226,
											"end": 13267,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13226,
											"end": 13267,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13226,
											"end": 13267,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13258,
											"end": 13266,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13226,
											"end": 13267,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13226,
											"end": 13267,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13226,
											"end": 13267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 13226,
											"end": 13267,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13226,
											"end": 13267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13226,
											"end": 13267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 13226,
											"end": 13267,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13226,
											"end": 13267,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 13226,
											"end": 13267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13226,
											"end": 13267,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13226,
											"end": 13267,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13226,
											"end": 13267,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13226,
											"end": 13267,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13226,
											"end": 13267,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13226,
											"end": 13267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13226,
											"end": 13267,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 12951,
											"end": 13274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12951,
											"end": 13274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12951,
											"end": 13274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12951,
											"end": 13274,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5118,
											"end": 6065,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5118,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5313,
											"end": 5314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5299,
											"end": 5315,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5299,
											"end": 5315,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5301,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5315,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5299,
											"end": 5315,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5315,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5315,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 5291,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5368,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5387,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 5387,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5387,
											"end": 5399,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5387,
											"end": 5399,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 5387,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5368,
											"end": 5399,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5368,
											"end": 5399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5429,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 5450,
											"end": 5452,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 5432,
											"end": 5453,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5432,
											"end": 5453,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 5432,
											"end": 5453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5463,
											"end": 5487,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5490,
											"end": 5515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5508,
											"end": 5514,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5490,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 5490,
											"end": 5515,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5490,
											"end": 5515,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5490,
											"end": 5515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5463,
											"end": 5515,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5463,
											"end": 5515,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5547,
											"end": 5555,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5557,
											"end": 5561,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5563,
											"end": 5565,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5570,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5572,
											"end": 5579,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5581,
											"end": 5585,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5526,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5526,
											"end": 5586,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5526,
											"end": 5586,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5526,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5616,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5619,
											"end": 5628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5632,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5629,
											"end": 5631,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5632,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5632,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5632,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5619,
											"end": 5632,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5632,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5632,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5632,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5632,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5619,
											"end": 5632,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5632,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5619,
											"end": 5632,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5638,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5619,
											"end": 5638,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5638,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5619,
											"end": 5638,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5638,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5638,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5619,
											"end": 5638,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5638,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5638,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5619,
											"end": 5638,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5619,
											"end": 5638,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5638,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5671,
											"end": 5677,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5677,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5677,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 5648,
											"end": 5724,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5794,
											"end": 5800,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5800,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5767,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5758,
											"end": 5771,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5770,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5771,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5771,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5771,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5758,
											"end": 5771,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5771,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5771,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5771,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5758,
											"end": 5771,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5771,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5758,
											"end": 5771,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5777,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5772,
											"end": 5776,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5777,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5758,
											"end": 5777,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5777,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5758,
											"end": 5777,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5777,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5777,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5777,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5758,
											"end": 5777,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5777,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5777,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5777,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5777,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5758,
											"end": 5777,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5777,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5758,
											"end": 5777,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5800,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5841,
											"end": 5847,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5820,
											"end": 5833,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5832,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5833,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5833,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5833,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5820,
											"end": 5833,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5833,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5833,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5833,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5833,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5820,
											"end": 5833,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5833,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5820,
											"end": 5833,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5837,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5837,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5820,
											"end": 5837,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5837,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5820,
											"end": 5837,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5837,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5837,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5837,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5820,
											"end": 5837,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5837,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5837,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5837,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5820,
											"end": 5837,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5837,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5820,
											"end": 5837,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5837,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5820,
											"end": 5847,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5847,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5847,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 5820,
											"end": 5847,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5820,
											"end": 5847,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5820,
											"end": 5847,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 5820,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5847,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5847,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5847,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5820,
											"end": 5847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5894,
											"end": 5896,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5888,
											"end": 5892,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5886,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5898,
											"end": 5900,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5908,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5863,
											"end": 5909,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 5920,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 5940,
											"end": 5948,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5950,
											"end": 5954,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5956,
											"end": 5958,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5960,
											"end": 5963,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5965,
											"end": 5972,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5974,
											"end": 5978,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5920,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5920,
											"end": 5979,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5920,
											"end": 5979,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 5920,
											"end": 5979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5990,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 6021,
											"end": 6029,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6031,
											"end": 6035,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6037,
											"end": 6039,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6041,
											"end": 6043,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6045,
											"end": 6051,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6053,
											"end": 6057,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5990,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 5990,
											"end": 6058,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5990,
											"end": 6058,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 5990,
											"end": 6058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5281,
											"end": 6065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5281,
											"end": 6065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5281,
											"end": 6065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5281,
											"end": 6065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5118,
											"end": 6065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5118,
											"end": 6065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5118,
											"end": 6065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5118,
											"end": 6065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5118,
											"end": 6065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5118,
											"end": 6065,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14208,
											"end": 14422,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 14208,
											"end": 14422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14208,
											"end": 14422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14208,
											"end": 14422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14208,
											"end": 14422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14208,
											"end": 14422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14208,
											"end": 14422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14208,
											"end": 14422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14208,
											"end": 14422,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15355,
											"end": 15568,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 15355,
											"end": 15568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15355,
											"end": 15568,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15355,
											"end": 15568,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15355,
											"end": 15568,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15355,
											"end": 15568,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15355,
											"end": 15568,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15355,
											"end": 15568,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15355,
											"end": 15568,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 16305,
											"end": 17097,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 16305,
											"end": 17097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16537,
											"end": 16552,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 16537,
											"end": 16539,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16537,
											"end": 16550,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16537,
											"end": 16550,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16537,
											"end": 16550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 16537,
											"end": 16552,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16537,
											"end": 16552,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 16537,
											"end": 16552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16533,
											"end": 17091,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16533,
											"end": 17091,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 16533,
											"end": 17091,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16589,
											"end": 16591,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16615,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16572,
											"end": 16615,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16615,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 16616,
											"end": 16624,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16626,
											"end": 16630,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16632,
											"end": 16635,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 16637,
											"end": 16644,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 16646,
											"end": 16650,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 16572,
											"end": 16651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16957,
											"end": 16963,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16950,
											"end": 16964,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16950,
											"end": 16964,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16950,
											"end": 16964,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16950,
											"end": 16964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16950,
											"end": 16964,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16950,
											"end": 16964,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16950,
											"end": 16964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16950,
											"end": 16964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 16950,
											"end": 16964,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16950,
											"end": 16964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16950,
											"end": 16964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 16950,
											"end": 16964,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16950,
											"end": 16964,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 16950,
											"end": 16964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16950,
											"end": 16964,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16950,
											"end": 16964,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16950,
											"end": 16964,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16950,
											"end": 16964,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16950,
											"end": 16964,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16950,
											"end": 16964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16950,
											"end": 16964,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17004,
											"end": 17066,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17004,
											"end": 17066,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17004,
											"end": 17066,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17004,
											"end": 17066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17004,
											"end": 17066,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17004,
											"end": 17066,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17004,
											"end": 17066,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17004,
											"end": 17066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 17004,
											"end": 17066,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17004,
											"end": 17066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 17004,
											"end": 17066,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17004,
											"end": 17066,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 17004,
											"end": 17066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17004,
											"end": 17066,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17004,
											"end": 17066,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17004,
											"end": 17066,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17004,
											"end": 17066,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17004,
											"end": 17066,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17004,
											"end": 17066,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17004,
											"end": 17066,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 16568,
											"end": 17081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16742,
											"end": 16790,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 16742,
											"end": 16790,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 16742,
											"end": 16790,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 16730,
											"end": 16790,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16730,
											"end": 16790,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 16730,
											"end": 16790,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16730,
											"end": 16738,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16730,
											"end": 16790,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16730,
											"end": 16790,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 16730,
											"end": 16790,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16730,
											"end": 16790,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16726,
											"end": 16883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 16726,
											"end": 16883,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16814,
											"end": 16864,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16814,
											"end": 16864,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16814,
											"end": 16864,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16814,
											"end": 16864,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16814,
											"end": 16864,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16814,
											"end": 16864,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16814,
											"end": 16864,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16814,
											"end": 16864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 16814,
											"end": 16864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16814,
											"end": 16864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 16814,
											"end": 16864,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16814,
											"end": 16864,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 16814,
											"end": 16864,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16814,
											"end": 16864,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16814,
											"end": 16864,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16814,
											"end": 16864,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16814,
											"end": 16864,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16814,
											"end": 16864,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16814,
											"end": 16864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16814,
											"end": 16864,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16726,
											"end": 16883,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 16726,
											"end": 16883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16652,
											"end": 16897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16533,
											"end": 17091,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 16533,
											"end": 17091,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16305,
											"end": 17097,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16305,
											"end": 17097,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16305,
											"end": 17097,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16305,
											"end": 17097,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16305,
											"end": 17097,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16305,
											"end": 17097,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16305,
											"end": 17097,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 17103,
											"end": 17296,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 17103,
											"end": 17296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17169,
											"end": 17185,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 17197,
											"end": 17219,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17236,
											"end": 17237,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17238,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17197,
											"end": 17238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17197,
											"end": 17238,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17259,
											"end": 17266,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17248,
											"end": 17253,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17254,
											"end": 17255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17248,
											"end": 17256,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17248,
											"end": 17256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17248,
											"end": 17256,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17248,
											"end": 17256,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 17248,
											"end": 17256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 17248,
											"end": 17256,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17248,
											"end": 17256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 17248,
											"end": 17256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 17248,
											"end": 17256,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17248,
											"end": 17256,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 17248,
											"end": 17256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17248,
											"end": 17256,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 17248,
											"end": 17256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17248,
											"end": 17256,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17248,
											"end": 17256,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 17248,
											"end": 17256,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17248,
											"end": 17256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17248,
											"end": 17256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17248,
											"end": 17266,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17248,
											"end": 17266,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17248,
											"end": 17266,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17248,
											"end": 17266,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17248,
											"end": 17266,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17284,
											"end": 17289,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17277,
											"end": 17289,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17277,
											"end": 17289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17277,
											"end": 17289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17103,
											"end": 17296,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17103,
											"end": 17296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17103,
											"end": 17296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17103,
											"end": 17296,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15574,
											"end": 16299,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 15574,
											"end": 16299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 15781,
											"end": 15783,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15794,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15781,
											"end": 15794,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 15781,
											"end": 15796,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15781,
											"end": 15796,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 15781,
											"end": 15796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15777,
											"end": 16293,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15777,
											"end": 16293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 15777,
											"end": 16293,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15833,
											"end": 15835,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15854,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15816,
											"end": 15854,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15854,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 15855,
											"end": 15863,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15865,
											"end": 15869,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15871,
											"end": 15873,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15875,
											"end": 15881,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15883,
											"end": 15887,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 15816,
											"end": 15888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16159,
											"end": 16165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16152,
											"end": 16166,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16152,
											"end": 16166,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16152,
											"end": 16166,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16152,
											"end": 16166,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16152,
											"end": 16166,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16152,
											"end": 16166,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16152,
											"end": 16166,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16152,
											"end": 16166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 16152,
											"end": 16166,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16152,
											"end": 16166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16152,
											"end": 16166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 16152,
											"end": 16166,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16152,
											"end": 16166,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 16152,
											"end": 16166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16152,
											"end": 16166,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16152,
											"end": 16166,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16152,
											"end": 16166,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16152,
											"end": 16166,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16152,
											"end": 16166,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16152,
											"end": 16166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16152,
											"end": 16166,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16206,
											"end": 16268,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16206,
											"end": 16268,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16206,
											"end": 16268,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16206,
											"end": 16268,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16206,
											"end": 16268,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16206,
											"end": 16268,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16206,
											"end": 16268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16206,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 16206,
											"end": 16268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16206,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 16206,
											"end": 16268,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16206,
											"end": 16268,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 16206,
											"end": 16268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16206,
											"end": 16268,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16206,
											"end": 16268,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16206,
											"end": 16268,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16206,
											"end": 16268,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16206,
											"end": 16268,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16206,
											"end": 16268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16206,
											"end": 16268,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 15812,
											"end": 16283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15949,
											"end": 15992,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 15949,
											"end": 15992,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 15949,
											"end": 15992,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 15937,
											"end": 15992,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15937,
											"end": 15992,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15937,
											"end": 15992,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15937,
											"end": 15945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15937,
											"end": 15992,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15937,
											"end": 15992,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15937,
											"end": 15992,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15937,
											"end": 15992,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15933,
											"end": 16085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 15933,
											"end": 16085,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16016,
											"end": 16066,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16016,
											"end": 16066,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16016,
											"end": 16066,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16016,
											"end": 16066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16016,
											"end": 16066,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16016,
											"end": 16066,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16016,
											"end": 16066,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16016,
											"end": 16066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 16016,
											"end": 16066,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16016,
											"end": 16066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 16016,
											"end": 16066,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16016,
											"end": 16066,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 16016,
											"end": 16066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16016,
											"end": 16066,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16016,
											"end": 16066,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16016,
											"end": 16066,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16016,
											"end": 16066,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16016,
											"end": 16066,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16016,
											"end": 16066,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16016,
											"end": 16066,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15933,
											"end": 16085,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 15933,
											"end": 16085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15889,
											"end": 16099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15777,
											"end": 16293,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 15777,
											"end": 16293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15574,
											"end": 16299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15574,
											"end": 16299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15574,
											"end": 16299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15574,
											"end": 16299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15574,
											"end": 16299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15574,
											"end": 16299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15574,
											"end": 16299,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 120,
											"end": 125,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 298,
											"end": 314,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 385,
											"end": 388,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 377,
											"end": 381,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 360,
											"end": 363,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 356,
											"end": 383,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 353,
											"end": 389,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 350,
											"end": 493,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 350,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 350,
											"end": 493,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 524,
											"end": 525,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 521,
											"end": 534,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 502,
											"end": 740,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 657,
											"end": 660,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 612,
											"end": 662,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 682,
											"end": 696,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 675,
											"end": 696,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 675,
											"end": 696,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 716,
											"end": 730,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 709,
											"end": 730,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 562,
											"end": 740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 542,
											"end": 551,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 537,
											"end": 551,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 537,
											"end": 551,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 506,
											"end": 520,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 865,
											"end": 870,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 890,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 881,
											"end": 971,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 881,
											"end": 971,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 991,
											"end": 996,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1020,
											"end": 1026,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1013,
											"end": 1018,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1027,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1054,
											"end": 1058,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1052,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1043,
											"end": 1059,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1059,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1059,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1130,
											"end": 1133,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1122,
											"end": 1126,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1120,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1127,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1105,
											"end": 1108,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1128,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1098,
											"end": 1134,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1262,
											"end": 1263,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1272,
											"end": 1278,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1340,
											"end": 1343,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 1402,
											"end": 1405,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1390,
											"end": 1400,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1367,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1357,
											"end": 1407,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1436,
											"end": 1440,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1431,
											"end": 1434,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1470,
											"end": 1474,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1465,
											"end": 1468,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1461,
											"end": 1475,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1307,
											"end": 1485,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1294,
											"end": 1295,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1287,
											"end": 1296,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1265,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 1491,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 1491,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1574,
											"end": 1579,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 1656,
											"end": 1662,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1590,
											"end": 1664,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1590,
											"end": 1664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1680,
											"end": 1685,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1673,
											"end": 1694,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1729,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1718,
											"end": 1723,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1714,
											"end": 1730,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1766,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1749,
											"end": 1752,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 1767,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 1894,
											"end": 1900,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 1892,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1884,
											"end": 1887,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1959,
											"end": 1964,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1997,
											"end": 2003,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 2004,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 2040,
											"end": 2045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2146,
											"end": 2151,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2198,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2188,
											"end": 2192,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2180,
											"end": 2186,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2176,
											"end": 2193,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2172,
											"end": 2199,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2307,
											"end": 2327,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 2435,
											"end": 2438,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2427,
											"end": 2433,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 2424,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2418,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2408,
											"end": 2425,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2336,
											"end": 2439,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2336,
											"end": 2439,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2152,
											"end": 2445,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 2544,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2591,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2581,
											"end": 2585,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2573,
											"end": 2579,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2569,
											"end": 2586,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2592,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2713,
											"end": 2719,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2700,
											"end": 2720,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 2828,
											"end": 2831,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2820,
											"end": 2826,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2813,
											"end": 2817,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2801,
											"end": 2818,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2729,
											"end": 2832,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2729,
											"end": 2832,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2545,
											"end": 2838,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2887,
											"end": 2892,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2931,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 2932,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2903,
											"end": 2932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2903,
											"end": 2932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 2965,
											"end": 2970,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3028,
											"end": 3033,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3072,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3053,
											"end": 3073,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 3108,
											"end": 3113,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3182,
											"end": 3187,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3207,
											"end": 3220,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3198,
											"end": 3220,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3198,
											"end": 3220,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 3255,
											"end": 3260,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3393,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3383,
											"end": 3387,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3375,
											"end": 3381,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3371,
											"end": 3388,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3515,
											"end": 3521,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3502,
											"end": 3522,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 3614,
											"end": 3617,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3606,
											"end": 3612,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3599,
											"end": 3603,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3591,
											"end": 3597,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3587,
											"end": 3604,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3531,
											"end": 3618,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3531,
											"end": 3618,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3347,
											"end": 3624,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3676,
											"end": 3681,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3720,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3701,
											"end": 3721,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3692,
											"end": 3721,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3692,
											"end": 3721,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 3757,
											"end": 3762,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3857,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3900,
											"end": 3902,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3879,
											"end": 3886,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3898,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3871,
											"end": 3903,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4026,
											"end": 4027,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 4096,
											"end": 4103,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4087,
											"end": 4093,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4076,
											"end": 4085,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4072,
											"end": 4094,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4041,
											"end": 4104,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4041,
											"end": 4104,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4114,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4153,
											"end": 4155,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 4224,
											"end": 4231,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4215,
											"end": 4221,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4204,
											"end": 4213,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4200,
											"end": 4222,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4169,
											"end": 4232,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4169,
											"end": 4232,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4124,
											"end": 4242,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4409,
											"end": 4415,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4417,
											"end": 4423,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4425,
											"end": 4431,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4441,
											"end": 4447,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4490,
											"end": 4493,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 4478,
											"end": 4487,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4465,
											"end": 4488,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4461,
											"end": 4494,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4617,
											"end": 4618,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 4687,
											"end": 4694,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4678,
											"end": 4684,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4667,
											"end": 4676,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 4663,
											"end": 4685,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4632,
											"end": 4695,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4632,
											"end": 4695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4588,
											"end": 4705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4744,
											"end": 4746,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 4815,
											"end": 4822,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4806,
											"end": 4812,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4795,
											"end": 4804,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 4791,
											"end": 4813,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4760,
											"end": 4823,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4760,
											"end": 4823,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4715,
											"end": 4833,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4900,
											"end": 4902,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4889,
											"end": 4898,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4872,
											"end": 4904,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4923,
											"end": 4929,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4920,
											"end": 4950,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 5128,
											"end": 5135,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5119,
											"end": 5125,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5108,
											"end": 5117,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5104,
											"end": 5126,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5048,
											"end": 5136,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5048,
											"end": 5136,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4843,
											"end": 5146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5213,
											"end": 5215,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5202,
											"end": 5211,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5185,
											"end": 5217,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5236,
											"end": 5242,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5233,
											"end": 5263,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 5441,
											"end": 5448,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5432,
											"end": 5438,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5417,
											"end": 5439,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5361,
											"end": 5449,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5361,
											"end": 5449,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5459,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5526,
											"end": 5529,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 5515,
											"end": 5524,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5511,
											"end": 5530,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5558,
											"end": 5576,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5550,
											"end": 5556,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5547,
											"end": 5577,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 5739,
											"end": 5746,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5730,
											"end": 5736,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5719,
											"end": 5728,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5715,
											"end": 5737,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5675,
											"end": 5747,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5675,
											"end": 5747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5469,
											"end": 5757,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5874,
											"end": 5880,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5882,
											"end": 5888,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5890,
											"end": 5896,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5898,
											"end": 5904,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5906,
											"end": 5912,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5955,
											"end": 5958,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 5943,
											"end": 5952,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5934,
											"end": 5941,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5926,
											"end": 5959,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6082,
											"end": 6083,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 6152,
											"end": 6159,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6132,
											"end": 6141,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 6128,
											"end": 6150,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6097,
											"end": 6160,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6097,
											"end": 6160,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6053,
											"end": 6170,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6209,
											"end": 6211,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 6280,
											"end": 6287,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6277,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6260,
											"end": 6269,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 6256,
											"end": 6278,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6225,
											"end": 6288,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6225,
											"end": 6288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6337,
											"end": 6339,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 6408,
											"end": 6415,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6399,
											"end": 6405,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6388,
											"end": 6397,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 6384,
											"end": 6406,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6353,
											"end": 6416,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6353,
											"end": 6416,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6308,
											"end": 6426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6465,
											"end": 6467,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 6536,
											"end": 6543,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6516,
											"end": 6525,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 6512,
											"end": 6534,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6481,
											"end": 6544,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6481,
											"end": 6544,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6436,
											"end": 6554,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6621,
											"end": 6624,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 6610,
											"end": 6619,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6606,
											"end": 6625,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6593,
											"end": 6626,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6653,
											"end": 6671,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6645,
											"end": 6651,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 6834,
											"end": 6841,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6825,
											"end": 6831,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6814,
											"end": 6823,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 6810,
											"end": 6832,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6842,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6842,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6564,
											"end": 6852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6930,
											"end": 6936,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6987,
											"end": 6989,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6975,
											"end": 6984,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6966,
											"end": 6973,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6962,
											"end": 6985,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6958,
											"end": 6990,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7113,
											"end": 7114,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 7183,
											"end": 7190,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7174,
											"end": 7180,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7163,
											"end": 7172,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7159,
											"end": 7181,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7128,
											"end": 7191,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7128,
											"end": 7191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7084,
											"end": 7201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7240,
											"end": 7242,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 7308,
											"end": 7315,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7299,
											"end": 7305,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7288,
											"end": 7297,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7256,
											"end": 7316,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7256,
											"end": 7316,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7211,
											"end": 7326,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7407,
											"end": 7413,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7415,
											"end": 7421,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7464,
											"end": 7466,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7452,
											"end": 7461,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7443,
											"end": 7450,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7435,
											"end": 7467,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7590,
											"end": 7591,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 7660,
											"end": 7667,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7651,
											"end": 7657,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7640,
											"end": 7649,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7636,
											"end": 7658,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7605,
											"end": 7668,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7605,
											"end": 7668,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7561,
											"end": 7678,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 7719,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 7788,
											"end": 7795,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7779,
											"end": 7785,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7768,
											"end": 7777,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7764,
											"end": 7786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7733,
											"end": 7796,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7733,
											"end": 7796,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7688,
											"end": 7806,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7945,
											"end": 7951,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7994,
											"end": 7996,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7982,
											"end": 7991,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7973,
											"end": 7980,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7969,
											"end": 7992,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8148,
											"end": 8149,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8137,
											"end": 8146,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8133,
											"end": 8150,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8120,
											"end": 8151,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8178,
											"end": 8196,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8170,
											"end": 8176,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8167,
											"end": 8197,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 8375,
											"end": 8382,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8366,
											"end": 8372,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8355,
											"end": 8364,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8351,
											"end": 8373,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 8305,
											"end": 8383,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8295,
											"end": 8383,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8295,
											"end": 8383,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8091,
											"end": 8393,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8462,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8449,
											"end": 8458,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8445,
											"end": 8463,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8432,
											"end": 8464,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8491,
											"end": 8509,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8483,
											"end": 8489,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8480,
											"end": 8510,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 8513,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 8477,
											"end": 8594,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 8688,
											"end": 8695,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8679,
											"end": 8685,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8668,
											"end": 8677,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8686,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 8618,
											"end": 8696,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8608,
											"end": 8696,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8608,
											"end": 8696,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8403,
											"end": 8706,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7819,
											"end": 8713,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8777,
											"end": 8783,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8826,
											"end": 8828,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8814,
											"end": 8823,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8805,
											"end": 8812,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 8824,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8797,
											"end": 8829,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 8832,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 8794,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8952,
											"end": 8953,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 9021,
											"end": 9028,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9018,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9001,
											"end": 9010,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8997,
											"end": 9019,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 8977,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8967,
											"end": 9029,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8967,
											"end": 9029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8923,
											"end": 9039,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 9046,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9121,
											"end": 9127,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9170,
											"end": 9172,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9158,
											"end": 9167,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9149,
											"end": 9156,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9145,
											"end": 9168,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9141,
											"end": 9173,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 9176,
											"end": 9255,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 9138,
											"end": 9257,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9296,
											"end": 9297,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 9376,
											"end": 9383,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9367,
											"end": 9373,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9356,
											"end": 9365,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9352,
											"end": 9374,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 9321,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9311,
											"end": 9384,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9311,
											"end": 9384,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9267,
											"end": 9394,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9052,
											"end": 9401,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9466,
											"end": 9472,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9515,
											"end": 9517,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9503,
											"end": 9512,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9494,
											"end": 9501,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9490,
											"end": 9513,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9486,
											"end": 9518,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 9521,
											"end": 9600,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 9483,
											"end": 9602,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9641,
											"end": 9642,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 9711,
											"end": 9718,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9702,
											"end": 9708,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9691,
											"end": 9700,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9687,
											"end": 9709,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 9666,
											"end": 9719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9656,
											"end": 9719,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9656,
											"end": 9719,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9612,
											"end": 9729,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9407,
											"end": 9736,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9811,
											"end": 9821,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 9874,
											"end": 9877,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9866,
											"end": 9872,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 9832,
											"end": 9878,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9910,
											"end": 9914,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9905,
											"end": 9908,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9901,
											"end": 9915,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 9915,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9887,
											"end": 9915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9742,
											"end": 9921,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 10032,
											"end": 10037,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 10014,
											"end": 10038,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10009,
											"end": 10012,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9927,
											"end": 10045,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10200,
											"end": 10203,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 10277,
											"end": 10282,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 10229,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 10378,
											"end": 10384,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10373,
											"end": 10376,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 10299,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10292,
											"end": 10385,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10292,
											"end": 10385,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 10459,
											"end": 10464,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10488,
											"end": 10495,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10519,
											"end": 10520,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10529,
											"end": 10535,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10526,
											"end": 10527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10523,
											"end": 10536,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10605,
											"end": 10611,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10599,
											"end": 10612,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 10691,
											"end": 10694,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10676,
											"end": 10689,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 10632,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10625,
											"end": 10695,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 10625,
											"end": 10695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 10771,
											"end": 10777,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 10718,
											"end": 10778,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10708,
											"end": 10778,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10708,
											"end": 10778,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10564,
											"end": 10788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10551,
											"end": 10552,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10548,
											"end": 10549,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10544,
											"end": 10553,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10539,
											"end": 10553,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10539,
											"end": 10553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 10504,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10508,
											"end": 10522,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10804,
											"end": 10807,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10797,
											"end": 10807,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10797,
											"end": 10807,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10205,
											"end": 10813,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10205,
											"end": 10813,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10205,
											"end": 10813,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10081,
											"end": 10813,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 10915,
											"end": 10920,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 10900,
											"end": 10921,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10895,
											"end": 10898,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10888,
											"end": 10922,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10819,
											"end": 10928,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11020,
											"end": 11023,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 11080,
											"end": 11085,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 11048,
											"end": 11086,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 11165,
											"end": 11171,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11160,
											"end": 11163,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 11102,
											"end": 11172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11172,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11172,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 11226,
											"end": 11232,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11221,
											"end": 11224,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11214,
											"end": 11218,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11207,
											"end": 11212,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11203,
											"end": 11219,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 11181,
											"end": 11233,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 11280,
											"end": 11286,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 11258,
											"end": 11287,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11253,
											"end": 11256,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11249,
											"end": 11288,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11242,
											"end": 11288,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11242,
											"end": 11288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11024,
											"end": 11294,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10934,
											"end": 11294,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11388,
											"end": 11391,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 11449,
											"end": 11454,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 11416,
											"end": 11455,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 11535,
											"end": 11541,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11530,
											"end": 11533,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 11471,
											"end": 11542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11464,
											"end": 11542,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11464,
											"end": 11542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 11596,
											"end": 11602,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11591,
											"end": 11594,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11584,
											"end": 11588,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11577,
											"end": 11582,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11573,
											"end": 11589,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 11551,
											"end": 11603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 11650,
											"end": 11656,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 11628,
											"end": 11657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11623,
											"end": 11626,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11619,
											"end": 11658,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11612,
											"end": 11658,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11612,
											"end": 11658,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11392,
											"end": 11664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11300,
											"end": 11664,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11670,
											"end": 12047,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 11670,
											"end": 12047,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11776,
											"end": 11779,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11804,
											"end": 11843,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 11837,
											"end": 11842,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11804,
											"end": 11843,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 11804,
											"end": 11843,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11804,
											"end": 11843,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 11804,
											"end": 11843,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11859,
											"end": 11948,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 11941,
											"end": 11947,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11936,
											"end": 11939,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11859,
											"end": 11948,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 11859,
											"end": 11948,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11859,
											"end": 11948,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 11859,
											"end": 11948,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11852,
											"end": 11948,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11852,
											"end": 11948,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11957,
											"end": 12009,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 12002,
											"end": 12008,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11997,
											"end": 12000,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11990,
											"end": 11994,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11983,
											"end": 11988,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11979,
											"end": 11995,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11957,
											"end": 12009,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 11957,
											"end": 12009,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11957,
											"end": 12009,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 11957,
											"end": 12009,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12034,
											"end": 12040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12029,
											"end": 12032,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12025,
											"end": 12041,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12018,
											"end": 12041,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12018,
											"end": 12041,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11780,
											"end": 12047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 12047,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 12047,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 12047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 12047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 12047,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 12077,
											"end": 12922,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 12077,
											"end": 12922,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12180,
											"end": 12183,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12217,
											"end": 12222,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12211,
											"end": 12223,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 12246,
											"end": 12282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 12272,
											"end": 12281,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12246,
											"end": 12282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 12246,
											"end": 12282,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 12246,
											"end": 12282,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 12246,
											"end": 12282,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12298,
											"end": 12387,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 12380,
											"end": 12386,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12375,
											"end": 12378,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12298,
											"end": 12387,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 12298,
											"end": 12387,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 12298,
											"end": 12387,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 12298,
											"end": 12387,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12291,
											"end": 12387,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 12291,
											"end": 12387,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12418,
											"end": 12419,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12407,
											"end": 12416,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12403,
											"end": 12420,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12434,
											"end": 12435,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12429,
											"end": 12566,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12429,
											"end": 12566,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 12429,
											"end": 12566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 12429,
											"end": 12566,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12580,
											"end": 12581,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12575,
											"end": 12916,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12575,
											"end": 12916,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 12575,
											"end": 12916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 12575,
											"end": 12916,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12396,
											"end": 12916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 12396,
											"end": 12916,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12429,
											"end": 12566,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 12429,
											"end": 12566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12513,
											"end": 12517,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 12509,
											"end": 12518,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 12498,
											"end": 12507,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12494,
											"end": 12519,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12489,
											"end": 12492,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12482,
											"end": 12520,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12549,
											"end": 12555,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12544,
											"end": 12547,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12540,
											"end": 12556,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12533,
											"end": 12556,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 12533,
											"end": 12556,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12429,
											"end": 12566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 12429,
											"end": 12566,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12575,
											"end": 12916,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 12575,
											"end": 12916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12642,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 12674,
											"end": 12679,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12642,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 12642,
											"end": 12680,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 12642,
											"end": 12680,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 12642,
											"end": 12680,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12702,
											"end": 12703,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12716,
											"end": 12870,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 12716,
											"end": 12870,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12730,
											"end": 12736,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12727,
											"end": 12728,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12724,
											"end": 12737,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12716,
											"end": 12870,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12716,
											"end": 12870,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 12716,
											"end": 12870,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12804,
											"end": 12811,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12798,
											"end": 12812,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 12794,
											"end": 12795,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12789,
											"end": 12792,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 12785,
											"end": 12796,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12778,
											"end": 12813,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12854,
											"end": 12855,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12845,
											"end": 12852,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12841,
											"end": 12856,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12830,
											"end": 12856,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12830,
											"end": 12856,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12752,
											"end": 12756,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12749,
											"end": 12750,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12740,
											"end": 12757,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12740,
											"end": 12757,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12716,
											"end": 12870,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 12716,
											"end": 12870,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12716,
											"end": 12870,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 12716,
											"end": 12870,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12899,
											"end": 12905,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12894,
											"end": 12897,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 12890,
											"end": 12906,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12883,
											"end": 12906,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 12883,
											"end": 12906,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12582,
											"end": 12916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12582,
											"end": 12916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12396,
											"end": 12916,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 12396,
											"end": 12916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12396,
											"end": 12916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12184,
											"end": 12922,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12184,
											"end": 12922,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12077,
											"end": 12922,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12077,
											"end": 12922,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12077,
											"end": 12922,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12077,
											"end": 12922,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12077,
											"end": 12922,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 12928,
											"end": 13294,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 12928,
											"end": 13294,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13070,
											"end": 13073,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13091,
											"end": 13158,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 13155,
											"end": 13157,
											"name": "PUSH",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 13150,
											"end": 13153,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13091,
											"end": 13158,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 13091,
											"end": 13158,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13091,
											"end": 13158,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 13091,
											"end": 13158,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13084,
											"end": 13158,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13084,
											"end": 13158,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 13256,
											"end": 13259,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13285,
											"end": 13287,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13280,
											"end": 13283,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13276,
											"end": 13288,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13269,
											"end": 13288,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13269,
											"end": 13288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12928,
											"end": 13294,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12928,
											"end": 13294,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12928,
											"end": 13294,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12928,
											"end": 13294,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 13300,
											"end": 13666,
											"name": "tag",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 13300,
											"end": 13666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13442,
											"end": 13445,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13463,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 13527,
											"end": 13529,
											"name": "PUSH",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 13522,
											"end": 13525,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13463,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 13463,
											"end": 13530,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13463,
											"end": 13530,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 13463,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13456,
											"end": 13530,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13456,
											"end": 13530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13539,
											"end": 13632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 13628,
											"end": 13631,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13539,
											"end": 13632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 13539,
											"end": 13632,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13539,
											"end": 13632,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 13539,
											"end": 13632,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13657,
											"end": 13659,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13652,
											"end": 13655,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13648,
											"end": 13660,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13641,
											"end": 13660,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13641,
											"end": 13660,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13300,
											"end": 13666,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13300,
											"end": 13666,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13300,
											"end": 13666,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13300,
											"end": 13666,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 13672,
											"end": 14038,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 13672,
											"end": 14038,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13814,
											"end": 13817,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13835,
											"end": 13902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 13899,
											"end": 13901,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 13894,
											"end": 13897,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13835,
											"end": 13902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 13835,
											"end": 13902,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13835,
											"end": 13902,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 13835,
											"end": 13902,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13828,
											"end": 13902,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13828,
											"end": 13902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13911,
											"end": 14004,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 14000,
											"end": 14003,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13911,
											"end": 14004,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 13911,
											"end": 14004,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13911,
											"end": 14004,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 13911,
											"end": 14004,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14029,
											"end": 14031,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14024,
											"end": 14027,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14020,
											"end": 14032,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14013,
											"end": 14032,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14013,
											"end": 14032,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13672,
											"end": 14038,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13672,
											"end": 14038,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13672,
											"end": 14038,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13672,
											"end": 14038,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 14044,
											"end": 14410,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 14044,
											"end": 14410,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14186,
											"end": 14189,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14207,
											"end": 14274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 14271,
											"end": 14273,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 14266,
											"end": 14269,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14207,
											"end": 14274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 14207,
											"end": 14274,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 14207,
											"end": 14274,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 14207,
											"end": 14274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14200,
											"end": 14274,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14200,
											"end": 14274,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14283,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 14372,
											"end": 14375,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14283,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 14283,
											"end": 14376,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 14283,
											"end": 14376,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 14283,
											"end": 14376,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14401,
											"end": 14403,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14396,
											"end": 14399,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14392,
											"end": 14404,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14385,
											"end": 14404,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14385,
											"end": 14404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14044,
											"end": 14410,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14044,
											"end": 14410,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14044,
											"end": 14410,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14044,
											"end": 14410,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 14416,
											"end": 14782,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 14416,
											"end": 14782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14558,
											"end": 14561,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14579,
											"end": 14646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 14643,
											"end": 14645,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 14638,
											"end": 14641,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14579,
											"end": 14646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 14579,
											"end": 14646,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 14579,
											"end": 14646,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 14579,
											"end": 14646,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14572,
											"end": 14646,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14572,
											"end": 14646,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14655,
											"end": 14748,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 14744,
											"end": 14747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14655,
											"end": 14748,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 14655,
											"end": 14748,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 14655,
											"end": 14748,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 14655,
											"end": 14748,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14773,
											"end": 14775,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14768,
											"end": 14771,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14764,
											"end": 14776,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14757,
											"end": 14776,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14757,
											"end": 14776,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14416,
											"end": 14782,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14416,
											"end": 14782,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14416,
											"end": 14782,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14416,
											"end": 14782,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 14788,
											"end": 15154,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 14788,
											"end": 15154,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14930,
											"end": 14933,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14951,
											"end": 15018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 15015,
											"end": 15017,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 15010,
											"end": 15013,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14951,
											"end": 15018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 14951,
											"end": 15018,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 14951,
											"end": 15018,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 14951,
											"end": 15018,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14944,
											"end": 15018,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14944,
											"end": 15018,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15027,
											"end": 15120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 15116,
											"end": 15119,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15027,
											"end": 15120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 15027,
											"end": 15120,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 15027,
											"end": 15120,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 15027,
											"end": 15120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15145,
											"end": 15147,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15140,
											"end": 15143,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15136,
											"end": 15148,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15129,
											"end": 15148,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15129,
											"end": 15148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14788,
											"end": 15154,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14788,
											"end": 15154,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14788,
											"end": 15154,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14788,
											"end": 15154,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 15160,
											"end": 15526,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 15160,
											"end": 15526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15302,
											"end": 15305,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15323,
											"end": 15390,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 15387,
											"end": 15389,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 15382,
											"end": 15385,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15323,
											"end": 15390,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 15323,
											"end": 15390,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 15323,
											"end": 15390,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 15323,
											"end": 15390,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15316,
											"end": 15390,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15316,
											"end": 15390,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15399,
											"end": 15492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 15488,
											"end": 15491,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15399,
											"end": 15492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 15399,
											"end": 15492,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 15399,
											"end": 15492,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 15399,
											"end": 15492,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15517,
											"end": 15519,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15512,
											"end": 15515,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15508,
											"end": 15520,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15501,
											"end": 15520,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15501,
											"end": 15520,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15160,
											"end": 15526,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15160,
											"end": 15526,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15160,
											"end": 15526,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15160,
											"end": 15526,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 15532,
											"end": 15932,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 15532,
											"end": 15932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15692,
											"end": 15695,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15713,
											"end": 15797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 15795,
											"end": 15796,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 15790,
											"end": 15793,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15713,
											"end": 15797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 15713,
											"end": 15797,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 15713,
											"end": 15797,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 15713,
											"end": 15797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15706,
											"end": 15797,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15706,
											"end": 15797,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15806,
											"end": 15899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 15895,
											"end": 15898,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15806,
											"end": 15899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 15806,
											"end": 15899,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 15806,
											"end": 15899,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 15806,
											"end": 15899,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15924,
											"end": 15925,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 15919,
											"end": 15922,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15915,
											"end": 15926,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15908,
											"end": 15926,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15908,
											"end": 15926,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15532,
											"end": 15932,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15532,
											"end": 15932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15532,
											"end": 15932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15532,
											"end": 15932,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 15938,
											"end": 16304,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 15938,
											"end": 16304,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16080,
											"end": 16083,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16101,
											"end": 16168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 16165,
											"end": 16167,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 16160,
											"end": 16163,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16101,
											"end": 16168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 16101,
											"end": 16168,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 16101,
											"end": 16168,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 16101,
											"end": 16168,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16094,
											"end": 16168,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16094,
											"end": 16168,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16177,
											"end": 16270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 16266,
											"end": 16269,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16177,
											"end": 16270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 16177,
											"end": 16270,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 16177,
											"end": 16270,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 16177,
											"end": 16270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16295,
											"end": 16297,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16290,
											"end": 16293,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16286,
											"end": 16298,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16279,
											"end": 16298,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16279,
											"end": 16298,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15938,
											"end": 16304,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15938,
											"end": 16304,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15938,
											"end": 16304,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15938,
											"end": 16304,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 16310,
											"end": 16676,
											"name": "tag",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 16310,
											"end": 16676,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16452,
											"end": 16455,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16473,
											"end": 16540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 16537,
											"end": 16539,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 16532,
											"end": 16535,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16473,
											"end": 16540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 16473,
											"end": 16540,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 16473,
											"end": 16540,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 16473,
											"end": 16540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16466,
											"end": 16540,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16466,
											"end": 16540,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16549,
											"end": 16642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 16638,
											"end": 16641,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16549,
											"end": 16642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 16549,
											"end": 16642,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 16549,
											"end": 16642,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 16549,
											"end": 16642,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16667,
											"end": 16669,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16662,
											"end": 16665,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16658,
											"end": 16670,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16651,
											"end": 16670,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16651,
											"end": 16670,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16310,
											"end": 16676,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16310,
											"end": 16676,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16310,
											"end": 16676,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16310,
											"end": 16676,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 16682,
											"end": 17048,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 16682,
											"end": 17048,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16824,
											"end": 16827,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16845,
											"end": 16912,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 16909,
											"end": 16911,
											"name": "PUSH",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 16904,
											"end": 16907,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16845,
											"end": 16912,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 16845,
											"end": 16912,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 16845,
											"end": 16912,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 16845,
											"end": 16912,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16838,
											"end": 16912,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16838,
											"end": 16912,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16921,
											"end": 17014,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 17010,
											"end": 17013,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16921,
											"end": 17014,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 16921,
											"end": 17014,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 16921,
											"end": 17014,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 16921,
											"end": 17014,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17039,
											"end": 17041,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17034,
											"end": 17037,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17030,
											"end": 17042,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17023,
											"end": 17042,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17023,
											"end": 17042,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16682,
											"end": 17048,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16682,
											"end": 17048,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16682,
											"end": 17048,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16682,
											"end": 17048,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 17054,
											"end": 17162,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 17054,
											"end": 17162,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17131,
											"end": 17155,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 17149,
											"end": 17154,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17131,
											"end": 17155,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 17131,
											"end": 17155,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 17131,
											"end": 17155,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 17131,
											"end": 17155,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17126,
											"end": 17129,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17119,
											"end": 17156,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17054,
											"end": 17162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17054,
											"end": 17162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17054,
											"end": 17162,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 17168,
											"end": 17286,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 17168,
											"end": 17286,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17255,
											"end": 17279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 17273,
											"end": 17278,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17255,
											"end": 17279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 17255,
											"end": 17279,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 17255,
											"end": 17279,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 17255,
											"end": 17279,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17250,
											"end": 17253,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17243,
											"end": 17280,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17168,
											"end": 17286,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17168,
											"end": 17286,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17168,
											"end": 17286,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 17292,
											"end": 17987,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 17292,
											"end": 17987,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17570,
											"end": 17573,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17592,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 17680,
											"end": 17683,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17671,
											"end": 17677,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17592,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 17592,
											"end": 17684,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 17592,
											"end": 17684,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 17592,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17585,
											"end": 17684,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17585,
											"end": 17684,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17701,
											"end": 17796,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 17792,
											"end": 17795,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17783,
											"end": 17789,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17701,
											"end": 17796,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 17701,
											"end": 17796,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 17701,
											"end": 17796,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 17701,
											"end": 17796,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17694,
											"end": 17796,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17694,
											"end": 17796,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17813,
											"end": 17961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 17957,
											"end": 17960,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17813,
											"end": 17961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 17813,
											"end": 17961,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 17813,
											"end": 17961,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 17813,
											"end": 17961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17806,
											"end": 17961,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17806,
											"end": 17961,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17978,
											"end": 17981,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17971,
											"end": 17981,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17971,
											"end": 17981,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17292,
											"end": 17987,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 17292,
											"end": 17987,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17292,
											"end": 17987,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17292,
											"end": 17987,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17292,
											"end": 17987,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17292,
											"end": 17987,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 17993,
											"end": 19046,
											"name": "tag",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 17993,
											"end": 19046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18316,
											"end": 18320,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18354,
											"end": 18357,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 18343,
											"end": 18352,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18339,
											"end": 18358,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18331,
											"end": 18358,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18331,
											"end": 18358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18368,
											"end": 18439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 18436,
											"end": 18437,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18425,
											"end": 18434,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18421,
											"end": 18438,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18412,
											"end": 18418,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 18368,
											"end": 18439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 18368,
											"end": 18439,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18368,
											"end": 18439,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 18368,
											"end": 18439,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18449,
											"end": 18521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 18517,
											"end": 18519,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18506,
											"end": 18515,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18502,
											"end": 18520,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18493,
											"end": 18499,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 18449,
											"end": 18521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 18449,
											"end": 18521,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18449,
											"end": 18521,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 18449,
											"end": 18521,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18568,
											"end": 18577,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18562,
											"end": 18566,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18558,
											"end": 18578,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18553,
											"end": 18555,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18542,
											"end": 18551,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18538,
											"end": 18556,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18531,
											"end": 18579,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18596,
											"end": 18704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 18699,
											"end": 18703,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18690,
											"end": 18696,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 18596,
											"end": 18704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 18596,
											"end": 18704,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18596,
											"end": 18704,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 18596,
											"end": 18704,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18588,
											"end": 18704,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18588,
											"end": 18704,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18751,
											"end": 18760,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18745,
											"end": 18749,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18741,
											"end": 18761,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18736,
											"end": 18738,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 18725,
											"end": 18734,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18721,
											"end": 18739,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18714,
											"end": 18762,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18779,
											"end": 18887,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 18882,
											"end": 18886,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18873,
											"end": 18879,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18779,
											"end": 18887,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 18779,
											"end": 18887,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18779,
											"end": 18887,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 18779,
											"end": 18887,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18771,
											"end": 18887,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18771,
											"end": 18887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18935,
											"end": 18944,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18929,
											"end": 18933,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18925,
											"end": 18945,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18919,
											"end": 18922,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 18908,
											"end": 18917,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18904,
											"end": 18923,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18897,
											"end": 18946,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18963,
											"end": 19039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 19034,
											"end": 19038,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19025,
											"end": 19031,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18963,
											"end": 19039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 18963,
											"end": 19039,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18963,
											"end": 19039,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 18963,
											"end": 19039,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18955,
											"end": 19039,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18955,
											"end": 19039,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17993,
											"end": 19046,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 17993,
											"end": 19046,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 17993,
											"end": 19046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17993,
											"end": 19046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17993,
											"end": 19046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17993,
											"end": 19046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17993,
											"end": 19046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17993,
											"end": 19046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17993,
											"end": 19046,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 19052,
											"end": 19803,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 19052,
											"end": 19803,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19275,
											"end": 19279,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19313,
											"end": 19316,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 19302,
											"end": 19311,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19298,
											"end": 19317,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19290,
											"end": 19317,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19290,
											"end": 19317,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19327,
											"end": 19398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 19395,
											"end": 19396,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19384,
											"end": 19393,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19380,
											"end": 19397,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19371,
											"end": 19377,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 19327,
											"end": 19398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 19327,
											"end": 19398,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 19327,
											"end": 19398,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 19327,
											"end": 19398,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19408,
											"end": 19480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 19476,
											"end": 19478,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19465,
											"end": 19474,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19461,
											"end": 19479,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19452,
											"end": 19458,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 19408,
											"end": 19480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 19408,
											"end": 19480,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 19408,
											"end": 19480,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 19408,
											"end": 19480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19490,
											"end": 19562,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 19558,
											"end": 19560,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19543,
											"end": 19561,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19534,
											"end": 19540,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 19490,
											"end": 19562,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 19490,
											"end": 19562,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 19490,
											"end": 19562,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 19490,
											"end": 19562,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19572,
											"end": 19644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 19640,
											"end": 19642,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 19629,
											"end": 19638,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19625,
											"end": 19643,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19616,
											"end": 19622,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19572,
											"end": 19644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 19572,
											"end": 19644,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 19572,
											"end": 19644,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 19572,
											"end": 19644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19692,
											"end": 19701,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19686,
											"end": 19690,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19682,
											"end": 19702,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19676,
											"end": 19679,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 19665,
											"end": 19674,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19661,
											"end": 19680,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19654,
											"end": 19703,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19720,
											"end": 19796,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 19791,
											"end": 19795,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19782,
											"end": 19788,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19720,
											"end": 19796,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 19720,
											"end": 19796,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 19720,
											"end": 19796,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 19720,
											"end": 19796,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19712,
											"end": 19796,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19712,
											"end": 19796,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19052,
											"end": 19803,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 19052,
											"end": 19803,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 19052,
											"end": 19803,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19052,
											"end": 19803,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19052,
											"end": 19803,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19052,
											"end": 19803,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19052,
											"end": 19803,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19052,
											"end": 19803,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19052,
											"end": 19803,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 19809,
											"end": 20182,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 19809,
											"end": 20182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19952,
											"end": 19956,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19990,
											"end": 19992,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19979,
											"end": 19988,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19975,
											"end": 19993,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19967,
											"end": 19993,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19967,
											"end": 19993,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20039,
											"end": 20048,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20033,
											"end": 20037,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20029,
											"end": 20049,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 20025,
											"end": 20026,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20014,
											"end": 20023,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20010,
											"end": 20027,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20003,
											"end": 20050,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20067,
											"end": 20175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 20170,
											"end": 20174,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20161,
											"end": 20167,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20067,
											"end": 20175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 20067,
											"end": 20175,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 20067,
											"end": 20175,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 20067,
											"end": 20175,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20059,
											"end": 20175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20059,
											"end": 20175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19809,
											"end": 20182,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19809,
											"end": 20182,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19809,
											"end": 20182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19809,
											"end": 20182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19809,
											"end": 20182,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 20188,
											"end": 20822,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 20188,
											"end": 20822,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20409,
											"end": 20413,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20447,
											"end": 20449,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 20436,
											"end": 20445,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20432,
											"end": 20450,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20424,
											"end": 20450,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20424,
											"end": 20450,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20496,
											"end": 20505,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20490,
											"end": 20494,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20486,
											"end": 20506,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 20482,
											"end": 20483,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20471,
											"end": 20480,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20467,
											"end": 20484,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20460,
											"end": 20507,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20524,
											"end": 20632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 20627,
											"end": 20631,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20618,
											"end": 20624,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20524,
											"end": 20632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 20524,
											"end": 20632,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 20524,
											"end": 20632,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 20524,
											"end": 20632,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20516,
											"end": 20632,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20516,
											"end": 20632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20679,
											"end": 20688,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20673,
											"end": 20677,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20669,
											"end": 20689,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 20664,
											"end": 20666,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20653,
											"end": 20662,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20649,
											"end": 20667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20642,
											"end": 20690,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20707,
											"end": 20815,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 20810,
											"end": 20814,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20801,
											"end": 20807,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20707,
											"end": 20815,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 20707,
											"end": 20815,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 20707,
											"end": 20815,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 20707,
											"end": 20815,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20699,
											"end": 20815,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20699,
											"end": 20815,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20188,
											"end": 20822,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 20188,
											"end": 20822,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20188,
											"end": 20822,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20188,
											"end": 20822,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20188,
											"end": 20822,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20188,
											"end": 20822,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 20828,
											"end": 21038,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 20828,
											"end": 21038,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20915,
											"end": 20919,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20953,
											"end": 20955,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20942,
											"end": 20951,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20938,
											"end": 20956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20930,
											"end": 20956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20930,
											"end": 20956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20966,
											"end": 21031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 21028,
											"end": 21029,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21017,
											"end": 21026,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21013,
											"end": 21030,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21004,
											"end": 21010,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20966,
											"end": 21031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 20966,
											"end": 21031,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 20966,
											"end": 21031,
											"name": "tag",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 20966,
											"end": 21031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20828,
											"end": 21038,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20828,
											"end": 21038,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20828,
											"end": 21038,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20828,
											"end": 21038,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20828,
											"end": 21038,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 21044,
											"end": 21357,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 21044,
											"end": 21357,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21157,
											"end": 21161,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21195,
											"end": 21197,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21184,
											"end": 21193,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21180,
											"end": 21198,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21172,
											"end": 21198,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21172,
											"end": 21198,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21244,
											"end": 21253,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21238,
											"end": 21242,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21234,
											"end": 21254,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 21230,
											"end": 21231,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21219,
											"end": 21228,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21215,
											"end": 21232,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21208,
											"end": 21255,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21272,
											"end": 21350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 21345,
											"end": 21349,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21336,
											"end": 21342,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21272,
											"end": 21350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 21272,
											"end": 21350,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 21272,
											"end": 21350,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 21272,
											"end": 21350,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21264,
											"end": 21350,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21264,
											"end": 21350,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21044,
											"end": 21357,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21044,
											"end": 21357,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21044,
											"end": 21357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21044,
											"end": 21357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21044,
											"end": 21357,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 21363,
											"end": 21782,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 21363,
											"end": 21782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21529,
											"end": 21533,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21567,
											"end": 21569,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21556,
											"end": 21565,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21552,
											"end": 21570,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21544,
											"end": 21570,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21544,
											"end": 21570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21616,
											"end": 21625,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21610,
											"end": 21614,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21606,
											"end": 21626,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 21602,
											"end": 21603,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21591,
											"end": 21600,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21587,
											"end": 21604,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21580,
											"end": 21627,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21644,
											"end": 21775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 21770,
											"end": 21774,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21644,
											"end": 21775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 21644,
											"end": 21775,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 21644,
											"end": 21775,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 21644,
											"end": 21775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21636,
											"end": 21775,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21636,
											"end": 21775,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21363,
											"end": 21782,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21363,
											"end": 21782,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21363,
											"end": 21782,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21363,
											"end": 21782,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 21788,
											"end": 22207,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 21788,
											"end": 22207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21954,
											"end": 21958,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21992,
											"end": 21994,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21981,
											"end": 21990,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21977,
											"end": 21995,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21969,
											"end": 21995,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21969,
											"end": 21995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22041,
											"end": 22050,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22035,
											"end": 22039,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22031,
											"end": 22051,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22027,
											"end": 22028,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22016,
											"end": 22025,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22012,
											"end": 22029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22005,
											"end": 22052,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22069,
											"end": 22200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 22195,
											"end": 22199,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22069,
											"end": 22200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 22069,
											"end": 22200,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 22069,
											"end": 22200,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 22069,
											"end": 22200,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22061,
											"end": 22200,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22061,
											"end": 22200,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21788,
											"end": 22207,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21788,
											"end": 22207,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21788,
											"end": 22207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21788,
											"end": 22207,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 22213,
											"end": 22632,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 22213,
											"end": 22632,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22379,
											"end": 22383,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22417,
											"end": 22419,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22406,
											"end": 22415,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22402,
											"end": 22420,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22394,
											"end": 22420,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22394,
											"end": 22420,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22466,
											"end": 22475,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22460,
											"end": 22464,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22456,
											"end": 22476,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22452,
											"end": 22453,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22441,
											"end": 22450,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22437,
											"end": 22454,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22430,
											"end": 22477,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22494,
											"end": 22625,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 22620,
											"end": 22624,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22494,
											"end": 22625,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 22494,
											"end": 22625,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 22494,
											"end": 22625,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 22494,
											"end": 22625,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22486,
											"end": 22625,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22486,
											"end": 22625,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22213,
											"end": 22632,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22213,
											"end": 22632,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22213,
											"end": 22632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22213,
											"end": 22632,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 22638,
											"end": 23057,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 22638,
											"end": 23057,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22804,
											"end": 22808,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22842,
											"end": 22844,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22831,
											"end": 22840,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22827,
											"end": 22845,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22819,
											"end": 22845,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22819,
											"end": 22845,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22891,
											"end": 22900,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22885,
											"end": 22889,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22881,
											"end": 22901,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22877,
											"end": 22878,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22866,
											"end": 22875,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22862,
											"end": 22879,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22855,
											"end": 22902,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22919,
											"end": 23050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 23045,
											"end": 23049,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22919,
											"end": 23050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 22919,
											"end": 23050,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 22919,
											"end": 23050,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 22919,
											"end": 23050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22911,
											"end": 23050,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22911,
											"end": 23050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22638,
											"end": 23057,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22638,
											"end": 23057,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22638,
											"end": 23057,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22638,
											"end": 23057,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 23063,
											"end": 23482,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 23063,
											"end": 23482,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23229,
											"end": 23233,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23267,
											"end": 23269,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23256,
											"end": 23265,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23252,
											"end": 23270,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23244,
											"end": 23270,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23244,
											"end": 23270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23316,
											"end": 23325,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23310,
											"end": 23314,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23306,
											"end": 23326,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 23302,
											"end": 23303,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23291,
											"end": 23300,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23287,
											"end": 23304,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23280,
											"end": 23327,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23344,
											"end": 23475,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 23470,
											"end": 23474,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23344,
											"end": 23475,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 23344,
											"end": 23475,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 23344,
											"end": 23475,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 23344,
											"end": 23475,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23336,
											"end": 23475,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23336,
											"end": 23475,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23063,
											"end": 23482,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23063,
											"end": 23482,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23063,
											"end": 23482,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23063,
											"end": 23482,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 23488,
											"end": 23907,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 23488,
											"end": 23907,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23654,
											"end": 23658,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23692,
											"end": 23694,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23681,
											"end": 23690,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23677,
											"end": 23695,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23669,
											"end": 23695,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23669,
											"end": 23695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23741,
											"end": 23750,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23735,
											"end": 23739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23731,
											"end": 23751,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 23727,
											"end": 23728,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23716,
											"end": 23725,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23712,
											"end": 23729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23705,
											"end": 23752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23769,
											"end": 23900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 23895,
											"end": 23899,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23769,
											"end": 23900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 23769,
											"end": 23900,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 23769,
											"end": 23900,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 23769,
											"end": 23900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23761,
											"end": 23900,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23761,
											"end": 23900,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23488,
											"end": 23907,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23488,
											"end": 23907,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23488,
											"end": 23907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23488,
											"end": 23907,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 23913,
											"end": 24332,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 23913,
											"end": 24332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24079,
											"end": 24083,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24117,
											"end": 24119,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24106,
											"end": 24115,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24102,
											"end": 24120,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24094,
											"end": 24120,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24094,
											"end": 24120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24166,
											"end": 24175,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24160,
											"end": 24164,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24156,
											"end": 24176,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 24152,
											"end": 24153,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24141,
											"end": 24150,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24137,
											"end": 24154,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24130,
											"end": 24177,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24194,
											"end": 24325,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 24320,
											"end": 24324,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24194,
											"end": 24325,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 24194,
											"end": 24325,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 24194,
											"end": 24325,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 24194,
											"end": 24325,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24186,
											"end": 24325,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24186,
											"end": 24325,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23913,
											"end": 24332,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23913,
											"end": 24332,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23913,
											"end": 24332,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23913,
											"end": 24332,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 24338,
											"end": 24757,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 24338,
											"end": 24757,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24504,
											"end": 24508,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24542,
											"end": 24544,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24531,
											"end": 24540,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24527,
											"end": 24545,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24519,
											"end": 24545,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24519,
											"end": 24545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24591,
											"end": 24600,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24585,
											"end": 24589,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24581,
											"end": 24601,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 24577,
											"end": 24578,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24566,
											"end": 24575,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24562,
											"end": 24579,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24555,
											"end": 24602,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24619,
											"end": 24750,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 24745,
											"end": 24749,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24619,
											"end": 24750,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 24619,
											"end": 24750,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 24619,
											"end": 24750,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 24619,
											"end": 24750,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24611,
											"end": 24750,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24611,
											"end": 24750,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24338,
											"end": 24757,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24338,
											"end": 24757,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24338,
											"end": 24757,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24338,
											"end": 24757,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 24763,
											"end": 25182,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 24763,
											"end": 25182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24929,
											"end": 24933,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24967,
											"end": 24969,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24956,
											"end": 24965,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24952,
											"end": 24970,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24944,
											"end": 24970,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24944,
											"end": 24970,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25016,
											"end": 25025,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25010,
											"end": 25014,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25006,
											"end": 25026,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 25002,
											"end": 25003,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24991,
											"end": 25000,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24987,
											"end": 25004,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24980,
											"end": 25027,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25044,
											"end": 25175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 25170,
											"end": 25174,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25044,
											"end": 25175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 25044,
											"end": 25175,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 25044,
											"end": 25175,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 25044,
											"end": 25175,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25036,
											"end": 25175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25036,
											"end": 25175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24763,
											"end": 25182,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24763,
											"end": 25182,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24763,
											"end": 25182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24763,
											"end": 25182,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 25188,
											"end": 25607,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 25188,
											"end": 25607,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25354,
											"end": 25358,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25392,
											"end": 25394,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 25381,
											"end": 25390,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25377,
											"end": 25395,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25369,
											"end": 25395,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25369,
											"end": 25395,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25441,
											"end": 25450,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25435,
											"end": 25439,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25431,
											"end": 25451,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 25427,
											"end": 25428,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25416,
											"end": 25425,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25412,
											"end": 25429,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25405,
											"end": 25452,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25469,
											"end": 25600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 25595,
											"end": 25599,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25469,
											"end": 25600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 25469,
											"end": 25600,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 25469,
											"end": 25600,
											"name": "tag",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 25469,
											"end": 25600,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25461,
											"end": 25600,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25461,
											"end": 25600,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25188,
											"end": 25607,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25188,
											"end": 25607,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25188,
											"end": 25607,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25188,
											"end": 25607,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 25613,
											"end": 25835,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 25613,
											"end": 25835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25706,
											"end": 25710,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25744,
											"end": 25746,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 25733,
											"end": 25742,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25729,
											"end": 25747,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25721,
											"end": 25747,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25721,
											"end": 25747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25757,
											"end": 25828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 25825,
											"end": 25826,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25814,
											"end": 25823,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25810,
											"end": 25827,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25801,
											"end": 25807,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 25757,
											"end": 25828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 25757,
											"end": 25828,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 25757,
											"end": 25828,
											"name": "tag",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 25757,
											"end": 25828,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25613,
											"end": 25835,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 25613,
											"end": 25835,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25613,
											"end": 25835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25613,
											"end": 25835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25613,
											"end": 25835,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 25841,
											"end": 26173,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 25841,
											"end": 26173,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25962,
											"end": 25966,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26000,
											"end": 26002,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 25989,
											"end": 25998,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25985,
											"end": 26003,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25977,
											"end": 26003,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25977,
											"end": 26003,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26013,
											"end": 26084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 26081,
											"end": 26082,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26070,
											"end": 26079,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26066,
											"end": 26083,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26057,
											"end": 26063,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 26013,
											"end": 26084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 26013,
											"end": 26084,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 26013,
											"end": 26084,
											"name": "tag",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 26013,
											"end": 26084,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26094,
											"end": 26166,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 26162,
											"end": 26164,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26151,
											"end": 26160,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26147,
											"end": 26165,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26138,
											"end": 26144,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 26094,
											"end": 26166,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 26094,
											"end": 26166,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 26094,
											"end": 26166,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 26094,
											"end": 26166,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25841,
											"end": 26173,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 25841,
											"end": 26173,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 25841,
											"end": 26173,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25841,
											"end": 26173,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25841,
											"end": 26173,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25841,
											"end": 26173,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 26179,
											"end": 26308,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 26179,
											"end": 26308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26213,
											"end": 26219,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26240,
											"end": 26260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 26240,
											"end": 26260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 26240,
											"end": 26260,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 26240,
											"end": 26260,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 26240,
											"end": 26260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26230,
											"end": 26260,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26230,
											"end": 26260,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26269,
											"end": 26302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 26297,
											"end": 26301,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26289,
											"end": 26295,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26269,
											"end": 26302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 26269,
											"end": 26302,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 26269,
											"end": 26302,
											"name": "tag",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 26269,
											"end": 26302,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26179,
											"end": 26308,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26179,
											"end": 26308,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26179,
											"end": 26308,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26179,
											"end": 26308,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 26314,
											"end": 26389,
											"name": "tag",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 26314,
											"end": 26389,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26347,
											"end": 26353,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26380,
											"end": 26382,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 26374,
											"end": 26383,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 26364,
											"end": 26383,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26364,
											"end": 26383,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26314,
											"end": 26389,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26314,
											"end": 26389,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 26395,
											"end": 26706,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 26395,
											"end": 26706,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26472,
											"end": 26476,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26562,
											"end": 26580,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26554,
											"end": 26560,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26551,
											"end": 26581,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 26548,
											"end": 26604,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 26548,
											"end": 26604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 26548,
											"end": 26604,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 26584,
											"end": 26602,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 26584,
											"end": 26602,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 26584,
											"end": 26602,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 26584,
											"end": 26602,
											"name": "tag",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 26584,
											"end": 26602,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26548,
											"end": 26604,
											"name": "tag",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 26548,
											"end": 26604,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26634,
											"end": 26638,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26626,
											"end": 26632,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26622,
											"end": 26639,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 26614,
											"end": 26639,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26614,
											"end": 26639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26694,
											"end": 26698,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26688,
											"end": 26692,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26684,
											"end": 26699,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26676,
											"end": 26699,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26676,
											"end": 26699,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26395,
											"end": 26706,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26395,
											"end": 26706,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26395,
											"end": 26706,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26395,
											"end": 26706,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 26712,
											"end": 27023,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 26712,
											"end": 27023,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26789,
											"end": 26793,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26879,
											"end": 26897,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26871,
											"end": 26877,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26868,
											"end": 26898,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 26865,
											"end": 26921,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 26865,
											"end": 26921,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 26865,
											"end": 26921,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 26901,
											"end": 26919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 26901,
											"end": 26919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 26901,
											"end": 26919,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 26901,
											"end": 26919,
											"name": "tag",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 26901,
											"end": 26919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26865,
											"end": 26921,
											"name": "tag",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 26865,
											"end": 26921,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26951,
											"end": 26955,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26943,
											"end": 26949,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26939,
											"end": 26956,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 26931,
											"end": 26956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26931,
											"end": 26956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27011,
											"end": 27015,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27005,
											"end": 27009,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27001,
											"end": 27016,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26993,
											"end": 27016,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26993,
											"end": 27016,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26712,
											"end": 27023,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26712,
											"end": 27023,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26712,
											"end": 27023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26712,
											"end": 27023,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 27029,
											"end": 27336,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 27029,
											"end": 27336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27090,
											"end": 27094,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27180,
											"end": 27198,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27172,
											"end": 27178,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27169,
											"end": 27199,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 27166,
											"end": 27222,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 27166,
											"end": 27222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 27166,
											"end": 27222,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 27202,
											"end": 27220,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 27202,
											"end": 27220,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 27202,
											"end": 27220,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 27202,
											"end": 27220,
											"name": "tag",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 27202,
											"end": 27220,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27166,
											"end": 27222,
											"name": "tag",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 27166,
											"end": 27222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27240,
											"end": 27269,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 27262,
											"end": 27268,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27240,
											"end": 27269,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 27240,
											"end": 27269,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 27240,
											"end": 27269,
											"name": "tag",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 27240,
											"end": 27269,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27232,
											"end": 27269,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27232,
											"end": 27269,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27324,
											"end": 27328,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27318,
											"end": 27322,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27314,
											"end": 27329,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27306,
											"end": 27329,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27306,
											"end": 27329,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27029,
											"end": 27336,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27029,
											"end": 27336,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27029,
											"end": 27336,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27029,
											"end": 27336,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 27342,
											"end": 27474,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 27342,
											"end": 27474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27409,
											"end": 27413,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27432,
											"end": 27435,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27424,
											"end": 27435,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27424,
											"end": 27435,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27462,
											"end": 27466,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27457,
											"end": 27460,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27453,
											"end": 27467,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27445,
											"end": 27467,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27445,
											"end": 27467,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27342,
											"end": 27474,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27342,
											"end": 27474,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27342,
											"end": 27474,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27342,
											"end": 27474,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 27480,
											"end": 27621,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 27480,
											"end": 27621,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27529,
											"end": 27533,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27552,
											"end": 27555,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27544,
											"end": 27555,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27544,
											"end": 27555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27575,
											"end": 27578,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27572,
											"end": 27573,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27565,
											"end": 27579,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 27609,
											"end": 27613,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27606,
											"end": 27607,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27596,
											"end": 27614,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 27588,
											"end": 27614,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27588,
											"end": 27614,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27480,
											"end": 27621,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27480,
											"end": 27621,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27480,
											"end": 27621,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27480,
											"end": 27621,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 27627,
											"end": 27741,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 27627,
											"end": 27741,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27694,
											"end": 27700,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27728,
											"end": 27733,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27722,
											"end": 27734,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 27712,
											"end": 27734,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27712,
											"end": 27734,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27627,
											"end": 27741,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27627,
											"end": 27741,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27627,
											"end": 27741,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27627,
											"end": 27741,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 27747,
											"end": 27845,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 27747,
											"end": 27845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27798,
											"end": 27804,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27832,
											"end": 27837,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27826,
											"end": 27838,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 27816,
											"end": 27838,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27816,
											"end": 27838,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27747,
											"end": 27845,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27747,
											"end": 27845,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27747,
											"end": 27845,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27747,
											"end": 27845,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 27851,
											"end": 27950,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 27851,
											"end": 27950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27903,
											"end": 27909,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27937,
											"end": 27942,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27931,
											"end": 27943,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 27921,
											"end": 27943,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27921,
											"end": 27943,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27851,
											"end": 27950,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27851,
											"end": 27950,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27851,
											"end": 27950,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27851,
											"end": 27950,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 27956,
											"end": 28069,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 27956,
											"end": 28069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28026,
											"end": 28030,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28058,
											"end": 28062,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28053,
											"end": 28056,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28049,
											"end": 28063,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28041,
											"end": 28063,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28041,
											"end": 28063,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27956,
											"end": 28069,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27956,
											"end": 28069,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27956,
											"end": 28069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27956,
											"end": 28069,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 28075,
											"end": 28259,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 28075,
											"end": 28259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28174,
											"end": 28185,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28208,
											"end": 28214,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28203,
											"end": 28206,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28196,
											"end": 28215,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 28248,
											"end": 28252,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28243,
											"end": 28246,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28239,
											"end": 28253,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28224,
											"end": 28253,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28224,
											"end": 28253,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28075,
											"end": 28259,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 28075,
											"end": 28259,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28075,
											"end": 28259,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28075,
											"end": 28259,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28075,
											"end": 28259,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 28265,
											"end": 28433,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 28265,
											"end": 28433,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28348,
											"end": 28359,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28382,
											"end": 28388,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28377,
											"end": 28380,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28370,
											"end": 28389,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 28422,
											"end": 28426,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28417,
											"end": 28420,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28413,
											"end": 28427,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28398,
											"end": 28427,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28398,
											"end": 28427,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28265,
											"end": 28433,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 28265,
											"end": 28433,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28265,
											"end": 28433,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28265,
											"end": 28433,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28265,
											"end": 28433,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 28439,
											"end": 28608,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 28439,
											"end": 28608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28523,
											"end": 28534,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28557,
											"end": 28563,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28552,
											"end": 28555,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28545,
											"end": 28564,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 28597,
											"end": 28601,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28592,
											"end": 28595,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28588,
											"end": 28602,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28573,
											"end": 28602,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28573,
											"end": 28602,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28439,
											"end": 28608,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 28439,
											"end": 28608,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28439,
											"end": 28608,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28439,
											"end": 28608,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28439,
											"end": 28608,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 28614,
											"end": 28762,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 28614,
											"end": 28762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28716,
											"end": 28727,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28753,
											"end": 28756,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28738,
											"end": 28756,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28738,
											"end": 28756,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28614,
											"end": 28762,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 28614,
											"end": 28762,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28614,
											"end": 28762,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28614,
											"end": 28762,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28614,
											"end": 28762,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 28768,
											"end": 29073,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 28768,
											"end": 29073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28808,
											"end": 28811,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28827,
											"end": 28847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 28845,
											"end": 28846,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 28827,
											"end": 28847,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 28827,
											"end": 28847,
											"name": "tag",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 28827,
											"end": 28847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28822,
											"end": 28847,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28822,
											"end": 28847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28861,
											"end": 28881,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 28879,
											"end": 28880,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28861,
											"end": 28881,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 28861,
											"end": 28881,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 28861,
											"end": 28881,
											"name": "tag",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 28861,
											"end": 28881,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28856,
											"end": 28881,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 28856,
											"end": 28881,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29015,
											"end": 29016,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28947,
											"end": 29013,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28943,
											"end": 29017,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 28940,
											"end": 28941,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28937,
											"end": 29018,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 28934,
											"end": 29041,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 28934,
											"end": 29041,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 28934,
											"end": 29041,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 29021,
											"end": 29039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 29021,
											"end": 29039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 29021,
											"end": 29039,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 29021,
											"end": 29039,
											"name": "tag",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 29021,
											"end": 29039,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28934,
											"end": 29041,
											"name": "tag",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 28934,
											"end": 29041,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29065,
											"end": 29066,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29062,
											"end": 29063,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29058,
											"end": 29067,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29051,
											"end": 29067,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29051,
											"end": 29067,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28768,
											"end": 29073,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 28768,
											"end": 29073,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28768,
											"end": 29073,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28768,
											"end": 29073,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28768,
											"end": 29073,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 29079,
											"end": 29264,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 29079,
											"end": 29264,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29119,
											"end": 29120,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29136,
											"end": 29156,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 29154,
											"end": 29155,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29136,
											"end": 29156,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 29136,
											"end": 29156,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 29136,
											"end": 29156,
											"name": "tag",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 29136,
											"end": 29156,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29131,
											"end": 29156,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29131,
											"end": 29156,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29170,
											"end": 29190,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 29188,
											"end": 29189,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 29170,
											"end": 29190,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 29170,
											"end": 29190,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 29170,
											"end": 29190,
											"name": "tag",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 29170,
											"end": 29190,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29165,
											"end": 29190,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 29165,
											"end": 29190,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29209,
											"end": 29210,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29199,
											"end": 29234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 29199,
											"end": 29234,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 29214,
											"end": 29232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 29214,
											"end": 29232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 29214,
											"end": 29232,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 29214,
											"end": 29232,
											"name": "tag",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 29214,
											"end": 29232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29199,
											"end": 29234,
											"name": "tag",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 29199,
											"end": 29234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29256,
											"end": 29257,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29253,
											"end": 29254,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29249,
											"end": 29258,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 29244,
											"end": 29258,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29244,
											"end": 29258,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29079,
											"end": 29264,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 29079,
											"end": 29264,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29079,
											"end": 29264,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29079,
											"end": 29264,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29079,
											"end": 29264,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 29270,
											"end": 29461,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 29270,
											"end": 29461,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29310,
											"end": 29314,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29330,
											"end": 29350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 29348,
											"end": 29349,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29330,
											"end": 29350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 29330,
											"end": 29350,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 29330,
											"end": 29350,
											"name": "tag",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 29330,
											"end": 29350,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29325,
											"end": 29350,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29325,
											"end": 29350,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29364,
											"end": 29384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 29382,
											"end": 29383,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 29364,
											"end": 29384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 29364,
											"end": 29384,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 29364,
											"end": 29384,
											"name": "tag",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 29364,
											"end": 29384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29359,
											"end": 29384,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 29359,
											"end": 29384,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29403,
											"end": 29404,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29400,
											"end": 29401,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29397,
											"end": 29405,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 29394,
											"end": 29428,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 29394,
											"end": 29428,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 29394,
											"end": 29428,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 29408,
											"end": 29426,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 29408,
											"end": 29426,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 29408,
											"end": 29426,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 29408,
											"end": 29426,
											"name": "tag",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 29408,
											"end": 29426,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29394,
											"end": 29428,
											"name": "tag",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 29394,
											"end": 29428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29453,
											"end": 29454,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29450,
											"end": 29451,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29446,
											"end": 29455,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 29438,
											"end": 29455,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29438,
											"end": 29455,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29270,
											"end": 29461,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 29270,
											"end": 29461,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29270,
											"end": 29461,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29270,
											"end": 29461,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29270,
											"end": 29461,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 29467,
											"end": 29563,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 29467,
											"end": 29563,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29504,
											"end": 29511,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29533,
											"end": 29557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 29551,
											"end": 29556,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29533,
											"end": 29557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 29533,
											"end": 29557,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 29533,
											"end": 29557,
											"name": "tag",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 29533,
											"end": 29557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29522,
											"end": 29557,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29522,
											"end": 29557,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29467,
											"end": 29563,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29467,
											"end": 29563,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29467,
											"end": 29563,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29467,
											"end": 29563,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 29569,
											"end": 29659,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 29569,
											"end": 29659,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29603,
											"end": 29610,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29646,
											"end": 29651,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29639,
											"end": 29652,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 29632,
											"end": 29653,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 29621,
											"end": 29653,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29621,
											"end": 29653,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29569,
											"end": 29659,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29569,
											"end": 29659,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29569,
											"end": 29659,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29569,
											"end": 29659,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 29665,
											"end": 29814,
											"name": "tag",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 29665,
											"end": 29814,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29701,
											"end": 29708,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29741,
											"end": 29807,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29734,
											"end": 29739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29730,
											"end": 29808,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 29719,
											"end": 29808,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29719,
											"end": 29808,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29665,
											"end": 29814,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29665,
											"end": 29814,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29665,
											"end": 29814,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29665,
											"end": 29814,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 29820,
											"end": 29946,
											"name": "tag",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 29820,
											"end": 29946,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29857,
											"end": 29864,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29897,
											"end": 29939,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29890,
											"end": 29895,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29886,
											"end": 29940,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 29875,
											"end": 29940,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29875,
											"end": 29940,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29820,
											"end": 29946,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29820,
											"end": 29946,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29820,
											"end": 29946,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29820,
											"end": 29946,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 29952,
											"end": 30029,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 29952,
											"end": 30029,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29989,
											"end": 29996,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30018,
											"end": 30023,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 30007,
											"end": 30023,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 30007,
											"end": 30023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29952,
											"end": 30029,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29952,
											"end": 30029,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29952,
											"end": 30029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29952,
											"end": 30029,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 30035,
											"end": 30189,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 30035,
											"end": 30189,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30119,
											"end": 30125,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30114,
											"end": 30117,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 30109,
											"end": 30112,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30096,
											"end": 30126,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 30181,
											"end": 30182,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30172,
											"end": 30178,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30167,
											"end": 30170,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30163,
											"end": 30179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30156,
											"end": 30183,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 30035,
											"end": 30189,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30035,
											"end": 30189,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30035,
											"end": 30189,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30035,
											"end": 30189,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 30195,
											"end": 30502,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 30195,
											"end": 30502,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30263,
											"end": 30264,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30273,
											"end": 30386,
											"name": "tag",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 30273,
											"end": 30386,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30287,
											"end": 30293,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30284,
											"end": 30285,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 30281,
											"end": 30294,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 30273,
											"end": 30386,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 30273,
											"end": 30386,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 30273,
											"end": 30386,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 30372,
											"end": 30373,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 30367,
											"end": 30370,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30363,
											"end": 30374,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30357,
											"end": 30375,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 30353,
											"end": 30354,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 30348,
											"end": 30351,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 30344,
											"end": 30355,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30337,
											"end": 30376,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 30309,
											"end": 30311,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 30306,
											"end": 30307,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 30302,
											"end": 30312,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30297,
											"end": 30312,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 30297,
											"end": 30312,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30273,
											"end": 30386,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 30273,
											"end": 30386,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30273,
											"end": 30386,
											"name": "tag",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 30273,
											"end": 30386,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30404,
											"end": 30410,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30401,
											"end": 30402,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 30398,
											"end": 30411,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 30395,
											"end": 30496,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 30395,
											"end": 30496,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 30395,
											"end": 30496,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 30484,
											"end": 30485,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30475,
											"end": 30481,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 30470,
											"end": 30473,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 30466,
											"end": 30482,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30459,
											"end": 30486,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 30395,
											"end": 30496,
											"name": "tag",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 30395,
											"end": 30496,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30244,
											"end": 30502,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30195,
											"end": 30502,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30195,
											"end": 30502,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30195,
											"end": 30502,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30195,
											"end": 30502,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 30508,
											"end": 30828,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 30508,
											"end": 30828,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30552,
											"end": 30558,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30589,
											"end": 30590,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 30583,
											"end": 30587,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30579,
											"end": 30591,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 30569,
											"end": 30591,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 30569,
											"end": 30591,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30636,
											"end": 30637,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 30630,
											"end": 30634,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30626,
											"end": 30638,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 30657,
											"end": 30675,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 30647,
											"end": 30728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 30647,
											"end": 30728,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 30713,
											"end": 30717,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 30705,
											"end": 30711,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30701,
											"end": 30718,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 30691,
											"end": 30718,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 30691,
											"end": 30718,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30647,
											"end": 30728,
											"name": "tag",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 30647,
											"end": 30728,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30775,
											"end": 30777,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 30767,
											"end": 30773,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30764,
											"end": 30778,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 30744,
											"end": 30762,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 30741,
											"end": 30779,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 30738,
											"end": 30822,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 30738,
											"end": 30822,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 30738,
											"end": 30822,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 30794,
											"end": 30812,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 30794,
											"end": 30812,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 30794,
											"end": 30812,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 30794,
											"end": 30812,
											"name": "tag",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 30794,
											"end": 30812,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30738,
											"end": 30822,
											"name": "tag",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 30738,
											"end": 30822,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30559,
											"end": 30828,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30508,
											"end": 30828,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 30508,
											"end": 30828,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 30508,
											"end": 30828,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30508,
											"end": 30828,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 30834,
											"end": 31115,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 30834,
											"end": 31115,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30917,
											"end": 30944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 30939,
											"end": 30943,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30917,
											"end": 30944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 30917,
											"end": 30944,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 30917,
											"end": 30944,
											"name": "tag",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 30917,
											"end": 30944,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30909,
											"end": 30915,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 30905,
											"end": 30945,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 31047,
											"end": 31053,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 31035,
											"end": 31045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 31032,
											"end": 31054,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 31011,
											"end": 31029,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30999,
											"end": 31009,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30996,
											"end": 31030,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 30993,
											"end": 31055,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 30990,
											"end": 31078,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 30990,
											"end": 31078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 30990,
											"end": 31078,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 31058,
											"end": 31076,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 31058,
											"end": 31076,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 31058,
											"end": 31076,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 31058,
											"end": 31076,
											"name": "tag",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 31058,
											"end": 31076,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30990,
											"end": 31078,
											"name": "tag",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 30990,
											"end": 31078,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31098,
											"end": 31108,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 31094,
											"end": 31096,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 31087,
											"end": 31109,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 30877,
											"end": 31115,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30834,
											"end": 31115,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30834,
											"end": 31115,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30834,
											"end": 31115,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 31121,
											"end": 31354,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 31121,
											"end": 31354,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31160,
											"end": 31163,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 31183,
											"end": 31207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 31201,
											"end": 31206,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 31183,
											"end": 31207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 31183,
											"end": 31207,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 31183,
											"end": 31207,
											"name": "tag",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 31183,
											"end": 31207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31174,
											"end": 31207,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 31174,
											"end": 31207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31229,
											"end": 31295,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31222,
											"end": 31227,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 31219,
											"end": 31296,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 31216,
											"end": 31319,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 31216,
											"end": 31319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 31216,
											"end": 31319,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 31299,
											"end": 31317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 31299,
											"end": 31317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 31299,
											"end": 31317,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 31299,
											"end": 31317,
											"name": "tag",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 31299,
											"end": 31317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31216,
											"end": 31319,
											"name": "tag",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 31216,
											"end": 31319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31346,
											"end": 31347,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 31339,
											"end": 31344,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 31335,
											"end": 31348,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 31328,
											"end": 31348,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 31328,
											"end": 31348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31121,
											"end": 31354,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 31121,
											"end": 31354,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 31121,
											"end": 31354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31121,
											"end": 31354,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 31360,
											"end": 31536,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 31360,
											"end": 31536,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31392,
											"end": 31393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 31409,
											"end": 31429,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "618"
										},
										{
											"begin": 31427,
											"end": 31428,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 31409,
											"end": 31429,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 31409,
											"end": 31429,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 31409,
											"end": 31429,
											"name": "tag",
											"source": 12,
											"value": "618"
										},
										{
											"begin": 31409,
											"end": 31429,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31404,
											"end": 31429,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 31404,
											"end": 31429,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31443,
											"end": 31463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 31461,
											"end": 31462,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 31443,
											"end": 31463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 31443,
											"end": 31463,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 31443,
											"end": 31463,
											"name": "tag",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 31443,
											"end": 31463,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31438,
											"end": 31463,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 31438,
											"end": 31463,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31482,
											"end": 31483,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 31472,
											"end": 31507,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "620"
										},
										{
											"begin": 31472,
											"end": 31507,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 31487,
											"end": 31505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 31487,
											"end": 31505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 31487,
											"end": 31505,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 31487,
											"end": 31505,
											"name": "tag",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 31487,
											"end": 31505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31472,
											"end": 31507,
											"name": "tag",
											"source": 12,
											"value": "620"
										},
										{
											"begin": 31472,
											"end": 31507,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31528,
											"end": 31529,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 31525,
											"end": 31526,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 31521,
											"end": 31530,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 31516,
											"end": 31530,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 31516,
											"end": 31530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31360,
											"end": 31536,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 31360,
											"end": 31536,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 31360,
											"end": 31536,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31360,
											"end": 31536,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31360,
											"end": 31536,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 31542,
											"end": 31722,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 31542,
											"end": 31722,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31590,
											"end": 31667,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31587,
											"end": 31588,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 31580,
											"end": 31668,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 31687,
											"end": 31691,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 31684,
											"end": 31685,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 31677,
											"end": 31692,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 31711,
											"end": 31715,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 31708,
											"end": 31709,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 31701,
											"end": 31716,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 31728,
											"end": 31908,
											"name": "tag",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 31728,
											"end": 31908,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31776,
											"end": 31853,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31773,
											"end": 31774,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 31766,
											"end": 31854,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 31873,
											"end": 31877,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 31870,
											"end": 31871,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 31863,
											"end": 31878,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 31897,
											"end": 31901,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 31894,
											"end": 31895,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 31887,
											"end": 31902,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 31914,
											"end": 32094,
											"name": "tag",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 31914,
											"end": 32094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31962,
											"end": 32039,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31959,
											"end": 31960,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 31952,
											"end": 32040,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 32059,
											"end": 32063,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 32056,
											"end": 32057,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 32049,
											"end": 32064,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 32083,
											"end": 32087,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 32080,
											"end": 32081,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 32073,
											"end": 32088,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 32100,
											"end": 32280,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 32100,
											"end": 32280,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32148,
											"end": 32225,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32145,
											"end": 32146,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 32138,
											"end": 32226,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 32245,
											"end": 32249,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 32242,
											"end": 32243,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 32235,
											"end": 32250,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 32269,
											"end": 32273,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 32266,
											"end": 32267,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 32259,
											"end": 32274,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 32286,
											"end": 32466,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 32286,
											"end": 32466,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32334,
											"end": 32411,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32331,
											"end": 32332,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 32324,
											"end": 32412,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 32431,
											"end": 32435,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 32428,
											"end": 32429,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 32421,
											"end": 32436,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 32455,
											"end": 32459,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 32452,
											"end": 32453,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 32445,
											"end": 32460,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 32472,
											"end": 32655,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 32472,
											"end": 32655,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32507,
											"end": 32510,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 32545,
											"end": 32546,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 32527,
											"end": 32543,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 32524,
											"end": 32547,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 32521,
											"end": 32649,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 32521,
											"end": 32649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "628"
										},
										{
											"begin": 32521,
											"end": 32649,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 32583,
											"end": 32584,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 32580,
											"end": 32581,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 32577,
											"end": 32578,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 32562,
											"end": 32585,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 32605,
											"end": 32639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "629"
										},
										{
											"begin": 32636,
											"end": 32637,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 32630,
											"end": 32638,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 32605,
											"end": 32639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 32605,
											"end": 32639,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 32605,
											"end": 32639,
											"name": "tag",
											"source": 12,
											"value": "629"
										},
										{
											"begin": 32605,
											"end": 32639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32598,
											"end": 32639,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 32598,
											"end": 32639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 32521,
											"end": 32649,
											"name": "tag",
											"source": 12,
											"value": "628"
										},
										{
											"begin": 32521,
											"end": 32649,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32472,
											"end": 32655,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 32472,
											"end": 32655,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 32661,
											"end": 32778,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 32661,
											"end": 32778,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32770,
											"end": 32771,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 32767,
											"end": 32768,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 32760,
											"end": 32772,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 32784,
											"end": 32901,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 32784,
											"end": 32901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32893,
											"end": 32894,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 32890,
											"end": 32891,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 32883,
											"end": 32895,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 32907,
											"end": 33024,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 32907,
											"end": 33024,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 33016,
											"end": 33017,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 33013,
											"end": 33014,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 33006,
											"end": 33018,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 33030,
											"end": 33147,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 33030,
											"end": 33147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 33139,
											"end": 33140,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 33136,
											"end": 33137,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 33129,
											"end": 33141,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 33153,
											"end": 33270,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 33153,
											"end": 33270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 33262,
											"end": 33263,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 33259,
											"end": 33260,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 33252,
											"end": 33264,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 33276,
											"end": 33378,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 33276,
											"end": 33378,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 33317,
											"end": 33323,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 33368,
											"end": 33370,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 33364,
											"end": 33371,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 33359,
											"end": 33361,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 33352,
											"end": 33357,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 33348,
											"end": 33362,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 33344,
											"end": 33372,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 33334,
											"end": 33372,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 33334,
											"end": 33372,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 33276,
											"end": 33378,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 33276,
											"end": 33378,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 33276,
											"end": 33378,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 33276,
											"end": 33378,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 33384,
											"end": 33490,
											"name": "tag",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 33384,
											"end": 33490,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 33428,
											"end": 33436,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 33477,
											"end": 33482,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 33472,
											"end": 33475,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 33468,
											"end": 33483,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 33447,
											"end": 33483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 33447,
											"end": 33483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 33384,
											"end": 33490,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 33384,
											"end": 33490,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 33384,
											"end": 33490,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 33384,
											"end": 33490,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 33496,
											"end": 33735,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 33496,
											"end": 33735,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 33636,
											"end": 33670,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 33632,
											"end": 33633,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 33624,
											"end": 33630,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 33620,
											"end": 33634,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 33613,
											"end": 33671,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 33705,
											"end": 33727,
											"name": "PUSH",
											"source": 12,
											"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
										},
										{
											"begin": 33700,
											"end": 33702,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 33692,
											"end": 33698,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 33688,
											"end": 33703,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 33681,
											"end": 33728,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 33496,
											"end": 33735,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 33496,
											"end": 33735,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 33741,
											"end": 33968,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 33741,
											"end": 33968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 33881,
											"end": 33915,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 33877,
											"end": 33878,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 33869,
											"end": 33875,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 33865,
											"end": 33879,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 33858,
											"end": 33916,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 33950,
											"end": 33960,
											"name": "PUSH",
											"source": 12,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33945,
											"end": 33947,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 33937,
											"end": 33943,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 33933,
											"end": 33948,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 33926,
											"end": 33961,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 33741,
											"end": 33968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 33741,
											"end": 33968,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 33974,
											"end": 34202,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 33974,
											"end": 34202,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 34114,
											"end": 34148,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 34110,
											"end": 34111,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 34102,
											"end": 34108,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 34098,
											"end": 34112,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 34091,
											"end": 34149,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 34183,
											"end": 34194,
											"name": "PUSH",
											"source": 12,
											"value": "20617070726F7665640000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34178,
											"end": 34180,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 34170,
											"end": 34176,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 34166,
											"end": 34181,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 34159,
											"end": 34195,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 33974,
											"end": 34202,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 33974,
											"end": 34202,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 34208,
											"end": 34437,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 34208,
											"end": 34437,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 34348,
											"end": 34382,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A2061646472657373207A65726F206973206E6F7420612076"
										},
										{
											"begin": 34344,
											"end": 34345,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 34336,
											"end": 34342,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 34332,
											"end": 34346,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 34325,
											"end": 34383,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 34417,
											"end": 34429,
											"name": "PUSH",
											"source": 12,
											"value": "616C6964206F776E657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 34412,
											"end": 34414,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 34404,
											"end": 34410,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 34400,
											"end": 34415,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 34393,
											"end": 34430,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 34208,
											"end": 34437,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 34208,
											"end": 34437,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 34443,
											"end": 34667,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 34443,
											"end": 34667,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 34583,
											"end": 34617,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 34579,
											"end": 34580,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 34571,
											"end": 34577,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 34567,
											"end": 34581,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 34560,
											"end": 34618,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 34652,
											"end": 34659,
											"name": "PUSH",
											"source": 12,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34647,
											"end": 34649,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 34639,
											"end": 34645,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 34635,
											"end": 34650,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 34628,
											"end": 34660,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 34443,
											"end": 34667,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 34443,
											"end": 34667,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 34673,
											"end": 34910,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 34673,
											"end": 34910,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 34813,
											"end": 34847,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 34809,
											"end": 34810,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 34801,
											"end": 34807,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 34797,
											"end": 34811,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 34790,
											"end": 34848,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 34882,
											"end": 34902,
											"name": "PUSH",
											"source": 12,
											"value": "6F776E6572206E6F7220617070726F7665640000000000000000000000000000"
										},
										{
											"begin": 34877,
											"end": 34879,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 34869,
											"end": 34875,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 34865,
											"end": 34880,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 34858,
											"end": 34903,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 34673,
											"end": 34910,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 34673,
											"end": 34910,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 34916,
											"end": 35145,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 34916,
											"end": 35145,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 35056,
											"end": 35090,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 35052,
											"end": 35053,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 35044,
											"end": 35050,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 35040,
											"end": 35054,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 35033,
											"end": 35091,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 35125,
											"end": 35137,
											"name": "PUSH",
											"source": 12,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 35120,
											"end": 35122,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 35112,
											"end": 35118,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 35108,
											"end": 35123,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 35101,
											"end": 35138,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 34916,
											"end": 35145,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 34916,
											"end": 35145,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 35151,
											"end": 35306,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 35151,
											"end": 35306,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 35291,
											"end": 35298,
											"name": "PUSH",
											"source": 12,
											"value": "2E6A736F6E000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35287,
											"end": 35288,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 35279,
											"end": 35285,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 35275,
											"end": 35289,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 35268,
											"end": 35299,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 35151,
											"end": 35306,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 35151,
											"end": 35306,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 35312,
											"end": 35540,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 35312,
											"end": 35540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 35452,
											"end": 35486,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 35448,
											"end": 35449,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 35440,
											"end": 35446,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 35436,
											"end": 35450,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 35429,
											"end": 35487,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 35521,
											"end": 35532,
											"name": "PUSH",
											"source": 12,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35516,
											"end": 35518,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 35508,
											"end": 35514,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 35504,
											"end": 35519,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 35497,
											"end": 35533,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 35312,
											"end": 35540,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 35312,
											"end": 35540,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 35546,
											"end": 35774,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 35546,
											"end": 35774,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 35686,
											"end": 35720,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 35682,
											"end": 35683,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 35674,
											"end": 35680,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 35670,
											"end": 35684,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 35663,
											"end": 35721,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 35755,
											"end": 35766,
											"name": "PUSH",
											"source": 12,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35750,
											"end": 35752,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 35742,
											"end": 35748,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 35738,
											"end": 35753,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 35731,
											"end": 35767,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 35546,
											"end": 35774,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 35546,
											"end": 35774,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 35780,
											"end": 36007,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 35780,
											"end": 36007,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 35920,
											"end": 35954,
											"name": "PUSH",
											"source": 12,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 35916,
											"end": 35917,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 35908,
											"end": 35914,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 35904,
											"end": 35918,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 35897,
											"end": 35955,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 35989,
											"end": 35999,
											"name": "PUSH",
											"source": 12,
											"value": "6D69736D61746368000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35984,
											"end": 35986,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 35976,
											"end": 35982,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 35972,
											"end": 35987,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 35965,
											"end": 36000,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 35780,
											"end": 36007,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 35780,
											"end": 36007,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 36013,
											"end": 36724,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 36013,
											"end": 36724,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 36052,
											"end": 36055,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 36090,
											"end": 36094,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 36072,
											"end": 36088,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 36069,
											"end": 36095,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 36066,
											"end": 36105,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 36066,
											"end": 36105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "650"
										},
										{
											"begin": 36066,
											"end": 36105,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 36098,
											"end": 36103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "649"
										},
										{
											"begin": 36098,
											"end": 36103,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 36066,
											"end": 36105,
											"name": "tag",
											"source": 12,
											"value": "650"
										},
										{
											"begin": 36066,
											"end": 36105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 36127,
											"end": 36147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "651"
										},
										{
											"begin": 36127,
											"end": 36147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 36127,
											"end": 36147,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 36127,
											"end": 36147,
											"name": "tag",
											"source": 12,
											"value": "651"
										},
										{
											"begin": 36127,
											"end": 36147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 36202,
											"end": 36203,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 36184,
											"end": 36200,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 36180,
											"end": 36204,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 36177,
											"end": 36178,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 36171,
											"end": 36175,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 36156,
											"end": 36205,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 36235,
											"end": 36239,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 36229,
											"end": 36240,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 36334,
											"end": 36350,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 36327,
											"end": 36331,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 36319,
											"end": 36325,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 36315,
											"end": 36332,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 36312,
											"end": 36351,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 36279,
											"end": 36297,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36271,
											"end": 36277,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 36268,
											"end": 36298,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 36252,
											"end": 36365,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 36249,
											"end": 36395,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 36249,
											"end": 36395,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "652"
										},
										{
											"begin": 36249,
											"end": 36395,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 36380,
											"end": 36385,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 36380,
											"end": 36385,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 36380,
											"end": 36385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "649"
										},
										{
											"begin": 36380,
											"end": 36385,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 36249,
											"end": 36395,
											"name": "tag",
											"source": 12,
											"value": "652"
										},
										{
											"begin": 36249,
											"end": 36395,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 36426,
											"end": 36432,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 36420,
											"end": 36424,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 36416,
											"end": 36433,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 36462,
											"end": 36465,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 36456,
											"end": 36466,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 36489,
											"end": 36507,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36481,
											"end": 36487,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 36478,
											"end": 36508,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 36475,
											"end": 36518,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 36475,
											"end": 36518,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "653"
										},
										{
											"begin": 36475,
											"end": 36518,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 36511,
											"end": 36516,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 36511,
											"end": 36516,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 36511,
											"end": 36516,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 36511,
											"end": 36516,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 36511,
											"end": 36516,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "649"
										},
										{
											"begin": 36511,
											"end": 36516,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 36475,
											"end": 36518,
											"name": "tag",
											"source": 12,
											"value": "653"
										},
										{
											"begin": 36475,
											"end": 36518,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 36559,
											"end": 36565,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 36552,
											"end": 36556,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 36547,
											"end": 36550,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 36543,
											"end": 36557,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 36539,
											"end": 36566,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 36618,
											"end": 36619,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 36600,
											"end": 36616,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 36596,
											"end": 36620,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 36590,
											"end": 36594,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 36586,
											"end": 36621,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 36581,
											"end": 36584,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 36578,
											"end": 36622,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 36575,
											"end": 36632,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 36575,
											"end": 36632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "654"
										},
										{
											"begin": 36575,
											"end": 36632,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 36625,
											"end": 36630,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 36625,
											"end": 36630,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 36625,
											"end": 36630,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 36625,
											"end": 36630,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 36625,
											"end": 36630,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 36625,
											"end": 36630,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "649"
										},
										{
											"begin": 36625,
											"end": 36630,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 36575,
											"end": 36632,
											"name": "tag",
											"source": 12,
											"value": "654"
										},
										{
											"begin": 36575,
											"end": 36632,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 36642,
											"end": 36699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "655"
										},
										{
											"begin": 36690,
											"end": 36696,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 36684,
											"end": 36688,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 36680,
											"end": 36697,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 36672,
											"end": 36678,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 36668,
											"end": 36698,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 36662,
											"end": 36666,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 36642,
											"end": 36699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 36642,
											"end": 36699,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 36642,
											"end": 36699,
											"name": "tag",
											"source": 12,
											"value": "655"
										},
										{
											"begin": 36642,
											"end": 36699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 36715,
											"end": 36718,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 36708,
											"end": 36718,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 36708,
											"end": 36718,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 36056,
											"end": 36724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 36056,
											"end": 36724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 36056,
											"end": 36724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 36056,
											"end": 36724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 36056,
											"end": 36724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 36013,
											"end": 36724,
											"name": "tag",
											"source": 12,
											"value": "649"
										},
										{
											"begin": 36013,
											"end": 36724,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 36013,
											"end": 36724,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 36013,
											"end": 36724,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 36730,
											"end": 36852,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 36730,
											"end": 36852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 36803,
											"end": 36827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 36821,
											"end": 36826,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 36803,
											"end": 36827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 36803,
											"end": 36827,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 36803,
											"end": 36827,
											"name": "tag",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 36803,
											"end": 36827,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 36796,
											"end": 36801,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 36793,
											"end": 36828,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 36783,
											"end": 36846,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "658"
										},
										{
											"begin": 36783,
											"end": 36846,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 36842,
											"end": 36843,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 36839,
											"end": 36840,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 36832,
											"end": 36844,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 36783,
											"end": 36846,
											"name": "tag",
											"source": 12,
											"value": "658"
										},
										{
											"begin": 36783,
											"end": 36846,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 36730,
											"end": 36852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 36730,
											"end": 36852,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 36858,
											"end": 36974,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 36858,
											"end": 36974,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 36928,
											"end": 36949,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 36943,
											"end": 36948,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 36928,
											"end": 36949,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 36928,
											"end": 36949,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 36928,
											"end": 36949,
											"name": "tag",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 36928,
											"end": 36949,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 36921,
											"end": 36926,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 36918,
											"end": 36950,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 36908,
											"end": 36968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 36908,
											"end": 36968,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 36964,
											"end": 36965,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 36961,
											"end": 36962,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 36954,
											"end": 36966,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 36908,
											"end": 36968,
											"name": "tag",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 36908,
											"end": 36968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 36858,
											"end": 36974,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 36858,
											"end": 36974,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 36980,
											"end": 37100,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 36980,
											"end": 37100,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 37052,
											"end": 37075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "663"
										},
										{
											"begin": 37069,
											"end": 37074,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 37052,
											"end": 37075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 37052,
											"end": 37075,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 37052,
											"end": 37075,
											"name": "tag",
											"source": 12,
											"value": "663"
										},
										{
											"begin": 37052,
											"end": 37075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 37045,
											"end": 37050,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 37042,
											"end": 37076,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 37032,
											"end": 37094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "664"
										},
										{
											"begin": 37032,
											"end": 37094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 37090,
											"end": 37091,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 37087,
											"end": 37088,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 37080,
											"end": 37092,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 37032,
											"end": 37094,
											"name": "tag",
											"source": 12,
											"value": "664"
										},
										{
											"begin": 37032,
											"end": 37094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 36980,
											"end": 37100,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 36980,
											"end": 37100,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 37106,
											"end": 37228,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 37106,
											"end": 37228,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 37179,
											"end": 37203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 37197,
											"end": 37202,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 37179,
											"end": 37203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 37179,
											"end": 37203,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 37179,
											"end": 37203,
											"name": "tag",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 37179,
											"end": 37203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 37172,
											"end": 37177,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 37169,
											"end": 37204,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 37159,
											"end": 37222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "667"
										},
										{
											"begin": 37159,
											"end": 37222,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 37218,
											"end": 37219,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 37215,
											"end": 37216,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 37208,
											"end": 37220,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 37159,
											"end": 37222,
											"name": "tag",
											"source": 12,
											"value": "667"
										},
										{
											"begin": 37159,
											"end": 37222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 37106,
											"end": 37228,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 37106,
											"end": 37228,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xfa7dfea8a63e857969c7b2448e5192c6b2a797e2c9bf9e84bccb1f8b74210955\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c4f3cadf4aafa61b16a428297c22be085b567562c57e9a38628f7cdef4a806\",\"dweb:/ipfs/QmePv5X5HaR1eVHq1jJDoZCuKDqQYW4Qs6APU7XM29m86o\"]},\"contracts/OZ_contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"contracts/OZ_contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"contracts/OZ_contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/OZ_contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"contracts/OZ_contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 419,
								"contract": "contracts/OZ_contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 425,
								"contract": "contracts/OZ_contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 427,
								"contract": "contracts/OZ_contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Locking.sol": {
				"ERC1155Locking": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleOwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "OWNER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getLock",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getPermanentLock",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleOwner",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"getRoleOwner(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"OWNER_ROLE()": "e58378bb",
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"getLock(address)": "6b9db4e6",
							"getPermanentLock(address)": "eb1fe5a7",
							"getRoleOwner(bytes32)": "e386880d",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isApprovedForAll(address,address)": "e985e9c5",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleOwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OWNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getPermanentLock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleOwner\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"getRoleOwner(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Locking.sol\":\"ERC1155Locking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/access/AccessControl.sol\":{\"keccak256\":\"0xbef9dcdf64a086dfdf43f52756b8746ac49ddb872c0fe061ee797789dc5a7c6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d43606057726944a46588a7570db076b022e254015301d129ff673f156533314\",\"dweb:/ipfs/QmZeW4P5AH3tgwy7c9yPXJZ66qkhRwb37mDPYufj1SN4aM\"]},\"contracts/OZ_contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x7373b814ff549a41e4f38644fcdebfe1a0cbe64615beebcaf001cf88e503a284\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b90e6083736e78526c73ece0f593586286b9a0b4c30b9eeff8ce4557a355feb\",\"dweb:/ipfs/QmfVAS4V328yBSC7hQFwgJejCTPRVZubVqszDnrrwzhrN7\"]},\"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xfa7dfea8a63e857969c7b2448e5192c6b2a797e2c9bf9e84bccb1f8b74210955\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c4f3cadf4aafa61b16a428297c22be085b567562c57e9a38628f7cdef4a806\",\"dweb:/ipfs/QmePv5X5HaR1eVHq1jJDoZCuKDqQYW4Qs6APU7XM29m86o\"]},\"contracts/OZ_contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Locking.sol\":{\"keccak256\":\"0xf7b352dd80d3fc81f259dd4a3713db571bdf47bc99ac560973a0d1550b0d920a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f7f8aee341f7cd19c6573579d2b76c24cab5bf44a7da073d999e8c1132fe94\",\"dweb:/ipfs/QmRbmDcozzTck9DCEGrkoczHn5tGsz9DFbAnHjoT2gizwd\"]},\"contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"contracts/OZ_contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"contracts/OZ_contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/OZ_contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"contracts/OZ_contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 419,
								"contract": "contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Locking.sol:ERC1155Locking",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 425,
								"contract": "contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Locking.sol:ERC1155Locking",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 427,
								"contract": "contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Locking.sol:ERC1155Locking",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 24,
								"contract": "contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Locking.sol:ERC1155Locking",
								"label": "_roles",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							},
							{
								"astId": 1803,
								"contract": "contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Locking.sol:ERC1155Locking",
								"label": "_locks",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1807,
								"contract": "contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Locking.sol:ERC1155Locking",
								"label": "_permanentLocks",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Locking.sol:ERC1155Locking",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Locking.sol:ERC1155Locking",
										"label": "ownerRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/OZ_contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/OZ_contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e5788ade73e6267eff0e7af85ddd3a4e006b6cac4d5ed209cd49dfdcd3619cd664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e5788ade73e6267eff0e7af85ddd3a4e006b6cac4d5ed209cd49dfdcd3619cd664736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH25 0x8ADE73E6267EFF0E7AF85DDD3A4E006B6CAC4D5ED209CD49DF 0xDC 0xD3 PUSH2 0x9CD6 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:8061:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e5788ade73e6267eff0e7af85ddd3a4e006b6cac4d5ed209cd49dfdcd3619cd664736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH25 0x8ADE73E6267EFF0E7AF85DDD3A4E006B6CAC4D5ED209CD49DF 0xDC 0xD3 PUSH2 0x9CD6 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:8061:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e5788ade73e6267eff0e7af85ddd3a4e006b6cac4d5ed209cd49dfdcd3619cd664736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/OZ_contracts/utils/Strings.sol\":146:2031  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":146:2031  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d465b2dd9d36cd4d2eb1fb946a66636d6f930175a93fcc3d2b74f33d55a1280964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d465b2dd9d36cd4d2eb1fb946a66636d6f930175a93fcc3d2b74f33d55a1280964736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 PUSH6 0xB2DD9D36CD4D 0x2E 0xB1 0xFB SWAP5 PUSH11 0x66636D6F930175A93FCC3D 0x2B PUSH21 0xF33D55A1280964736F6C6343000807003300000000 ",
							"sourceMap": "146:1885:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d465b2dd9d36cd4d2eb1fb946a66636d6f930175a93fcc3d2b74f33d55a1280964736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 PUSH6 0xB2DD9D36CD4D 0x2E 0xB1 0xFB SWAP5 PUSH11 0x66636D6F930175A93FCC3D 0x2B PUSH21 0xF33D55A1280964736F6C6343000807003300000000 ",
							"sourceMap": "146:1885:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d465b2dd9d36cd4d2eb1fb946a66636d6f930175a93fcc3d2b74f33d55a1280964736f6c63430008070033",
									".code": [
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/OZ_contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"Context": [
							2311
						],
						"ERC165": [
							2538
						],
						"IAccessControl": [
							392
						],
						"IERC165": [
							2550
						],
						"Strings": [
							2514
						]
					},
					"id": 320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "contracts/OZ_contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 393,
							"src": "133:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 2312,
							"src": "164:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 2515,
							"src": "195:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 2539,
							"src": "226:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2311,
										"src": "1841:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1841:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "1850:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1850:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2538,
										"src": "1866:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1866:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "271:1534:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 319,
							"linearizedBaseContracts": [
								319,
								2538,
								2550,
								392,
								2311
							],
							"name": "AccessControl",
							"nameLocation": "1824:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1930:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1905:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1905:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "ownerRole",
											"nameLocation": "1955:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1947:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1947:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1886:8:0",
									"nodeType": "StructDefinition",
									"scope": 319,
									"src": "1879:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2014:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "1977:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1985:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1977:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "1996:8:0"
											},
											"referencedDeclaration": 19,
											"src": "1996:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "e58378bb",
									"id": 27,
									"mutability": "constant",
									"name": "OWNER_ROLE",
									"nameLocation": "2051:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "2027:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2027:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2064:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2487:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2508:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															135
														],
														"referencedDeclaration": 92,
														"src": "2497:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2497:16:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "2523:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "2075:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 38,
									"name": "onlyRole",
									"nameLocation": "2464:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2481:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "2473:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2472:14:0"
									},
									"src": "2455:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2537
									],
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2689:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 47,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2706:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 49,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "2726:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$392_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$392_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 48,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2721:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2721:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$392",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2721:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2706:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "2781:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 53,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2757:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$319_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2537,
															"src": "2757:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2757:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2706:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 58,
												"nodeType": "Return",
												"src": "2699:94:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2537:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2607:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 43,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2665:8:0"
									},
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2632:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2625:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 40,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2625:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2624:20:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2683:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2683:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:6:0"
									},
									"scope": 319,
									"src": "2598:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										359
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "2979:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 71,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2996:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 73,
															"indexExpression": {
																"id": 72,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3003:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2996:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "2996:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 76,
													"indexExpression": {
														"id": 75,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3017:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2996:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 77,
												"nodeType": "Return",
												"src": "2989:36:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2806:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2896:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2955:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2912:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2904:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2926:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2918:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2918:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2903:31:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2973:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2973:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2972:6:0"
									},
									"scope": 319,
									"src": "2887:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3382:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3403:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 87,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2301,
																"src": "3409:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3409:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															135
														],
														"referencedDeclaration": 135,
														"src": "3392:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3392:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "3392:30:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3038:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3335:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3354:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3346:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3345:14:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3382:0:0"
									},
									"scope": 319,
									"src": "3326:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "3783:419:0",
										"statements": [
											{
												"condition": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3797:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 101,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "3806:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 102,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3812:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 100,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3798:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3798:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 133,
												"nodeType": "IfStatement",
												"src": "3793:403:0",
												"trueBody": {
													"id": 132,
													"nodeType": "Block",
													"src": "3822:374:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3930:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 115,
																										"name": "account",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 97,
																										"src": "4009:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 114,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4001:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint160_$",
																										"typeString": "type(uint160)"
																									},
																									"typeName": {
																										"id": 113,
																										"name": "uint160",
																										"nodeType": "ElementaryTypeName",
																										"src": "4001:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 116,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4001:16:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								}
																							},
																							{
																								"hexValue": "3230",
																								"id": 117,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4019:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								},
																								"value": "20"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								},
																								{
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								}
																							],
																							"expression": {
																								"id": 111,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2514,
																								"src": "3981:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$2514_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2513,
																							"src": "3981:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 118,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3981:41:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 119,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4048:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 124,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 95,
																										"src": "4121:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 123,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4113:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 122,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4113:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 125,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4113:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 126,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4128:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 120,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2514,
																								"src": "4093:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$2514_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 121,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2513,
																							"src": "4093:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4093:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 108,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3888:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3888:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3888:265:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3860:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 106,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3860:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3860:311:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 105,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3836:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3836:349:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 131,
															"nodeType": "ExpressionStatement",
															"src": "3836:349:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3435:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3719:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3738:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3730:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3752:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3744:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3744:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3729:31:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3783:0:0"
									},
									"scope": 319,
									"src": "3710:492:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										367
									],
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4466:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 144,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4483:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 146,
														"indexExpression": {
															"id": 145,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "4490:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4483:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "ownerRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4483:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 143,
												"id": 148,
												"nodeType": "Return",
												"src": "4476:29:0"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "4208:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "e386880d",
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleOwner",
									"nameLocation": "4392:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 140,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4439:8:0"
									},
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4413:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4405:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4405:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4404:14:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 319,
									"src": "4383:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										375
									],
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "4865:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 165,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4886:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 166,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "4892:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 164,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "4875:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4875:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "4875:25:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4518:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 160,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4858:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 159,
														"name": "getRoleOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "4845:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4845:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 162,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 158,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "4836:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4836:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4771:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 157,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4827:8:0"
									},
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4789:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4781:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4803:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4795:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4780:31:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4865:0:0"
									},
									"scope": 319,
									"src": "4762:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										383
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5245:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5267:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "5273:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5255:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5255:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5255:26:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "4913:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 180,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5238:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 179,
														"name": "getRoleOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "5225:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5225:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5216:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5216:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5150:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 177,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5207:8:0"
									},
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5169:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5161:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 172,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5183:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5175:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5160:31:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5245:0:0"
									},
									"scope": 319,
									"src": "5141:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										391
									],
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "5856:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 200,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "5874:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 201,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2301,
																	"src": "5885:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5885:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5874:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5899:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5866:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5866:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "5866:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 208,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5972:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 209,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5978:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 207,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5960:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5960:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "5960:26:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5294:480:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5788:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 197,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5847:8:0"
									},
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5809:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5801:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5823:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5815:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5815:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5800:31:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5856:0:0"
									},
									"scope": 319,
									"src": "5779:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6700:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 222,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "6721:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 223,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "6727:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 221,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "6710:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6710:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "6710:25:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "5999:628:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6641:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6660:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6652:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6666:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:31:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6700:0:0"
									},
									"scope": 319,
									"src": "6632:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "6940:174:0",
										"statements": [
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "previousownerRole",
														"nameLocation": "6958:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 254,
														"src": "6950:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 235,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6950:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 240,
												"initialValue": {
													"arguments": [
														{
															"id": 238,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "6991:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 237,
														"name": "getRoleOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "6978:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6978:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6950:46:0"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 241,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "7006:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 243,
															"indexExpression": {
																"id": 242,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "7013:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7006:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "ownerRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "7006:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 245,
														"name": "ownerRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "7031:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7006:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "7006:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7072:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 250,
															"name": "previousownerRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "7078:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 251,
															"name": "ownerRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7097:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 248,
														"name": "RoleOwnerChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "7055:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7055:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "EmitStatement",
												"src": "7050:57:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6748:114:0",
										"text": " @dev Sets `ownerRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleOwner",
									"nameLocation": "6876:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6898:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "6890:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 229,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6890:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "ownerRole",
												"nameLocation": "6912:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "6904:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6889:33:0"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6940:0:0"
									},
									"scope": 319,
									"src": "6867:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "7304:165:0",
										"statements": [
											{
												"condition": {
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7318:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 264,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "7327:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 265,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "7333:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 263,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "7319:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7319:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 285,
												"nodeType": "IfStatement",
												"src": "7314:149:0",
												"trueBody": {
													"id": 284,
													"nodeType": "Block",
													"src": "7343:120:0",
													"statements": [
														{
															"expression": {
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 268,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7357:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 270,
																			"indexExpression": {
																				"id": 269,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7364:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7357:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 271,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7357:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 273,
																	"indexExpression": {
																		"id": 272,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7378:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7357:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7389:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7357:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 276,
															"nodeType": "ExpressionStatement",
															"src": "7357:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 278,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "7424:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 279,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7430:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 280,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2301,
																			"src": "7439:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7439:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 277,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "7412:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7412:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 283,
															"nodeType": "EmitStatement",
															"src": "7407:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "7120:111:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction."
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7245:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7264:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "7256:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7256:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7278:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "7270:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7270:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7255:31:0"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7304:0:0"
									},
									"scope": 319,
									"src": "7236:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "7663:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 296,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "7685:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 297,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "7691:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 295,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "7677:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7677:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 316,
												"nodeType": "IfStatement",
												"src": "7673:149:0",
												"trueBody": {
													"id": 315,
													"nodeType": "Block",
													"src": "7701:121:0",
													"statements": [
														{
															"expression": {
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 299,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7715:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 301,
																			"indexExpression": {
																				"id": 300,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 290,
																				"src": "7722:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7715:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7715:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 304,
																	"indexExpression": {
																		"id": 303,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "7736:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7715:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7747:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7715:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "7715:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 309,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "7783:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 310,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "7789:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 311,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2301,
																			"src": "7798:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7798:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 308,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "7771:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7771:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 314,
															"nodeType": "EmitStatement",
															"src": "7766:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "7475:114:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction."
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7603:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7623:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "7615:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 289,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7615:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7637:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "7629:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7629:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7614:31:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7663:0:0"
									},
									"scope": 319,
									"src": "7594:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 320,
							"src": "1806:6024:0",
							"usedErrors": []
						}
					],
					"src": "108:7723:0"
				},
				"id": 0
			},
			"contracts/OZ_contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 321,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 392,
							"linearizedBaseContracts": [
								392
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"id": 331,
									"name": "RoleOwnerChanged",
									"nameLocation": "543:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "560:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "582:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 326,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "617:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:1"
									},
									"src": "537:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"id": 340,
									"name": "RoleGranted",
									"nameLocation": "876:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "888:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 333,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "910:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "935:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:1"
									},
									"src": "870:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"id": 349,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1263:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 342,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1285:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1310:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:1"
									},
									"src": "1245:89:1"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1438:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1452:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:1"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1492:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:1"
									},
									"scope": 392,
									"src": "1421:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "e386880d",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleOwner",
									"nameLocation": "1702:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 361,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:1"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1752:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:1"
									},
									"scope": 392,
									"src": "1693:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2030:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 369,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:1"
									},
									"scope": 392,
									"src": "2011:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2324:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 377,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2338:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:1"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:1"
									},
									"scope": 392,
									"src": "2304:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2877:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 385,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2891:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:1"
									},
									"scope": 392,
									"src": "2855:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 393,
							"src": "209:2710:1",
							"usedErrors": []
						}
					],
					"src": "94:2826:1"
				},
				"id": 1
			},
			"contracts/OZ_contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							2289
						],
						"Context": [
							2311
						],
						"ERC1155": [
							1627
						],
						"ERC165": [
							2538
						],
						"IERC1155": [
							1749
						],
						"IERC1155MetadataURI": [
							1994
						],
						"IERC1155Receiver": [
							1790
						],
						"IERC165": [
							2550
						],
						"Strings": [
							2514
						]
					},
					"id": 1628,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:2"
						},
						{
							"absolutePath": "contracts/OZ_contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 395,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1628,
							"sourceUnit": 1750,
							"src": "134:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 396,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1628,
							"sourceUnit": 1791,
							"src": "159:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 397,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1628,
							"sourceUnit": 1995,
							"src": "192:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 398,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1628,
							"sourceUnit": 2290,
							"src": "239:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 399,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1628,
							"sourceUnit": 2312,
							"src": "273:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 400,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1628,
							"sourceUnit": 2539,
							"src": "307:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 401,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1628,
							"sourceUnit": 2515,
							"src": "354:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 403,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2311,
										"src": "624:7:2"
									},
									"id": 404,
									"nodeType": "InheritanceSpecifier",
									"src": "624:7:2"
								},
								{
									"baseName": {
										"id": 405,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2538,
										"src": "633:6:2"
									},
									"id": 406,
									"nodeType": "InheritanceSpecifier",
									"src": "633:6:2"
								},
								{
									"baseName": {
										"id": 407,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1749,
										"src": "641:8:2"
									},
									"id": 408,
									"nodeType": "InheritanceSpecifier",
									"src": "641:8:2"
								},
								{
									"baseName": {
										"id": 409,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1994,
										"src": "651:19:2"
									},
									"id": 410,
									"nodeType": "InheritanceSpecifier",
									"src": "651:19:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 402,
								"nodeType": "StructuredDocumentation",
								"src": "389:214:2",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1627,
							"linearizedBaseContracts": [
								1627,
								1994,
								1749,
								2538,
								2550,
								2311
							],
							"name": "ERC1155",
							"nameLocation": "613:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 413,
									"libraryName": {
										"id": 411,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2289,
										"src": "683:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "677:26:2",
									"typeName": {
										"id": 412,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "695:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 419,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "814:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1627,
									"src": "758:65:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 418,
										"keyType": {
											"id": 414,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "766:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "758:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 417,
											"keyType": {
												"id": 415,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "785:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "777:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 416,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "796:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "933:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1627,
									"src": "880:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 424,
										"keyType": {
											"id": 420,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "888:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "880:44:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 423,
											"keyType": {
												"id": 421,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "907:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "899:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 422,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "918:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1087:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1627,
									"src": "1072:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 426,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1072:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "1173:30:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 434,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "1191:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 433,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "1183:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1183:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "1183:13:2"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "1098:38:2",
										"text": " @dev See {_setURI}."
									},
									"id": 438,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1167:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "1153:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1153:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1152:20:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1173:0:2"
									},
									"scope": 1627,
									"src": "1141:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2537,
										2549
									],
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "1378:197:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 449,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "1407:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 451,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1749,
																			"src": "1427:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1749_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1749_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 450,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1422:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1422:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1749",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1422:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1407:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 455,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "1464:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 457,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1994,
																			"src": "1484:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1994_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1994_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 456,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1479:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1479:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1994",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1479:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1464:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1407:109:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 464,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "1556:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 462,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1532:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1627_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2537,
															"src": "1532:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1532:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1407:161:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 448,
												"id": 467,
												"nodeType": "Return",
												"src": "1388:180:2"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "1209:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1279:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 445,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 443,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2538,
												"src": "1346:6:2"
											},
											{
												"id": 444,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2550,
												"src": "1354:7:2"
											}
										],
										"src": "1337:25:2"
									},
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1304:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "1297:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 440,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1297:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:20:2"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "1372:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 446,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1372:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1371:6:2"
									},
									"scope": 1627,
									"src": "1270:305:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1993
									],
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "2052:169:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 482,
																	"name": "_uri",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "2123:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 485,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 472,
																			"src": "2162:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 483,
																			"name": "Strings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2514,
																			"src": "2145:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Strings_$2514_$",
																				"typeString": "type(library Strings)"
																			}
																		},
																		"id": 484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2396,
																		"src": "2145:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2145:20:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"hexValue": "2e6a736f6e",
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2183:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
																		"typeString": "literal_string \".json\""
																	},
																	"value": ".json"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
																		"typeString": "literal_string \".json\""
																	}
																],
																"expression": {
																	"id": 480,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2089:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2089:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2089:115:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2069:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 478,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2069:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2069:145:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 477,
												"id": 490,
												"nodeType": "Return",
												"src": "2062:152:2"
											}
										]
									},
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "1581:388:2",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1983:3:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 474,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2019:8:2"
									},
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1995:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "1987:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1987:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1986:12:2"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "2037:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 475,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2037:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2036:15:2"
									},
									"scope": 1627,
									"src": "1974:247:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1687
									],
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "2458:132:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 504,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "2476:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2495:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2487:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 505,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2487:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2487:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2476:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2499:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															},
															"value": "ERC1155: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															}
														],
														"id": 503,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2468:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2468:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "2468:76:2"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 513,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "2561:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 515,
														"indexExpression": {
															"id": 514,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "2571:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2561:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 517,
													"indexExpression": {
														"id": 516,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "2575:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2561:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 502,
												"id": 518,
												"nodeType": "Return",
												"src": "2554:29:2"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "2227:131:2",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2372:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 499,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2431:8:2"
									},
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2390:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2382:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2382:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2407:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2399:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2381:29:2"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2449:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:9:2"
									},
									"scope": 1627,
									"src": "2363:227:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1700
									],
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "2920:335:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 535,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "2938:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2938:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 537,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "2957:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2957:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2938:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2969:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2930:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2930:83:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "2930:83:2"
											},
											{
												"assignments": [
													547
												],
												"declarations": [
													{
														"constant": false,
														"id": 547,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "3041:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "3024:30:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 545,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3024:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 546,
															"nodeType": "ArrayTypeName",
															"src": "3024:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 554,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 551,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "3071:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3071:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3057:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 548,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3061:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 549,
															"nodeType": "ArrayTypeName",
															"src": "3061:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3057:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3024:63:2"
											},
											{
												"body": {
													"id": 579,
													"nodeType": "Block",
													"src": "3144:74:2",
													"statements": [
														{
															"expression": {
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 566,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "3158:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 568,
																	"indexExpression": {
																		"id": 567,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 556,
																		"src": "3172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3158:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 570,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "3187:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 572,
																			"indexExpression": {
																				"id": 571,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 556,
																				"src": "3196:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3187:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 573,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 527,
																				"src": "3200:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 575,
																			"indexExpression": {
																				"id": 574,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 556,
																				"src": "3204:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3200:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 569,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "3177:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3177:30:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3158:49:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 578,
															"nodeType": "ExpressionStatement",
															"src": "3158:49:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 559,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "3118:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 560,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "3122:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3122:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3118:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 580,
												"initializationExpression": {
													"assignments": [
														556
													],
													"declarations": [
														{
															"constant": false,
															"id": 556,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3111:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 580,
															"src": "3103:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 555,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3103:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 558,
													"initialValue": {
														"hexValue": "30",
														"id": 557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3115:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3103:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3139:3:2",
														"subExpression": {
															"id": 563,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "3141:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 565,
													"nodeType": "ExpressionStatement",
													"src": "3139:3:2"
												},
												"nodeType": "ForStatement",
												"src": "3098:120:2"
											},
											{
												"expression": {
													"id": 581,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 547,
													"src": "3235:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 533,
												"id": 582,
												"nodeType": "Return",
												"src": "3228:20:2"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "2596:146:2",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2756:14:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 529,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2872:8:2"
									},
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2788:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "2771:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 522,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2771:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 523,
													"nodeType": "ArrayTypeName",
													"src": "2771:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2815:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "2798:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 525,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2798:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 526,
													"nodeType": "ArrayTypeName",
													"src": "2798:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:49:2"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "2898:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 530,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2898:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 531,
													"nodeType": "ArrayTypeName",
													"src": "2898:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2897:18:2"
									},
									"scope": 1627,
									"src": "2747:508:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1708
									],
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "3407:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 594,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2301,
																"src": "3436:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3436:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 596,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "3450:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 597,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "3460:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 593,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1432,
														"src": "3417:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3417:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "3417:52:2"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "3261:57:2",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3332:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 591,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3398:8:2"
									},
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3358:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "3350:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3350:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3373:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "3368:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 588,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3368:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3349:33:2"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3407:0:2"
									},
									"scope": 1627,
									"src": "3323:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1718
									],
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "3648:61:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 612,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "3665:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 614,
														"indexExpression": {
															"id": 613,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "3684:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3665:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 616,
													"indexExpression": {
														"id": 615,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "3693:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3665:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 611,
												"id": 617,
												"nodeType": "Return",
												"src": "3658:44:2"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "3482:56:2",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3552:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 608,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3624:8:2"
									},
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3577:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "3569:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3569:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3594:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "3586:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3586:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3568:35:2"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "3642:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 609,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3642:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3641:6:2"
									},
									"scope": 1627,
									"src": "3543:166:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1732
									],
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "3945:220:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 635,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "3976:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 636,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2301,
																		"src": "3984:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3984:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3976:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 640,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "4017:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 641,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2301,
																			"src": "4023:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4023:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 639,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "4000:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4000:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3976:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4050:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 634,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3955:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3955:148:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "3955:148:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 649,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "4131:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 650,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "4137:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 651,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "4141:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 652,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "4145:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 653,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "4153:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 648,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "4113:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4113:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "4113:45:2"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "3715:56:2",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3785:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 632,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3936:8:2"
									},
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3819:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3811:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3811:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3841:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3833:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3833:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3861:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3853:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3853:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3881:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3873:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3873:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3910:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3897:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3897:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:119:2"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3945:0:2"
									},
									"scope": 1627,
									"src": "3776:389:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1748
									],
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "4431:236:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 675,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 660,
																	"src": "4462:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 676,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2301,
																		"src": "4470:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4470:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4462:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 680,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 660,
																		"src": "4503:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 681,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2301,
																			"src": "4509:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4509:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 679,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "4486:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4486:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4462:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4536:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 674,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4441:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4441:157:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "4441:157:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 689,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "4631:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 690,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "4637:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "4641:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 692,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "4646:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 693,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "4655:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 688,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "4608:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4608:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "4608:52:2"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "4171:61:2",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4246:21:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 672,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4422:8:2"
									},
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4285:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "4277:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4277:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4307:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "4299:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4299:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4336:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "4319:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 663,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4319:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 664,
													"nodeType": "ArrayTypeName",
													"src": "4319:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4366:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "4349:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 666,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4349:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 667,
													"nodeType": "ArrayTypeName",
													"src": "4349:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4396:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "4383:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 669,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4383:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4267:139:2"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4431:0:2"
									},
									"scope": 1627,
									"src": "4237:430:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "5281:784:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 712,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 702,
																"src": "5299:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5313:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5305:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 713,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5305:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5305:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5299:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5317:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 711,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5291:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5291:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "5291:66:2"
											},
											{
												"assignments": [
													722
												],
												"declarations": [
													{
														"constant": false,
														"id": 722,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5376:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 813,
														"src": "5368:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 721,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5368:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 725,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 723,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2301,
														"src": "5387:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5387:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5368:31:2"
											},
											{
												"assignments": [
													730
												],
												"declarations": [
													{
														"constant": false,
														"id": 730,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "5426:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 813,
														"src": "5409:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 728,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5409:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 729,
															"nodeType": "ArrayTypeName",
															"src": "5409:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 734,
												"initialValue": {
													"arguments": [
														{
															"id": 732,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "5450:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 731,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "5432:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5432:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5409:44:2"
											},
											{
												"assignments": [
													739
												],
												"declarations": [
													{
														"constant": false,
														"id": 739,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "5480:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 813,
														"src": "5463:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 737,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5463:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 738,
															"nodeType": "ArrayTypeName",
															"src": "5463:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 743,
												"initialValue": {
													"arguments": [
														{
															"id": 741,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "5508:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 740,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "5490:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5490:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5463:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 745,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "5547:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 746,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "5557:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 747,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "5563:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 748,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "5567:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 749,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "5572:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 750,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "5581:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 744,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "5526:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5526:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "5526:60:2"
											},
											{
												"assignments": [
													754
												],
												"declarations": [
													{
														"constant": false,
														"id": 754,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5605:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 813,
														"src": "5597:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 753,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5597:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 760,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 755,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "5619:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 757,
														"indexExpression": {
															"id": 756,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "5629:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5619:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 759,
													"indexExpression": {
														"id": 758,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "5633:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5619:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5597:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 762,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "5656:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 763,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 706,
																"src": "5671:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5656:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5679:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 761,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5648:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5648:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "5648:76:2"
											},
											{
												"id": 778,
												"nodeType": "UncheckedBlock",
												"src": "5734:77:2",
												"statements": [
													{
														"expression": {
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 768,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "5758:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 771,
																	"indexExpression": {
																		"id": 769,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 704,
																		"src": "5768:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5758:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 772,
																"indexExpression": {
																	"id": 770,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 700,
																	"src": "5772:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5758:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 773,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "5780:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 774,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "5794:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5780:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5758:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 777,
														"nodeType": "ExpressionStatement",
														"src": "5758:42:2"
													}
												]
											},
											{
												"expression": {
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 779,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "5820:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 782,
															"indexExpression": {
																"id": 780,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "5830:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5820:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 783,
														"indexExpression": {
															"id": 781,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "5834:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5820:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 784,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "5841:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5820:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "5820:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 788,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "5878:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 789,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "5888:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 790,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "5894:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 791,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "5898:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 792,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "5902:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 787,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1646,
														"src": "5863:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5863:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 794,
												"nodeType": "EmitStatement",
												"src": "5858:51:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 796,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "5940:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 797,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "5950:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 798,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "5956:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 799,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "5960:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 800,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "5965:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 801,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "5974:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 795,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "5920:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5920:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "5920:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 805,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "6021:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "6031:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "6037:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 808,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "6041:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 809,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "6045:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 810,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "6053:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 804,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "5990:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5990:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "5990:68:2"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "4674:439:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "5127:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5162:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "5154:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5154:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5184:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "5176:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5176:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5204:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "5196:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5224:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "5216:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "5240:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 707,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5144:119:2"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5281:0:2"
									},
									"scope": 1627,
									"src": "5118:947:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "6599:927:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 831,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "6617:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6617:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 833,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "6631:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6631:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6617:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6647:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 830,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6609:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6609:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "6609:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 840,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "6708:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6722:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6714:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 841,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6714:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6714:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6708:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6726:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 839,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "6700:66:2"
											},
											{
												"assignments": [
													850
												],
												"declarations": [
													{
														"constant": false,
														"id": 850,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6785:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 948,
														"src": "6777:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 849,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6777:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 853,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 851,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2301,
														"src": "6796:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6796:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6777:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 855,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "6840:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 856,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "6850:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "6856:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "6860:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 859,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "6865:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 860,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "6874:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 854,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "6819:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6819:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "6819:60:2"
											},
											{
												"body": {
													"id": 920,
													"nodeType": "Block",
													"src": "6931:370:2",
													"statements": [
														{
															"assignments": [
																875
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 875,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6953:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 920,
																	"src": "6945:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 874,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6945:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 879,
															"initialValue": {
																"baseExpression": {
																	"id": 876,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "6958:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 878,
																"indexExpression": {
																	"id": 877,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 864,
																	"src": "6962:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6958:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6945:19:2"
														},
														{
															"assignments": [
																881
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 881,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "6986:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 920,
																	"src": "6978:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 880,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6978:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 885,
															"initialValue": {
																"baseExpression": {
																	"id": 882,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "6995:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 884,
																"indexExpression": {
																	"id": 883,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 864,
																	"src": "7003:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6995:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6978:27:2"
														},
														{
															"assignments": [
																887
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 887,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7028:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 920,
																	"src": "7020:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 886,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7020:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 893,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 888,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "7042:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 890,
																	"indexExpression": {
																		"id": 889,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 875,
																		"src": "7052:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7042:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 892,
																"indexExpression": {
																	"id": 891,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 817,
																	"src": "7056:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7042:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7020:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 895,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 887,
																			"src": "7083:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 896,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 881,
																			"src": "7098:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7083:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7106:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 894,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7075:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7075:76:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 900,
															"nodeType": "ExpressionStatement",
															"src": "7075:76:2"
														},
														{
															"id": 911,
															"nodeType": "UncheckedBlock",
															"src": "7165:85:2",
															"statements": [
																{
																	"expression": {
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 901,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 419,
																					"src": "7193:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 904,
																				"indexExpression": {
																					"id": 902,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 875,
																					"src": "7203:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7193:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 905,
																			"indexExpression": {
																				"id": 903,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 817,
																				"src": "7207:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7193:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 906,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 887,
																				"src": "7215:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 907,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 881,
																				"src": "7229:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7215:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7193:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 910,
																	"nodeType": "ExpressionStatement",
																	"src": "7193:42:2"
																}
															]
														},
														{
															"expression": {
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 912,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 419,
																			"src": "7263:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 915,
																		"indexExpression": {
																			"id": 913,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 875,
																			"src": "7273:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7263:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 916,
																	"indexExpression": {
																		"id": 914,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 819,
																		"src": "7277:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7263:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 917,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "7284:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7263:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 919,
															"nodeType": "ExpressionStatement",
															"src": "7263:27:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 867,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "6910:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 868,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "6914:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6914:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6910:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 921,
												"initializationExpression": {
													"assignments": [
														864
													],
													"declarations": [
														{
															"constant": false,
															"id": 864,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6903:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 921,
															"src": "6895:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 863,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 866,
													"initialValue": {
														"hexValue": "30",
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6907:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6895:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6926:3:2",
														"subExpression": {
															"id": 871,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "6928:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 873,
													"nodeType": "ExpressionStatement",
													"src": "6926:3:2"
												},
												"nodeType": "ForStatement",
												"src": "6890:411:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 923,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "7330:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "7340:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "7346:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 926,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "7350:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 927,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "7355:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 922,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1661,
														"src": "7316:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7316:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "EmitStatement",
												"src": "7311:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 931,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "7394:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 932,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "7404:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 933,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "7410:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 934,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "7414:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 935,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "7419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 936,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "7428:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 930,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "7374:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7374:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "7374:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 940,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "7480:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "7490:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "7496:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 943,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "7500:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 944,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "7505:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 945,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "7514:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 939,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "7444:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7444:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "7444:75:2"
											}
										]
									},
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "6071:335:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6420:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6460:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "6452:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6452:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6482:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "6474:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6474:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6511:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "6494:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 820,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6494:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 821,
													"nodeType": "ArrayTypeName",
													"src": "6494:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6541:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "6524:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 823,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6524:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 824,
													"nodeType": "ArrayTypeName",
													"src": "6524:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6571:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "6558:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 826,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6558:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6442:139:2"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6599:0:2"
									},
									"scope": 1627,
									"src": "6411:1115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "8405:30:2",
										"statements": [
											{
												"expression": {
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 955,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "8415:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 956,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "8422:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8415:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "8415:13:2"
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "7532:812:2",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "8358:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "8380:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "8366:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 951,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8366:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8365:22:2"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8405:0:2"
									},
									"scope": 1627,
									"src": "8349:86:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "8937:580:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 973,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "8955:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8969:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8961:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 974,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8961:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8961:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8955:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8973:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 972,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8947:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8947:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "8947:62:2"
											},
											{
												"assignments": [
													983
												],
												"declarations": [
													{
														"constant": false,
														"id": 983,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "9028:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1060,
														"src": "9020:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 982,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9020:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 986,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 984,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2301,
														"src": "9039:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9039:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9020:31:2"
											},
											{
												"assignments": [
													991
												],
												"declarations": [
													{
														"constant": false,
														"id": 991,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "9078:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1060,
														"src": "9061:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 989,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9061:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 990,
															"nodeType": "ArrayTypeName",
															"src": "9061:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 995,
												"initialValue": {
													"arguments": [
														{
															"id": 993,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "9102:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 992,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "9084:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9084:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9061:44:2"
											},
											{
												"assignments": [
													1000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "9132:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1060,
														"src": "9115:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 998,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9115:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 999,
															"nodeType": "ArrayTypeName",
															"src": "9115:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1004,
												"initialValue": {
													"arguments": [
														{
															"id": 1002,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "9160:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1001,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "9142:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9142:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9115:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1006,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "9199:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9217:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9209:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1007,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9209:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9209:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1011,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "9221:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1012,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "9225:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1013,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "9230:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1014,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "9239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1005,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "9178:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9178:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "9178:66:2"
											},
											{
												"expression": {
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1017,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "9255:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 1020,
															"indexExpression": {
																"id": 1018,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "9265:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9255:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1021,
														"indexExpression": {
															"id": 1019,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "9269:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9255:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1022,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "9276:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9255:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "9255:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1026,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "9312:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9330:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9322:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1027,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9322:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9322:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1031,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "9334:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "9338:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1033,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "9342:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1025,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1646,
														"src": "9297:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9297:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1035,
												"nodeType": "EmitStatement",
												"src": "9292:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1037,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "9380:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9398:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9390:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1038,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9390:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9390:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1042,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "9402:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1043,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "9406:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1044,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "9411:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1045,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "9420:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1036,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "9360:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9360:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "9360:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1049,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "9467:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9485:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9477:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1050,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9477:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9477:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1054,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "9489:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1055,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "9493:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1056,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "9497:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1057,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "9505:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1048,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "9436:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9436:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "9436:74:2"
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "8441:362:2",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 1061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8817:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8840:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "8832:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8832:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8860:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "8852:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8852:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8880:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "8872:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8872:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8909:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "8896:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 968,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8896:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8822:97:2"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8937:0:2"
									},
									"scope": 1627,
									"src": "8808:709:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "10016:637:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1076,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "10034:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10048:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10040:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1077,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10040:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10040:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10034:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10052:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 1075,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10026:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10026:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "10026:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1086,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "10106:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10106:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1088,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1070,
																	"src": "10120:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10120:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10106:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10136:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1085,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10098:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "10098:81:2"
											},
											{
												"assignments": [
													1095
												],
												"declarations": [
													{
														"constant": false,
														"id": 1095,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10198:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1171,
														"src": "10190:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1094,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10190:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1098,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1096,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2301,
														"src": "10209:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10209:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10190:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1100,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "10253:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10271:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10263:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1101,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10263:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10263:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "10275:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1106,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "10279:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1107,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "10284:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1108,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "10293:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1099,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "10232:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10232:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "10232:66:2"
											},
											{
												"body": {
													"id": 1134,
													"nodeType": "Block",
													"src": "10350:60:2",
													"statements": [
														{
															"expression": {
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1122,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 419,
																			"src": "10364:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1127,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1123,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1067,
																				"src": "10374:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1125,
																			"indexExpression": {
																				"id": 1124,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1112,
																				"src": "10378:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10374:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10364:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1128,
																	"indexExpression": {
																		"id": 1126,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1064,
																		"src": "10382:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10364:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1129,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1070,
																		"src": "10389:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1131,
																	"indexExpression": {
																		"id": 1130,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1112,
																		"src": "10397:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10389:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10364:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1133,
															"nodeType": "ExpressionStatement",
															"src": "10364:35:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1115,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "10329:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1116,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "10333:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10333:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10329:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1135,
												"initializationExpression": {
													"assignments": [
														1112
													],
													"declarations": [
														{
															"constant": false,
															"id": 1112,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10322:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1135,
															"src": "10314:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1111,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10314:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1114,
													"initialValue": {
														"hexValue": "30",
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10326:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10314:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10345:3:2",
														"subExpression": {
															"id": 1119,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "10345:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1121,
													"nodeType": "ExpressionStatement",
													"src": "10345:3:2"
												},
												"nodeType": "ForStatement",
												"src": "10309:101:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1137,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "10439:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10457:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10449:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1138,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10449:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10449:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1142,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "10461:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1143,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "10465:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1144,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "10470:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1136,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1661,
														"src": "10425:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10425:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1146,
												"nodeType": "EmitStatement",
												"src": "10420:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1148,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "10509:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10527:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10519:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1149,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10519:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10519:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1153,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "10531:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1154,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "10535:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1155,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "10540:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1156,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "10549:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1147,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "10489:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10489:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1158,
												"nodeType": "ExpressionStatement",
												"src": "10489:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1160,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "10601:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10619:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10611:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1161,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10611:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10611:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1165,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "10623:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1166,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "10627:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1167,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "10632:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1168,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "10641:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1159,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "10565:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10565:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "10565:81:2"
											}
										]
									},
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "9523:334:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "9871:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9899:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "9891:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9928:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "9911:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1065,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1066,
													"nodeType": "ArrayTypeName",
													"src": "9911:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "9958:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "9941:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1068,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9941:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1069,
													"nodeType": "ArrayTypeName",
													"src": "9941:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9988:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "9975:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1071,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9975:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9881:117:2"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10016:0:2"
									},
									"scope": 1627,
									"src": "9862:791:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1276,
										"nodeType": "Block",
										"src": "10997:682:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1183,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "11015:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11031:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11023:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1184,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11023:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11023:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11015:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11035:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11007:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11007:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "11007:66:2"
											},
											{
												"assignments": [
													1193
												],
												"declarations": [
													{
														"constant": false,
														"id": 1193,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11092:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1276,
														"src": "11084:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1192,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11084:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1196,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1194,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2301,
														"src": "11103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11084:31:2"
											},
											{
												"assignments": [
													1201
												],
												"declarations": [
													{
														"constant": false,
														"id": 1201,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "11142:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1276,
														"src": "11125:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1199,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11125:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1200,
															"nodeType": "ArrayTypeName",
															"src": "11125:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1205,
												"initialValue": {
													"arguments": [
														{
															"id": 1203,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "11166:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1202,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "11148:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11148:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11125:44:2"
											},
											{
												"assignments": [
													1210
												],
												"declarations": [
													{
														"constant": false,
														"id": 1210,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "11196:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1276,
														"src": "11179:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1208,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11179:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1209,
															"nodeType": "ArrayTypeName",
															"src": "11179:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1214,
												"initialValue": {
													"arguments": [
														{
															"id": 1212,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "11224:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1211,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "11206:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11206:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11179:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1216,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "11263:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1217,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "11273:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11287:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11279:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1218,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11279:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11279:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1222,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "11291:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1223,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "11296:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11305:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1215,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "11242:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11242:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "11242:66:2"
											},
											{
												"assignments": [
													1228
												],
												"declarations": [
													{
														"constant": false,
														"id": 1228,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "11327:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1276,
														"src": "11319:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1227,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11319:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1234,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1229,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "11341:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 1231,
														"indexExpression": {
															"id": 1230,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "11351:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11341:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1233,
													"indexExpression": {
														"id": 1232,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "11355:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11341:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11319:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1236,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1228,
																"src": "11378:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1237,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "11393:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11378:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11401:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 1235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11370:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11370:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "11370:70:2"
											},
											{
												"id": 1252,
												"nodeType": "UncheckedBlock",
												"src": "11450:77:2",
												"statements": [
													{
														"expression": {
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1242,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "11474:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1245,
																	"indexExpression": {
																		"id": 1243,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1177,
																		"src": "11484:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11474:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1246,
																"indexExpression": {
																	"id": 1244,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "11488:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11474:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1247,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1228,
																	"src": "11496:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1248,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "11510:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11496:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11474:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1251,
														"nodeType": "ExpressionStatement",
														"src": "11474:42:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1254,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "11557:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1255,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "11567:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11581:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11573:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1256,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11573:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11573:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1260,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "11585:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1261,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "11589:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1253,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1646,
														"src": "11542:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11542:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1263,
												"nodeType": "EmitStatement",
												"src": "11537:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1265,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "11627:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1266,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "11637:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11651:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11643:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1267,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11643:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11643:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1271,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "11655:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1272,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "11660:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11669:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1264,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "11607:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11607:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "11607:65:2"
											}
										]
									},
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "10659:229:2",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 1277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10902:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10925:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "10917:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10917:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10947:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "10939:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10939:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10967:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "10959:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10959:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10907:72:2"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10997:0:2"
									},
									"scope": 1627,
									"src": "10893:786:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1399,
										"nodeType": "Block",
										"src": "12002:814:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1290,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "12020:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12036:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12028:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12028:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12028:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12020:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12040:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12012:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12012:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1298,
												"nodeType": "ExpressionStatement",
												"src": "12012:66:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1300,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "12096:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12096:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1302,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "12110:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12110:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12096:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12126:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12088:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12088:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "12088:81:2"
											},
											{
												"assignments": [
													1309
												],
												"declarations": [
													{
														"constant": false,
														"id": 1309,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "12188:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1399,
														"src": "12180:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1308,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12180:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1310,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2301,
														"src": "12199:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12199:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12180:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1314,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "12243:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1315,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "12253:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12267:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12259:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1316,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12259:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12259:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1320,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "12271:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1321,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "12276:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12285:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1313,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "12222:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12222:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "12222:66:2"
											},
											{
												"body": {
													"id": 1374,
													"nodeType": "Block",
													"src": "12340:323:2",
													"statements": [
														{
															"assignments": [
																1337
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1337,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "12362:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1374,
																	"src": "12354:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1336,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12354:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1341,
															"initialValue": {
																"baseExpression": {
																	"id": 1338,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "12367:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1340,
																"indexExpression": {
																	"id": 1339,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1326,
																	"src": "12371:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12367:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12354:19:2"
														},
														{
															"assignments": [
																1343
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1343,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "12395:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1374,
																	"src": "12387:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1342,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12387:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1347,
															"initialValue": {
																"baseExpression": {
																	"id": 1344,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "12404:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1346,
																"indexExpression": {
																	"id": 1345,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1326,
																	"src": "12412:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12404:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12387:27:2"
														},
														{
															"assignments": [
																1349
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1349,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "12437:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1374,
																	"src": "12429:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1348,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12429:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1355,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1350,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "12451:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1352,
																	"indexExpression": {
																		"id": 1351,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1337,
																		"src": "12461:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12451:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1354,
																"indexExpression": {
																	"id": 1353,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "12465:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12451:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12429:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1357,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1349,
																			"src": "12492:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1358,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1343,
																			"src": "12507:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12492:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12515:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 1356,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12484:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12484:70:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1362,
															"nodeType": "ExpressionStatement",
															"src": "12484:70:2"
														},
														{
															"id": 1373,
															"nodeType": "UncheckedBlock",
															"src": "12568:85:2",
															"statements": [
																{
																	"expression": {
																		"id": 1371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1363,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 419,
																					"src": "12596:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1366,
																				"indexExpression": {
																					"id": 1364,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1337,
																					"src": "12606:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12596:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1367,
																			"indexExpression": {
																				"id": 1365,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1280,
																				"src": "12610:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "12596:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1368,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1349,
																				"src": "12618:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1369,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1343,
																				"src": "12632:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12618:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12596:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1372,
																	"nodeType": "ExpressionStatement",
																	"src": "12596:42:2"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1329,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "12319:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1330,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "12323:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12323:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12319:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1375,
												"initializationExpression": {
													"assignments": [
														1326
													],
													"declarations": [
														{
															"constant": false,
															"id": 1326,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12312:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1375,
															"src": "12304:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1325,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12304:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1328,
													"initialValue": {
														"hexValue": "30",
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12316:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12304:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12335:3:2",
														"subExpression": {
															"id": 1333,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "12335:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1335,
													"nodeType": "ExpressionStatement",
													"src": "12335:3:2"
												},
												"nodeType": "ForStatement",
												"src": "12299:364:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1377,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "12692:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1378,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "12702:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12716:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12708:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1379,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12708:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12708:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1383,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "12720:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1384,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "12725:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1376,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1661,
														"src": "12678:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12678:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1386,
												"nodeType": "EmitStatement",
												"src": "12673:60:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1388,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "12764:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1389,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "12774:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12788:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12780:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1390,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12780:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12780:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1394,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "12792:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1395,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "12797:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12806:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1387,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "12744:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12744:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "12744:65:2"
											}
										]
									},
									"documentation": {
										"id": 1278,
										"nodeType": "StructuredDocumentation",
										"src": "11685:183:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "11882:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11910:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "11902:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11902:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11941:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "11924:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1281,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11924:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1282,
													"nodeType": "ArrayTypeName",
													"src": "11924:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "11971:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "11954:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1284,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11954:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1285,
													"nodeType": "ArrayTypeName",
													"src": "11954:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11892:92:2"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12002:0:2"
									},
									"scope": 1627,
									"src": "11873:943:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1431,
										"nodeType": "Block",
										"src": "13074:200:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1411,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "13092:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1412,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1405,
																"src": "13101:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13092:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13111:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13084:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13084:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1416,
												"nodeType": "ExpressionStatement",
												"src": "13084:71:2"
											},
											{
												"expression": {
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1417,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "13165:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1420,
															"indexExpression": {
																"id": 1418,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "13184:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13165:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1421,
														"indexExpression": {
															"id": 1419,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "13191:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13165:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1422,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "13203:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13165:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1424,
												"nodeType": "ExpressionStatement",
												"src": "13165:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1426,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "13241:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1427,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "13248:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1428,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "13258:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1425,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1670,
														"src": "13226:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13226:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1430,
												"nodeType": "EmitStatement",
												"src": "13221:46:2"
											}
										]
									},
									"documentation": {
										"id": 1401,
										"nodeType": "StructuredDocumentation",
										"src": "12822:124:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12960:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12996:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "12988:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13019:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "13011:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13011:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13042:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "13037:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13037:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12978:78:2"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13074:0:2"
									},
									"scope": 1627,
									"src": "12951:323:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1450,
										"nodeType": "Block",
										"src": "14420:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1433,
										"nodeType": "StructuredDocumentation",
										"src": "13280:923:2",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "14217:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14255:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "14247:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14247:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14281:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "14273:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14273:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14303:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "14295:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14295:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14332:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "14315:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1440,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14315:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1441,
													"nodeType": "ArrayTypeName",
													"src": "14315:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14362:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "14345:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1443,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14345:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1444,
													"nodeType": "ArrayTypeName",
													"src": "14345:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14392:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "14379:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1446,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14379:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14237:165:2"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14420:0:2"
									},
									"scope": 1627,
									"src": "14208:214:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "15566:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1452,
										"nodeType": "StructuredDocumentation",
										"src": "14428:922:2",
										"text": " @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "15364:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15401:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "15393:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15427:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "15419:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15419:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15449:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "15441:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15441:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15478:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "15461:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1459,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15461:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1460,
													"nodeType": "ArrayTypeName",
													"src": "15461:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "15508:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "15491:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1462,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15491:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1463,
													"nodeType": "ArrayTypeName",
													"src": "15491:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15538:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "15525:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15525:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15383:165:2"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15566:0:2"
									},
									"scope": 1627,
									"src": "15355:213:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "15767:532:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1485,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "15781:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2012,
														"src": "15781:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15781:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1531,
												"nodeType": "IfStatement",
												"src": "15777:516:2",
												"trueBody": {
													"id": 1530,
													"nodeType": "Block",
													"src": "15798:495:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1512,
																		"nodeType": "Block",
																		"src": "15915:184:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1505,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1501,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1499,
																						"src": "15937:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1502,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1790,
																								"src": "15949:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1790_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1503,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1771,
																							"src": "15949:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1504,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15949:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15937:55:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1511,
																				"nodeType": "IfStatement",
																				"src": "15933:152:2",
																				"trueBody": {
																					"id": 1510,
																					"nodeType": "Block",
																					"src": "15994:91:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1507,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16023:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1506,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "16016:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1508,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16016:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1509,
																							"nodeType": "ExpressionStatement",
																							"src": "16016:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1513,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1500,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1499,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15905:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1513,
																				"src": "15898:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1498,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15898:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15897:17:2"
																	},
																	"src": "15889:210:2"
																},
																{
																	"block": {
																		"id": 1521,
																		"nodeType": "Block",
																		"src": "16134:47:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1518,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1515,
																							"src": "16159:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1517,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16152:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1519,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16152:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1520,
																				"nodeType": "ExpressionStatement",
																				"src": "16152:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1522,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1516,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1515,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16126:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1522,
																				"src": "16112:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1514,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "16112:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16111:22:2"
																	},
																	"src": "16100:81:2"
																},
																{
																	"block": {
																		"id": 1527,
																		"nodeType": "Block",
																		"src": "16188:95:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1524,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16213:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1523,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16206:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1525,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16206:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1526,
																				"nodeType": "ExpressionStatement",
																				"src": "16206:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1528,
																	"nodeType": "TryCatchClause",
																	"src": "16182:101:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1492,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1472,
																		"src": "15855:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1493,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1474,
																		"src": "15865:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1494,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1478,
																		"src": "15871:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1495,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1480,
																		"src": "15875:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1496,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1482,
																		"src": "15883:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1489,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1476,
																				"src": "15833:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1488,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "15816:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1790_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15816:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1790",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1771,
																	"src": "15816:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15816:72:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1529,
															"nodeType": "TryStatement",
															"src": "15812:471:2"
														}
													]
												}
											}
										]
									},
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "15583:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15631:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "15623:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15623:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15657:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "15649:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15649:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15679:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "15671:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15671:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "15699:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "15691:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15691:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15719:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "15711:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15711:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15748:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "15735:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15735:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15613:145:2"
									},
									"returnParameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15767:0:2"
									},
									"scope": 1627,
									"src": "15574:725:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "16523:574:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1550,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "16537:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2012,
														"src": "16537:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16537:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1596,
												"nodeType": "IfStatement",
												"src": "16533:558:2",
												"trueBody": {
													"id": 1595,
													"nodeType": "Block",
													"src": "16554:537:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1577,
																		"nodeType": "Block",
																		"src": "16708:189:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1570,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1566,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1564,
																						"src": "16730:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1567,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1790,
																								"src": "16742:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1790_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1568,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1789,
																							"src": "16742:39:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1569,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "16742:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16730:60:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1576,
																				"nodeType": "IfStatement",
																				"src": "16726:157:2",
																				"trueBody": {
																					"id": 1575,
																					"nodeType": "Block",
																					"src": "16792:91:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1572,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16821:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1571,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "16814:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1573,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16814:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1574,
																							"nodeType": "ExpressionStatement",
																							"src": "16814:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1578,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1565,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1564,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "16685:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1578,
																				"src": "16678:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1563,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16678:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16660:47:2"
																	},
																	"src": "16652:245:2"
																},
																{
																	"block": {
																		"id": 1586,
																		"nodeType": "Block",
																		"src": "16932:47:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1583,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1580,
																							"src": "16957:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1582,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16950:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1584,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16950:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1585,
																				"nodeType": "ExpressionStatement",
																				"src": "16950:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1587,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1581,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1580,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16924:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1587,
																				"src": "16910:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1579,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "16910:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16909:22:2"
																	},
																	"src": "16898:81:2"
																},
																{
																	"block": {
																		"id": 1592,
																		"nodeType": "Block",
																		"src": "16986:95:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1589,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17011:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1588,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17004:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1590,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17004:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1591,
																				"nodeType": "ExpressionStatement",
																				"src": "17004:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1593,
																	"nodeType": "TryCatchClause",
																	"src": "16980:101:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1557,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1535,
																		"src": "16616:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1558,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1537,
																		"src": "16626:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1559,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1542,
																		"src": "16632:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1560,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1545,
																		"src": "16637:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1561,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1547,
																		"src": "16646:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1554,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1539,
																				"src": "16589:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1553,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "16572:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1790_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16572:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1790",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1789,
																	"src": "16572:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16572:79:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1594,
															"nodeType": "TryStatement",
															"src": "16568:513:2"
														}
													]
												}
											}
										]
									},
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "16314:35:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16367:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "16359:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16359:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16393:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "16385:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16385:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "16407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "16444:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "16427:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1540,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16427:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1541,
													"nodeType": "ArrayTypeName",
													"src": "16427:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "16474:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "16457:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1543,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16457:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1544,
													"nodeType": "ArrayTypeName",
													"src": "16457:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16504:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "16491:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1546,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16491:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16349:165:2"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16523:0:2"
									},
									"scope": 1627,
									"src": "16305:792:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "17187:109:2",
										"statements": [
											{
												"assignments": [
													1610
												],
												"declarations": [
													{
														"constant": false,
														"id": 1610,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "17214:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1625,
														"src": "17197:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1608,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17197:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1609,
															"nodeType": "ArrayTypeName",
															"src": "17197:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1616,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17236:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17222:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1611,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17226:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1612,
															"nodeType": "ArrayTypeName",
															"src": "17226:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17222:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17197:41:2"
											},
											{
												"expression": {
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1617,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1610,
															"src": "17248:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1619,
														"indexExpression": {
															"hexValue": "30",
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17254:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17248:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1620,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "17259:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17248:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1622,
												"nodeType": "ExpressionStatement",
												"src": "17248:18:2"
											},
											{
												"expression": {
													"id": 1623,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1610,
													"src": "17284:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1605,
												"id": 1624,
												"nodeType": "Return",
												"src": "17277:12:2"
											}
										]
									},
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "17112:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "17138:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "17130:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17130:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17129:17:2"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "17169:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1602,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17169:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1603,
													"nodeType": "ArrayTypeName",
													"src": "17169:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17168:18:2"
									},
									"scope": 1627,
									"src": "17103:193:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1628,
							"src": "604:16694:2",
							"usedErrors": []
						}
					],
					"src": "109:17190:2"
				},
				"id": 2
			},
			"contracts/OZ_contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1749
						],
						"IERC165": [
							2550
						]
					},
					"id": 1750,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1629,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:3"
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1630,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1750,
							"sourceUnit": 2551,
							"src": "120:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1632,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2550,
										"src": "357:7:3"
									},
									"id": 1633,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1631,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:3",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1749,
							"linearizedBaseContracts": [
								1749,
								2550
							],
							"name": "IERC1155",
							"nameLocation": "345:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1634,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:3",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1646,
									"name": "TransferSingle",
									"nameLocation": "503:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "518:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "544:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "566:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1642,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "586:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "598:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:3"
									},
									"src": "497:116:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:3",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 1661,
									"name": "TransferBatch",
									"nameLocation": "774:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "797:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "831:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "861:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1656,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "889:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1654,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1655,
													"nodeType": "ArrayTypeName",
													"src": "889:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "912:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1657,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1658,
													"nodeType": "ArrayTypeName",
													"src": "912:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:3"
									},
									"src": "768:167:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1662,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:3",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 1670,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "1114:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "1139:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "1165:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1667,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:3"
									},
									"src": "1093:87:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:3",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 1677,
									"name": "URI",
									"nameLocation": "1540:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "1544:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1672,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "1558:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:3"
									},
									"src": "1534:44:3"
								},
								{
									"documentation": {
										"id": 1678,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:3",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "1781:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "1798:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:3"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "1833:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:3"
									},
									"scope": 1749,
									"src": "1762:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1688,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1700,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "2065:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1689,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1690,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "2094:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1692,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1693,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:3"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "2165:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1696,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1697,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:3"
									},
									"scope": 1749,
									"src": "2041:142:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1701,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:3",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1708,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "2469:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "2487:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:3"
									},
									"returnParameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:3"
									},
									"scope": 1749,
									"src": "2442:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1709,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:3",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "2683:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "2700:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:3"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "2741:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:3"
									},
									"scope": 1749,
									"src": "2657:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1719,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:3",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1732,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "3352:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "3374:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "3394:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "3414:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "3438:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1728,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:3"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:3"
									},
									"scope": 1749,
									"src": "3317:156:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1733,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "3914:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "3936:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "3956:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1738,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1739,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "3988:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1741,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1742,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "4024:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1744,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:3"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:3"
									},
									"scope": 1749,
									"src": "3874:185:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1750,
							"src": "335:3726:3",
							"usedErrors": []
						}
					],
					"src": "95:3967:3"
				},
				"id": 3
			},
			"contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1790
						],
						"IERC165": [
							2550
						]
					},
					"id": 1791,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1751,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:4"
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1752,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1791,
							"sourceUnit": 2551,
							"src": "143:47:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1754,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2550,
										"src": "262:7:4"
									},
									"id": 1755,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1753,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:4",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1790,
							"linearizedBaseContracts": [
								1790,
								2550
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1756,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:4",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "1143:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "1169:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "1191:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "1211:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "1234:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1765,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:4"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "1278:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1768,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:4"
									},
									"scope": 1790,
									"src": "1107:179:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1772,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:4",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1789,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "2332:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "2358:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "2380:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1777,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1778,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "2412:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1780,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1781,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "2447:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1783,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:4"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "2491:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1786,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:4"
									},
									"scope": 1790,
									"src": "2291:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1791,
							"src": "232:2269:4",
							"usedErrors": []
						}
					],
					"src": "118:2384:4"
				},
				"id": 4
			},
			"contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Locking.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/token/ERC1155/extensions/ERC1155Locking.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"Address": [
							2289
						],
						"Context": [
							2311
						],
						"ERC1155": [
							1627
						],
						"ERC1155Locking": [
							1979
						],
						"ERC165": [
							2538
						],
						"IAccessControl": [
							392
						],
						"IERC1155": [
							1749
						],
						"IERC1155MetadataURI": [
							1994
						],
						"IERC1155Receiver": [
							1790
						],
						"IERC165": [
							2550
						],
						"Strings": [
							2514
						]
					},
					"id": 1980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1792,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:5"
						},
						{
							"absolutePath": "contracts/OZ_contracts/token/ERC1155/ERC1155.sol",
							"file": "../ERC1155.sol",
							"id": 1793,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1980,
							"sourceUnit": 1628,
							"src": "138:24:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OZ_contracts/access/AccessControl.sol",
							"file": "../../../access/AccessControl.sol",
							"id": 1794,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1980,
							"sourceUnit": 320,
							"src": "163:43:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1796,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1627,
										"src": "421:7:5"
									},
									"id": 1797,
									"nodeType": "InheritanceSpecifier",
									"src": "421:7:5"
								},
								{
									"baseName": {
										"id": 1798,
										"name": "AccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 319,
										"src": "430:13:5"
									},
									"id": 1799,
									"nodeType": "InheritanceSpecifier",
									"src": "430:13:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1795,
								"nodeType": "StructuredDocumentation",
								"src": "207:177:5",
								"text": " @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use.\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1979,
							"linearizedBaseContracts": [
								1979,
								319,
								1627,
								1994,
								1749,
								2538,
								2550,
								392,
								2311
							],
							"name": "ERC1155Locking",
							"nameLocation": "403:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1803,
									"mutability": "mutable",
									"name": "_locks",
									"nameLocation": "484:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1979,
									"src": "451:39:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1802,
										"keyType": {
											"id": 1800,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "459:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "451:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1801,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "470:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1807,
									"mutability": "mutable",
									"name": "_permanentLocks",
									"nameLocation": "530:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1979,
									"src": "497:48:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1806,
										"keyType": {
											"id": 1804,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "505:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "497:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1805,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "516:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1812,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "577:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1979,
									"src": "552:61:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1808,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "552:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 1810,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "600:12:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 1809,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "590:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1811,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "590:23:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "673:37:5",
										"statements": [
											{
												"expression": {
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1817,
															"name": "_locks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "681:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1819,
														"indexExpression": {
															"id": 1818,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1814,
															"src": "688:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "681:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1820,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "699:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "681:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1822,
												"nodeType": "ExpressionStatement",
												"src": "681:22:5"
											}
										]
									},
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_lock",
									"nameLocation": "629:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "643:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "635:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:17:5"
									},
									"returnParameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "673:0:5"
									},
									"scope": 1979,
									"src": "620:90:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1835,
										"nodeType": "Block",
										"src": "771:38:5",
										"statements": [
											{
												"expression": {
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1829,
															"name": "_locks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "779:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1831,
														"indexExpression": {
															"id": 1830,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1826,
															"src": "786:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "779:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1832,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "797:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "779:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1834,
												"nodeType": "ExpressionStatement",
												"src": "779:23:5"
											}
										]
									},
									"id": 1836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unlock",
									"nameLocation": "725:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "741:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "733:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:17:5"
									},
									"returnParameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:0:5"
									},
									"scope": 1979,
									"src": "716:93:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										60,
										469
									],
									"body": {
										"id": 1851,
										"nodeType": "Block",
										"src": "930:60:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1848,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1838,
															"src": "971:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 1846,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "947:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC1155Locking_$1979_$",
																"typeString": "type(contract super ERC1155Locking)"
															}
														},
														"id": 1847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 60,
														"src": "947:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "947:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1845,
												"id": 1850,
												"nodeType": "Return",
												"src": "940:43:5"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 1852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "824:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1842,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1840,
												"name": "ERC1155",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1627,
												"src": "891:7:5"
											},
											{
												"id": 1841,
												"name": "AccessControl",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "900:13:5"
											}
										],
										"src": "882:32:5"
									},
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "849:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "842:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1837,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "842:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "841:20:5"
									},
									"returnParameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "924:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1843,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "924:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:6:5"
									},
									"scope": 1979,
									"src": "815:175:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1863,
										"nodeType": "Block",
										"src": "1058:46:5",
										"statements": [
											{
												"expression": {
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1857,
															"name": "_permanentLocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "1066:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1859,
														"indexExpression": {
															"id": 1858,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "1082:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1066:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1093:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1066:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1862,
												"nodeType": "ExpressionStatement",
												"src": "1066:31:5"
											}
										]
									},
									"id": 1864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_lockPermanent",
									"nameLocation": "1005:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1028:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "1020:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:17:5"
									},
									"returnParameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1058:0:5"
									},
									"scope": 1979,
									"src": "996:108:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1875,
										"nodeType": "Block",
										"src": "1174:47:5",
										"statements": [
											{
												"expression": {
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1869,
															"name": "_permanentLocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "1182:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1871,
														"indexExpression": {
															"id": 1870,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1866,
															"src": "1198:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1182:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1872,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1209:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1182:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1874,
												"nodeType": "ExpressionStatement",
												"src": "1182:32:5"
											}
										]
									},
									"id": 1876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unlockPermanent",
									"nameLocation": "1119:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1144:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "1136:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1135:17:5"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1174:0:5"
									},
									"scope": 1979,
									"src": "1110:111:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1887,
										"nodeType": "Block",
										"src": "1293:37:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1883,
														"name": "_locks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "1308:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1885,
													"indexExpression": {
														"id": 1884,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1878,
														"src": "1315:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1308:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1882,
												"id": 1886,
												"nodeType": "Return",
												"src": "1301:22:5"
											}
										]
									},
									"functionSelector": "6b9db4e6",
									"id": 1888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLock",
									"nameLocation": "1236:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1252:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "1244:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:17:5"
									},
									"returnParameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "1283:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1880,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1283:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:6:5"
									},
									"scope": 1979,
									"src": "1227:103:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1899,
										"nodeType": "Block",
										"src": "1406:37:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1895,
														"name": "_locks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "1421:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1897,
													"indexExpression": {
														"id": 1896,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1890,
														"src": "1428:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1421:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1894,
												"id": 1898,
												"nodeType": "Return",
												"src": "1414:22:5"
											}
										]
									},
									"id": 1900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hasLock",
									"nameLocation": "1345:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1362:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "1354:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1354:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1353:17:5"
									},
									"returnParameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "1396:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1892,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1396:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1395:6:5"
									},
									"scope": 1979,
									"src": "1336:107:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1911,
										"nodeType": "Block",
										"src": "1524:46:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1907,
														"name": "_permanentLocks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1807,
														"src": "1539:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1909,
													"indexExpression": {
														"id": 1908,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1902,
														"src": "1555:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1539:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1906,
												"id": 1910,
												"nodeType": "Return",
												"src": "1532:31:5"
											}
										]
									},
									"functionSelector": "eb1fe5a7",
									"id": 1912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPermanentLock",
									"nameLocation": "1458:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1483:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "1475:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1474:17:5"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "1514:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1904,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1514:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1513:6:5"
									},
									"scope": 1979,
									"src": "1449:121:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1923,
										"nodeType": "Block",
										"src": "1655:46:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1919,
														"name": "_permanentLocks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1807,
														"src": "1670:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1921,
													"indexExpression": {
														"id": 1920,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1914,
														"src": "1686:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1670:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1918,
												"id": 1922,
												"nodeType": "Return",
												"src": "1663:31:5"
											}
										]
									},
									"id": 1924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hasPermanentLock",
									"nameLocation": "1585:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1611:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "1603:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1602:17:5"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "1645:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1916,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1645:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1644:6:5"
									},
									"scope": 1979,
									"src": "1576:125:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1451
									],
									"body": {
										"id": 1977,
										"nodeType": "Block",
										"src": "1928:282:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1945,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1926,
															"src": "1965:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1946,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1928,
															"src": "1975:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1947,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1930,
															"src": "1981:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1948,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1933,
															"src": "1985:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1949,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "1990:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1950,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "1999:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1942,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1938:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC1155Locking_$1979_$",
																"typeString": "type(contract super ERC1155Locking)"
															}
														},
														"id": 1944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1451,
														"src": "1938:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1938:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1952,
												"nodeType": "ExpressionStatement",
												"src": "1938:66:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1954,
																		"name": "_locks",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1803,
																		"src": "2023:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1956,
																	"indexExpression": {
																		"id": 1955,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1928,
																		"src": "2030:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2023:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "66616c7365",
																	"id": 1957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2039:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "2023:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1960,
																		"name": "ADMIN_ROLE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "2056:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1961,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2301,
																			"src": "2068:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2068:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1959,
																	"name": "hasRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 79,
																	"src": "2048:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (bytes32,address) view returns (bool)"
																	}
																},
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2023:58:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a204163636f756e74206973204c6f636b6564",
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2083:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eca77cbe9215f5800fda9f27811856be9791e088712ee58a64230973c7484ab3",
																"typeString": "literal_string \"ERC1155: Account is Locked\""
															},
															"value": "ERC1155: Account is Locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eca77cbe9215f5800fda9f27811856be9791e088712ee58a64230973c7484ab3",
																"typeString": "literal_string \"ERC1155: Account is Locked\""
															}
														],
														"id": 1953,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2015:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2015:97:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1967,
												"nodeType": "ExpressionStatement",
												"src": "2015:97:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1969,
																	"name": "_permanentLocks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1807,
																	"src": "2130:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1971,
																"indexExpression": {
																	"id": 1970,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1928,
																	"src": "2146:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2130:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2155:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "2130:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a204163636f756e74206973207065726d616e656e746c79204c6f636b6564",
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2162:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_909ab9730bb538f935046691f3caaa47d9d64476bb4835c977e2f33dd88caf8f",
																"typeString": "literal_string \"ERC1155: Account is permanently Locked\""
															},
															"value": "ERC1155: Account is permanently Locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_909ab9730bb538f935046691f3caaa47d9d64476bb4835c977e2f33dd88caf8f",
																"typeString": "literal_string \"ERC1155: Account is permanently Locked\""
															}
														],
														"id": 1968,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2122:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2122:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1976,
												"nodeType": "ExpressionStatement",
												"src": "2122:81:5"
											}
										]
									},
									"id": 1978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "1716:20:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1940,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1919:8:5"
									},
									"parameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1754:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "1746:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1746:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1780:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "1772:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1772:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1802:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "1794:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1794:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1831:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "1814:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1931,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1814:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1932,
													"nodeType": "ArrayTypeName",
													"src": "1814:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1861:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "1844:24:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1934,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1844:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1935,
													"nodeType": "ArrayTypeName",
													"src": "1844:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1891:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "1878:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1937,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1878:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1736:165:5"
									},
									"returnParameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1928:0:5"
									},
									"scope": 1979,
									"src": "1707:503:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1980,
							"src": "385:1827:5",
							"usedErrors": []
						}
					],
					"src": "113:2100:5"
				},
				"id": 5
			},
			"contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1749
						],
						"IERC1155MetadataURI": [
							1994
						],
						"IERC165": [
							2550
						]
					},
					"id": 1995,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:6"
						},
						{
							"absolutePath": "contracts/OZ_contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1982,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1995,
							"sourceUnit": 1750,
							"src": "142:25:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1984,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1749,
										"src": "397:8:6"
									},
									"id": 1985,
									"nodeType": "InheritanceSpecifier",
									"src": "397:8:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1983,
								"nodeType": "StructuredDocumentation",
								"src": "169:194:6",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1994,
							"linearizedBaseContracts": [
								1994,
								1749,
								2550
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "374:19:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1986,
										"nodeType": "StructuredDocumentation",
										"src": "412:192:6",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1993,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "618:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "630:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "622:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:12:6"
									},
									"returnParameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "657:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1990,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:15:6"
									},
									"scope": 1994,
									"src": "609:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1995,
							"src": "364:310:6",
							"usedErrors": []
						}
					],
					"src": "117:558:6"
				},
				"id": 6
			},
			"contracts/OZ_contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2289
						]
					},
					"id": 2290,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1996,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1997,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2289,
							"linearizedBaseContracts": [
								2289
							],
							"name": "Address",
							"nameLocation": "202:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2011,
										"nodeType": "Block",
										"src": "1241:254:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2005,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2000,
																"src": "1465:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2008,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2004,
												"id": 2010,
												"nodeType": "Return",
												"src": "1458:30:7"
											}
										]
									},
									"documentation": {
										"id": 1998,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 2012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "1195:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:7"
									},
									"returnParameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "1235:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2002,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:7"
									},
									"scope": 2289,
									"src": "1175:320:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2045,
										"nodeType": "Block",
										"src": "2483:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2023,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2289",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2289",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2021,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2026,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "2526:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 2020,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2030,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:7"
											},
											{
												"assignments": [
													2032,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2032,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 2045,
														"src": "2578:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2031,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2039,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2033,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2015,
																"src": "2596:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2035,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "2618:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2041,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "2647:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 2040,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2044,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:7"
											}
										]
									},
									"documentation": {
										"id": 2013,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "2431:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "2458:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:7"
									},
									"returnParameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:7"
									},
									"scope": 2289,
									"src": "2412:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2062,
										"nodeType": "Block",
										"src": "3555:84:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2057,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "3585:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2058,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "3593:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 2056,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2063,
															2083
														],
														"referencedDeclaration": 2083,
														"src": "3572:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2055,
												"id": 2061,
												"nodeType": "Return",
												"src": "3565:67:7"
											}
										]
									},
									"documentation": {
										"id": 2047,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 2063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "3488:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "3504:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2050,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:7"
									},
									"returnParameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "3541:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2053,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:7"
									},
									"scope": 2289,
									"src": "3466:173:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2082,
										"nodeType": "Block",
										"src": "4008:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2076,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2066,
															"src": "4047:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2077,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2068,
															"src": "4055:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2079,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2070,
															"src": "4064:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2075,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2103,
															2153
														],
														"referencedDeclaration": 2153,
														"src": "4025:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2074,
												"id": 2081,
												"nodeType": "Return",
												"src": "4018:59:7"
											}
										]
									},
									"documentation": {
										"id": 2064,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "3892:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "3916:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2067,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "3943:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2069,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:7"
									},
									"returnParameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "3994:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2072,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:7"
									},
									"scope": 2289,
									"src": "3861:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2102,
										"nodeType": "Block",
										"src": "4589:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2096,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2086,
															"src": "4628:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2097,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "4636:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2098,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2090,
															"src": "4642:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 2099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 2095,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2103,
															2153
														],
														"referencedDeclaration": 2153,
														"src": "4606:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2094,
												"id": 2101,
												"nodeType": "Return",
												"src": "4599:94:7"
											}
										]
									},
									"documentation": {
										"id": 2084,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 2103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "4486:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "4510:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2087,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "4537:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:7"
									},
									"returnParameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "4575:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2092,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:7"
									},
									"scope": 2289,
									"src": "4446:254:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2152,
										"nodeType": "Block",
										"src": "5127:320:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2120,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2289",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2289",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2118,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2123,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2110,
																"src": "5170:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 2125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 2117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2127,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2130,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2106,
																	"src": "5247:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2129,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2012,
																"src": "5236:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 2128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2134,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:7"
											},
											{
												"assignments": [
													2136,
													2138
												],
												"declarations": [
													{
														"constant": false,
														"id": 2136,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "5300:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2135,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2138,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "5314:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2137,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2145,
												"initialValue": {
													"arguments": [
														{
															"id": 2143,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2108,
															"src": "5367:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2139,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2106,
																"src": "5341:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2141,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2110,
																"src": "5360:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2147,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "5406:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2148,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2138,
															"src": "5415:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2149,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2112,
															"src": "5427:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2146,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2288,
														"src": "5389:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2116,
												"id": 2151,
												"nodeType": "Return",
												"src": "5382:58:7"
											}
										]
									},
									"documentation": {
										"id": 2104,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "4988:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "5012:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2107,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "5039:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "5062:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2111,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:7"
									},
									"returnParameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "5113:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:7"
									},
									"scope": 2289,
									"src": "4948:499:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2169,
										"nodeType": "Block",
										"src": "5724:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2164,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2156,
															"src": "5760:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2165,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2158,
															"src": "5768:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 2166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 2163,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2205
														],
														"referencedDeclaration": 2205,
														"src": "5741:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2162,
												"id": 2168,
												"nodeType": "Return",
												"src": "5734:80:7"
											}
										]
									},
									"documentation": {
										"id": 2154,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "5652:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "5668:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:7"
									},
									"returnParameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "5710:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2160,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:7"
									},
									"scope": 2289,
									"src": "5624:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2204,
										"nodeType": "Block",
										"src": "6163:228:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2184,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2173,
																	"src": "6192:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2183,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2012,
																"src": "6181:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 2182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2188,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:7"
											},
											{
												"assignments": [
													2190,
													2192
												],
												"declarations": [
													{
														"constant": false,
														"id": 2190,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 2204,
														"src": "6252:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2189,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2192,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 2204,
														"src": "6266:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2191,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2197,
												"initialValue": {
													"arguments": [
														{
															"id": 2195,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2175,
															"src": "6311:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2193,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2173,
															"src": "6293:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2199,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2190,
															"src": "6350:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2200,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "6359:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2201,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2177,
															"src": "6371:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2198,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2288,
														"src": "6333:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2181,
												"id": 2203,
												"nodeType": "Return",
												"src": "6326:58:7"
											}
										]
									},
									"documentation": {
										"id": 2171,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "6042:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "6066:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "6093:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:7"
									},
									"returnParameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "6149:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:7"
									},
									"scope": 2289,
									"src": "6005:386:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2221,
										"nodeType": "Block",
										"src": "6667:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2216,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2208,
															"src": "6705:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2217,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2210,
															"src": "6713:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 2218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 2215,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2222,
															2257
														],
														"referencedDeclaration": 2257,
														"src": "6684:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2214,
												"id": 2220,
												"nodeType": "Return",
												"src": "6677:84:7"
											}
										]
									},
									"documentation": {
										"id": 2206,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "6600:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "6616:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:7"
									},
									"returnParameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "6653:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2212,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:7"
									},
									"scope": 2289,
									"src": "6570:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2256,
										"nodeType": "Block",
										"src": "7109:232:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2236,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2225,
																	"src": "7138:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2235,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2012,
																"src": "7127:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 2234,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2240,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:7"
											},
											{
												"assignments": [
													2242,
													2244
												],
												"declarations": [
													{
														"constant": false,
														"id": 2242,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 2256,
														"src": "7200:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2241,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2244,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 2256,
														"src": "7214:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2243,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2249,
												"initialValue": {
													"arguments": [
														{
															"id": 2247,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2227,
															"src": "7261:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2245,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2225,
															"src": "7241:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2251,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2242,
															"src": "7300:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2252,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2244,
															"src": "7309:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2253,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2229,
															"src": "7321:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2250,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2288,
														"src": "7283:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2233,
												"id": 2255,
												"nodeType": "Return",
												"src": "7276:58:7"
											}
										]
									},
									"documentation": {
										"id": 2223,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "6993:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "7017:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "7044:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2228,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:7"
									},
									"returnParameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "7095:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2231,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:7"
									},
									"scope": 2289,
									"src": "6954:387:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2287,
										"nodeType": "Block",
										"src": "7721:532:7",
										"statements": [
											{
												"condition": {
													"id": 2269,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2260,
													"src": "7735:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2285,
													"nodeType": "Block",
													"src": "7792:455:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2273,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2262,
																		"src": "7876:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2283,
																"nodeType": "Block",
																"src": "8184:53:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2280,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2264,
																					"src": "8209:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2279,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2282,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:7"
																	}
																]
															},
															"id": 2284,
															"nodeType": "IfStatement",
															"src": "7872:365:7",
															"trueBody": {
																"id": 2278,
																"nodeType": "Block",
																"src": "7899:279:7",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:7",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:7"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:7"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:7",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:7",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:7"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:7"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:7"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 2262,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:7",
																				"valueSize": 1
																			},
																			{
																				"declaration": 2262,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:7",
																				"valueSize": 1
																			}
																		],
																		"id": 2277,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:7"
																	}
																]
															}
														}
													]
												},
												"id": 2286,
												"nodeType": "IfStatement",
												"src": "7731:516:7",
												"trueBody": {
													"id": 2272,
													"nodeType": "Block",
													"src": "7744:42:7",
													"statements": [
														{
															"expression": {
																"id": 2270,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2262,
																"src": "7765:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2268,
															"id": 2271,
															"nodeType": "Return",
															"src": "7758:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2258,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:7",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 2288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "7596:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2259,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "7618:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2261,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "7651:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2263,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:7"
									},
									"returnParameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "7707:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:7"
									},
									"scope": 2289,
									"src": "7561:692:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2290,
							"src": "194:8061:7",
							"usedErrors": []
						}
					],
					"src": "101:8155:7"
				},
				"id": 7
			},
			"contracts/OZ_contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2311
						]
					},
					"id": 2312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2291,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2292,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2311,
							"linearizedBaseContracts": [
								2311
							],
							"name": "Context",
							"nameLocation": "626:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2300,
										"nodeType": "Block",
										"src": "702:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2297,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2296,
												"id": 2299,
												"nodeType": "Return",
												"src": "712:17:8"
											}
										]
									},
									"id": 2301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:8"
									},
									"returnParameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "693:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:8"
									},
									"scope": 2311,
									"src": "640:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2309,
										"nodeType": "Block",
										"src": "809:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2306,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2305,
												"id": 2308,
												"nodeType": "Return",
												"src": "819:15:8"
											}
										]
									},
									"id": 2310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:8"
									},
									"returnParameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "793:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2303,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:8"
									},
									"scope": 2311,
									"src": "742:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2312,
							"src": "608:235:8",
							"usedErrors": []
						}
					],
					"src": "86:758:8"
				},
				"id": 8
			},
			"contracts/OZ_contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							2514
						]
					},
					"id": 2515,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2313,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2314,
								"nodeType": "StructuredDocumentation",
								"src": "111:34:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2514,
							"linearizedBaseContracts": [
								2514
							],
							"name": "Strings",
							"nameLocation": "154:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2317,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "193:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2514,
									"src": "168:58:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2315,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2316,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2395,
										"nodeType": "Block",
										"src": "399:632:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2325,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2320,
														"src": "601:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "601:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2331,
												"nodeType": "IfStatement",
												"src": "597:51:9",
												"trueBody": {
													"id": 2330,
													"nodeType": "Block",
													"src": "613:35:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 2324,
															"id": 2329,
															"nodeType": "Return",
															"src": "627:10:9"
														}
													]
												}
											},
											{
												"assignments": [
													2333
												],
												"declarations": [
													{
														"constant": false,
														"id": 2333,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "665:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 2395,
														"src": "657:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2332,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "657:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2335,
												"initialValue": {
													"id": 2334,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2320,
													"src": "672:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "657:20:9"
											},
											{
												"assignments": [
													2337
												],
												"declarations": [
													{
														"constant": false,
														"id": 2337,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "695:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2395,
														"src": "687:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2336,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2338,
												"nodeType": "VariableDeclarationStatement",
												"src": "687:14:9"
											},
											{
												"body": {
													"id": 2349,
													"nodeType": "Block",
													"src": "729:57:9",
													"statements": [
														{
															"expression": {
																"id": 2343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "743:8:9",
																"subExpression": {
																	"id": 2342,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2337,
																	"src": "743:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2344,
															"nodeType": "ExpressionStatement",
															"src": "743:8:9"
														},
														{
															"expression": {
																"id": 2347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2345,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2333,
																	"src": "765:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 2346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "773:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "765:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2348,
															"nodeType": "ExpressionStatement",
															"src": "765:10:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2339,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2333,
														"src": "718:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2340,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "718:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2350,
												"nodeType": "WhileStatement",
												"src": "711:75:9"
											},
											{
												"assignments": [
													2352
												],
												"declarations": [
													{
														"constant": false,
														"id": 2352,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "808:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2395,
														"src": "795:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2351,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "795:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2357,
												"initialValue": {
													"arguments": [
														{
															"id": 2355,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2337,
															"src": "827:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2354,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "817:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2353,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "821:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:39:9"
											},
											{
												"body": {
													"id": 2388,
													"nodeType": "Block",
													"src": "863:131:9",
													"statements": [
														{
															"expression": {
																"id": 2363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2361,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2337,
																	"src": "877:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "877:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2364,
															"nodeType": "ExpressionStatement",
															"src": "877:11:9"
														},
														{
															"expression": {
																"id": 2382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2365,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2352,
																		"src": "902:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2367,
																	"indexExpression": {
																		"id": 2366,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2337,
																		"src": "909:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "902:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2379,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 2372,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "932:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2377,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2375,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2320,
																									"src": "945:5:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 2376,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "953:2:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "945:10:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2374,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "937:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 2373,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "937:7:9",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 2378,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "937:19:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "932:24:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2371,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "926:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 2370,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "926:5:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "926:31:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 2369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "919:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 2368,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "919:6:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "919:39:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "902:56:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2383,
															"nodeType": "ExpressionStatement",
															"src": "902:56:9"
														},
														{
															"expression": {
																"id": 2386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2384,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2320,
																	"src": "972:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 2385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "972:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2387,
															"nodeType": "ExpressionStatement",
															"src": "972:11:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2358,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2320,
														"src": "851:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2359,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "851:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2389,
												"nodeType": "WhileStatement",
												"src": "844:150:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2392,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2352,
															"src": "1017:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1010:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2390,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1010:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 2393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2324,
												"id": 2394,
												"nodeType": "Return",
												"src": "1003:21:9"
											}
										]
									},
									"documentation": {
										"id": 2318,
										"nodeType": "StructuredDocumentation",
										"src": "233:90:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "337:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "354:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "346:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:9"
									},
									"returnParameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "384:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2322,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:9"
									},
									"scope": 2514,
									"src": "328:703:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2436,
										"nodeType": "Block",
										"src": "1210:255:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2404,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2399,
														"src": "1224:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2405,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1224:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2410,
												"nodeType": "IfStatement",
												"src": "1220:54:9",
												"trueBody": {
													"id": 2409,
													"nodeType": "Block",
													"src": "1236:38:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 2407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 2403,
															"id": 2408,
															"nodeType": "Return",
															"src": "1250:13:9"
														}
													]
												}
											},
											{
												"assignments": [
													2412
												],
												"declarations": [
													{
														"constant": false,
														"id": 2412,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1291:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 2436,
														"src": "1283:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2411,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1283:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2414,
												"initialValue": {
													"id": 2413,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2399,
													"src": "1298:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:20:9"
											},
											{
												"assignments": [
													2416
												],
												"declarations": [
													{
														"constant": false,
														"id": 2416,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1321:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2436,
														"src": "1313:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2415,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1313:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2418,
												"initialValue": {
													"hexValue": "30",
													"id": 2417,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:18:9"
											},
											{
												"body": {
													"id": 2429,
													"nodeType": "Block",
													"src": "1359:57:9",
													"statements": [
														{
															"expression": {
																"id": 2423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1373:8:9",
																"subExpression": {
																	"id": 2422,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2416,
																	"src": "1373:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2424,
															"nodeType": "ExpressionStatement",
															"src": "1373:8:9"
														},
														{
															"expression": {
																"id": 2427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2425,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2412,
																	"src": "1395:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 2426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1395:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2428,
															"nodeType": "ExpressionStatement",
															"src": "1395:10:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2419,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2412,
														"src": "1348:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1348:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2430,
												"nodeType": "WhileStatement",
												"src": "1341:75:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2432,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2399,
															"src": "1444:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2433,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2416,
															"src": "1451:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2431,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2437,
															2513
														],
														"referencedDeclaration": 2513,
														"src": "1432:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2403,
												"id": 2435,
												"nodeType": "Return",
												"src": "1425:33:9"
											}
										]
									},
									"documentation": {
										"id": 2397,
										"nodeType": "StructuredDocumentation",
										"src": "1037:94:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1145:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "1157:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:15:9"
									},
									"returnParameters": {
										"id": 2403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "1195:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2401,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:9"
									},
									"scope": 2514,
									"src": "1136:329:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2512,
										"nodeType": "Block",
										"src": "1678:351:9",
										"statements": [
											{
												"assignments": [
													2448
												],
												"declarations": [
													{
														"constant": false,
														"id": 2448,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1701:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2512,
														"src": "1688:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2447,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1688:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2457,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2452,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2442,
																	"src": "1724:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1720:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1720:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2450,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1710:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2449,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1714:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:47:9"
											},
											{
												"expression": {
													"id": 2462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2458,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2448,
															"src": "1745:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2460,
														"indexExpression": {
															"hexValue": "30",
															"id": 2459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1745:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2463,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:9"
											},
											{
												"expression": {
													"id": 2468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2464,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2448,
															"src": "1770:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2466,
														"indexExpression": {
															"hexValue": "31",
															"id": 2465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1770:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1770:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2469,
												"nodeType": "ExpressionStatement",
												"src": "1770:15:9"
											},
											{
												"body": {
													"id": 2498,
													"nodeType": "Block",
													"src": "1840:87:9",
													"statements": [
														{
															"expression": {
																"id": 2492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2484,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2448,
																		"src": "1854:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2486,
																	"indexExpression": {
																		"id": 2485,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2471,
																		"src": "1861:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1854:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2487,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2317,
																		"src": "1866:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2491,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2488,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2440,
																			"src": "1879:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1887:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1879:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1866:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1854:37:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2493,
															"nodeType": "ExpressionStatement",
															"src": "1854:37:9"
														},
														{
															"expression": {
																"id": 2496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2494,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2440,
																	"src": "1905:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1905:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2497,
															"nodeType": "ExpressionStatement",
															"src": "1905:11:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2478,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2471,
														"src": "1828:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1828:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2499,
												"initializationExpression": {
													"assignments": [
														2471
													],
													"declarations": [
														{
															"constant": false,
															"id": 2471,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1808:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2499,
															"src": "1800:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2470,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1800:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2477,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2473,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2442,
																"src": "1816:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1812:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1825:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1812:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1800:26:9"
												},
												"loopExpression": {
													"expression": {
														"id": 2482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1835:3:9",
														"subExpression": {
															"id": 2481,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2471,
															"src": "1837:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2483,
													"nodeType": "ExpressionStatement",
													"src": "1835:3:9"
												},
												"nodeType": "ForStatement",
												"src": "1795:132:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2501,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2440,
																"src": "1944:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1953:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1944:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 2504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 2500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2506,
												"nodeType": "ExpressionStatement",
												"src": "1936:55:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2509,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2448,
															"src": "2015:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2008:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2507,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2008:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 2510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2446,
												"id": 2511,
												"nodeType": "Return",
												"src": "2001:21:9"
											}
										]
									},
									"documentation": {
										"id": 2438,
										"nodeType": "StructuredDocumentation",
										"src": "1471:112:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1597:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1617:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "1609:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1632:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "1624:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:31:9"
									},
									"returnParameters": {
										"id": 2446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "1663:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:9"
									},
									"scope": 2514,
									"src": "1588:441:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2515,
							"src": "146:1885:9",
							"usedErrors": []
						}
					],
					"src": "86:1946:9"
				},
				"id": 9
			},
			"contracts/OZ_contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2538
						],
						"IERC165": [
							2550
						]
					},
					"id": 2539,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2516,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:10"
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2517,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2539,
							"sourceUnit": 2551,
							"src": "124:23:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2519,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2550,
										"src": "754:7:10"
									},
									"id": 2520,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:10"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2518,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 2538,
							"linearizedBaseContracts": [
								2538,
								2550
							],
							"name": "ERC165",
							"nameLocation": "744:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2549
									],
									"body": {
										"id": 2536,
										"nodeType": "Block",
										"src": "920:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2529,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2523,
														"src": "937:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2531,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2550,
																	"src": "957:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2550_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2550_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2530,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2550",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2533,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2528,
												"id": 2535,
												"nodeType": "Return",
												"src": "930:47:10"
											}
										]
									},
									"documentation": {
										"id": 2521,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2525,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:10"
									},
									"parameters": {
										"id": 2524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "856:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2522,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:10"
									},
									"returnParameters": {
										"id": 2528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "914:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:10"
									},
									"scope": 2538,
									"src": "829:155:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2539,
							"src": "726:260:10",
							"usedErrors": []
						}
					],
					"src": "99:888:10"
				},
				"id": 10
			},
			"contracts/OZ_contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2550
						]
					},
					"id": 2551,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2540,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2541,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2550,
							"linearizedBaseContracts": [
								2550
							],
							"name": "IERC165",
							"nameLocation": "415:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2542,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2549,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "801:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2543,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:11"
									},
									"returnParameters": {
										"id": 2548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "844:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2546,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:11"
									},
									"scope": 2550,
									"src": "774:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2551,
							"src": "405:447:11",
							"usedErrors": []
						}
					],
					"src": "100:753:11"
				},
				"id": 11
			}
		}
	}
}