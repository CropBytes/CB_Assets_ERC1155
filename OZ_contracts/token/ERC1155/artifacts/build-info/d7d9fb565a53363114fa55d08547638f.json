{
	"id": "d7d9fb565a53363114fa55d08547638f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/OZ_contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\nimport \"../../utils/Strings.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 id) public view virtual override returns (string memory) {\n        return string(\n            abi.encodePacked(\n                _uri,\n                Strings.toString(id)\n            )\n        );\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: address zero is not a valid owner\");\n        return _balanceOf(account, id);\n    }\n\n    function _balanceOf(address account, uint256 id) internal view virtual returns(uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");        \n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"
			},
			"contracts/OZ_contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			"contracts/OZ_contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"contracts/OZ_contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"contracts/OZ_contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"contracts/OZ_contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"contracts/OZ_contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/OZ_contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":604:17422  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1141:1203  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1183:1196  _setURI(uri_) */\n  tag_6\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1191:1195  uri_ */\n  dup2\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1183:1190  _setURI */\n  tag_7\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1183:1196  _setURI(uri_) */\n  jump\t// in\ntag_6:\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1141:1203  constructor(string memory uri_) {... */\n  pop\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":604:17422  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_23)\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":8473:8559  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":8539:8552  _uri = newuri */\n  dup1\n  mload\n  tag_10\n  swap1\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":8539:8543  _uri */\n  0x02\n  swap1\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":8539:8552  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":8473:8559  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":604:17422  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_18)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_21)\n    /* \"#utility.yul\":14:1151   */\ntag_3:\n    /* \"#utility.yul\":94:100   */\n  0x00\n    /* \"#utility.yul\":125:127   */\n  0x20\n    /* \"#utility.yul\":168:170   */\n  dup1\n    /* \"#utility.yul\":156:165   */\n  dup4\n    /* \"#utility.yul\":147:154   */\n  dup6\n    /* \"#utility.yul\":143:166   */\n  sub\n    /* \"#utility.yul\":139:171   */\n  slt\n    /* \"#utility.yul\":136:138   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":189:195   */\n  dup2\n    /* \"#utility.yul\":181:187   */\n  dup3\n    /* \"#utility.yul\":174:196   */\n  revert\n    /* \"#utility.yul\":136:138   */\ntag_25:\n    /* \"#utility.yul\":221:237   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":286:300   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":283:285   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":318:324   */\n  dup4\n    /* \"#utility.yul\":310:316   */\n  dup5\n    /* \"#utility.yul\":303:325   */\n  revert\n    /* \"#utility.yul\":283:285   */\ntag_26:\n    /* \"#utility.yul\":361:367   */\n  dup2\n    /* \"#utility.yul\":350:359   */\n  dup6\n    /* \"#utility.yul\":346:368   */\n  add\n    /* \"#utility.yul\":336:368   */\n  swap2\n  pop\n    /* \"#utility.yul\":406:413   */\n  dup6\n    /* \"#utility.yul\":399:403   */\n  0x1f\n    /* \"#utility.yul\":395:397   */\n  dup4\n    /* \"#utility.yul\":391:404   */\n  add\n    /* \"#utility.yul\":387:414   */\n  slt\n    /* \"#utility.yul\":377:379   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":433:439   */\n  dup4\n    /* \"#utility.yul\":425:431   */\n  dup5\n    /* \"#utility.yul\":418:440   */\n  revert\n    /* \"#utility.yul\":377:379   */\ntag_27:\n    /* \"#utility.yul\":467:469   */\n  dup2\n    /* \"#utility.yul\":461:470   */\n  mload\n    /* \"#utility.yul\":489:491   */\n  dup2\n    /* \"#utility.yul\":485:487   */\n  dup2\n    /* \"#utility.yul\":482:492   */\n  gt\n    /* \"#utility.yul\":479:481   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":495:513   */\n  tag_29\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":570:572   */\n  0x40\n    /* \"#utility.yul\":564:573   */\n  mload\n    /* \"#utility.yul\":538:540   */\n  0x1f\n    /* \"#utility.yul\":624:637   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":620:642   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":644:646   */\n  0x3f\n    /* \"#utility.yul\":616:647   */\n  add\n    /* \"#utility.yul\":612:652   */\n  and\n    /* \"#utility.yul\":600:653   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":668:686   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":688:710   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":665:711   */\n  or\n    /* \"#utility.yul\":662:664   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":714:732   */\n  tag_32\n  tag_30\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":754:764   */\n  dup2\n    /* \"#utility.yul\":750:752   */\n  0x40\n    /* \"#utility.yul\":743:765   */\n  mstore\n    /* \"#utility.yul\":789:791   */\n  dup3\n    /* \"#utility.yul\":781:787   */\n  dup2\n    /* \"#utility.yul\":774:792   */\n  mstore\n    /* \"#utility.yul\":829:836   */\n  dup9\n    /* \"#utility.yul\":824:826   */\n  dup7\n    /* \"#utility.yul\":819:821   */\n  dup5\n    /* \"#utility.yul\":815:817   */\n  dup8\n    /* \"#utility.yul\":811:822   */\n  add\n    /* \"#utility.yul\":807:827   */\n  add\n    /* \"#utility.yul\":804:837   */\n  gt\n    /* \"#utility.yul\":801:803   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":855:861   */\n  dup7\n    /* \"#utility.yul\":847:853   */\n  dup8\n    /* \"#utility.yul\":840:862   */\n  revert\n    /* \"#utility.yul\":801:803   */\ntag_33:\n    /* \"#utility.yul\":882:888   */\n  dup7\n    /* \"#utility.yul\":873:888   */\n  swap4\n  pop\n    /* \"#utility.yul\":897:1026   */\ntag_34:\n    /* \"#utility.yul\":911:913   */\n  dup3\n    /* \"#utility.yul\":908:909   */\n  dup5\n    /* \"#utility.yul\":905:914   */\n  lt\n    /* \"#utility.yul\":897:1026   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":999:1009   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":995:1014   */\n  dup7\n  add\n    /* \"#utility.yul\":989:1015   */\n  mload\n    /* \"#utility.yul\":968:982   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":964:987   */\n  dup8\n  add\n    /* \"#utility.yul\":957:1016   */\n  mstore\n    /* \"#utility.yul\":922:932   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":897:1026   */\n  jump(tag_34)\ntag_36:\n    /* \"#utility.yul\":1044:1046   */\n  dup3\n    /* \"#utility.yul\":1041:1042   */\n  dup5\n    /* \"#utility.yul\":1038:1047   */\n  gt\n    /* \"#utility.yul\":1035:1037   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1103:1109   */\n  dup7\n    /* \"#utility.yul\":1098:1100   */\n  dup7\n    /* \"#utility.yul\":1093:1095   */\n  dup5\n    /* \"#utility.yul\":1085:1091   */\n  dup4\n    /* \"#utility.yul\":1081:1096   */\n  add\n    /* \"#utility.yul\":1077:1101   */\n  add\n    /* \"#utility.yul\":1070:1110   */\n  mstore\n    /* \"#utility.yul\":1035:1037   */\ntag_37:\n    /* \"#utility.yul\":1139:1145   */\n  swap9\n    /* \"#utility.yul\":105:1151   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1156:1536   */\ntag_13:\n    /* \"#utility.yul\":1235:1236   */\n  0x01\n    /* \"#utility.yul\":1231:1243   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1278:1290   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1299:1301   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1353:1357   */\n  0x7f\n    /* \"#utility.yul\":1345:1351   */\n  dup3\n    /* \"#utility.yul\":1341:1358   */\n  and\n    /* \"#utility.yul\":1331:1358   */\n  swap2\n  pop\n    /* \"#utility.yul\":1299:1301   */\ntag_39:\n    /* \"#utility.yul\":1406:1408   */\n  0x20\n    /* \"#utility.yul\":1398:1404   */\n  dup3\n    /* \"#utility.yul\":1395:1409   */\n  lt\n    /* \"#utility.yul\":1375:1393   */\n  dup2\n    /* \"#utility.yul\":1372:1410   */\n  eq\n    /* \"#utility.yul\":1369:1371   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1452:1462   */\n  0x4e487b71\n    /* \"#utility.yul\":1447:1450   */\n  0xe0\n    /* \"#utility.yul\":1443:1463   */\n  shl\n    /* \"#utility.yul\":1440:1441   */\n  0x00\n    /* \"#utility.yul\":1433:1464   */\n  mstore\n    /* \"#utility.yul\":1487:1491   */\n  0x22\n    /* \"#utility.yul\":1484:1485   */\n  0x04\n    /* \"#utility.yul\":1477:1492   */\n  mstore\n    /* \"#utility.yul\":1515:1519   */\n  0x24\n    /* \"#utility.yul\":1512:1513   */\n  0x00\n    /* \"#utility.yul\":1505:1520   */\n  revert\n    /* \"#utility.yul\":1369:1371   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1211:1536   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1541:1668   */\ntag_30:\n    /* \"#utility.yul\":1602:1612   */\n  0x4e487b71\n    /* \"#utility.yul\":1597:1600   */\n  0xe0\n    /* \"#utility.yul\":1593:1613   */\n  shl\n    /* \"#utility.yul\":1590:1591   */\n  0x00\n    /* \"#utility.yul\":1583:1614   */\n  mstore\n    /* \"#utility.yul\":1633:1637   */\n  0x41\n    /* \"#utility.yul\":1630:1631   */\n  0x04\n    /* \"#utility.yul\":1623:1638   */\n  mstore\n    /* \"#utility.yul\":1657:1661   */\n  0x24\n    /* \"#utility.yul\":1654:1655   */\n  0x00\n    /* \"#utility.yul\":1647:1662   */\n  revert\n    /* \"#utility.yul\":1573:1668   */\ntag_23:\n    /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":604:17422  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":604:17422  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2338:2566  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":14952:14977   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":14940:14942   */\n      0x20\n        /* \"#utility.yul\":14925:14943   */\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2338:2566  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1270:1575  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":10439:10453   */\n      swap1\n      iszero\n        /* \"#utility.yul\":10432:10454   */\n      iszero\n        /* \"#utility.yul\":10414:10455   */\n      dup2\n      mstore\n        /* \"#utility.yul\":10402:10404   */\n      0x20\n        /* \"#utility.yul\":10387:10405   */\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1270:1575  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":10369:10461   */\n      jump\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1974:2196  function uri(uint256 id) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4361:4791  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2863:3379  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3447:3600  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3667:3833  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_18\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3789:3816  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3766:3770  bool */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3789:3816  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3789:3807  _operatorApprovals */\n      0x01\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3789:3816  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3789:3826  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3667:3833  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3900:4289  function safeTransferFrom(... */\n    tag_10:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2338:2566  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2424:2431  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2451:2472  account != address(0) */\n      dup4\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2443:2519  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12132:12134   */\n      0x20\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2443:2519  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12114:12135   */\n      mstore\n        /* \"#utility.yul\":12171:12173   */\n      0x2a\n        /* \"#utility.yul\":12151:12169   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12144:12174   */\n      mstore\n        /* \"#utility.yul\":12210:12244   */\n      0x455243313135353a2061646472657373207a65726f206973206e6f7420612076\n        /* \"#utility.yul\":12190:12208   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12183:12245   */\n      mstore\n      shl(0xb1, 0x30b634b21037bbb732b9)\n        /* \"#utility.yul\":12261:12279   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12254:12294   */\n      mstore\n        /* \"#utility.yul\":12311:12330   */\n      0x84\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2443:2519  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2651:2658  uint256 */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2677:2690  _balances[id] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2677:2699  _balances[id][account] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2536:2559  _balanceOf(account, id) */\n    tag_57:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2529:2559  return _balanceOf(account, id) */\n      swap4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2338:2566  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1270:1575  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1372:1376  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1407:1448  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1407:1516  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_60\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1464:1516  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1407:1516  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_60:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1407:1568  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_62\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/OZ_contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1532:1568  super.supportsInterface(interfaceId) */\n    tag_62:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1388:1568  return... */\n      swap3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1270:1575  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1974:2196  function uri(uint256 id) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2037:2050  string memory */\n      0x60\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2123:2127  _uri */\n      0x02\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2145:2165  Strings.toString(id) */\n      tag_65\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2162:2164  id */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2145:2161  Strings.toString */\n      tag_66\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2145:2165  Strings.toString(id) */\n      jump\t// in\n    tag_65:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2089:2179  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_67\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2062:2189  return string(... */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":1974:2196  function uri(uint256 id) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4361:4791  function safeBatchTransferFrom(... */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4586:4606  from == _msgSender() */\n      dup6\n      and\n        /* \"contracts/OZ_contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4586:4606  from == _msgSender() */\n      eq\n      dup1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4586:4646  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_73\n      jumpi\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4610:4646  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4627:4631  from */\n      dup6\n        /* \"contracts/OZ_contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3667:3833  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4610:4646  isApprovedForAll(from, _msgSender()) */\n    tag_73:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4565:4722  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12949:12951   */\n      0x20\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4565:4722  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12931:12952   */\n      mstore\n        /* \"#utility.yul\":12988:12990   */\n      0x32\n        /* \"#utility.yul\":12968:12986   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12961:12991   */\n      mstore\n        /* \"#utility.yul\":13027:13061   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":13007:13025   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13000:13062   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":13078:13096   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13071:13119   */\n      mstore\n        /* \"#utility.yul\":13136:13155   */\n      0x84\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4565:4722  require(... */\n      tag_55\n        /* \"#utility.yul\":12921:13161   */\n      jump\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4565:4722  require(... */\n    tag_75:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4732:4784  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4755:4759  from */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4761:4763  to */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4765:4768  ids */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4770:4777  amounts */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4779:4783  data */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4732:4754  _safeBatchTransferFrom */\n      tag_79\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4732:4784  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4361:4791  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2863:3379  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3014:3030  uint256[] memory */\n      0x60\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3073:3076  ids */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3073:3083  ids.length */\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3054:3062  accounts */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3054:3069  accounts.length */\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3054:3083  accounts.length == ids.length */\n      eq\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3046:3129  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14189:14191   */\n      0x20\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3046:3129  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14171:14192   */\n      mstore\n        /* \"#utility.yul\":14228:14230   */\n      0x29\n        /* \"#utility.yul\":14208:14226   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14201:14231   */\n      mstore\n        /* \"#utility.yul\":14267:14301   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":14247:14265   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14240:14302   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":14318:14336   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14311:14350   */\n      mstore\n        /* \"#utility.yul\":14367:14386   */\n      0x84\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3046:3129  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":14161:14392   */\n      jump\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3046:3129  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_81:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3148:3178  uint256[] memory batchBalances */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3195:3203  accounts */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3195:3210  accounts.length */\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3181:3211  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_84\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_84:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_85\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_85:\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3148:3211  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3227:3236  uint256 i */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3222:3342  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_86:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3246:3254  accounts */\n      dup5\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3246:3261  accounts.length */\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3242:3243  i */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3242:3261  i < accounts.length */\n      lt\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3222:3342  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_87\n      jumpi\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3301:3331  balanceOf(accounts[i], ids[i]) */\n      tag_89\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3311:3319  accounts */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3320:3321  i */\n      dup3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3311:3322  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_90\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_90:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3324:3327  ids */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3328:3329  i */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3324:3330  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_91\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_91:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3301:3310  balanceOf */\n      tag_15\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3301:3331  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_89:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3282:3295  batchBalances */\n      dup3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3296:3297  i */\n      dup3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3282:3298  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_92\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_92:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3282:3331  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3263:3266  ++i */\n      tag_93\n      dup2\n      tag_94\n      jump\t// in\n    tag_93:\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3222:3342  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_86)\n    tag_87:\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3359:3372  batchBalances */\n      swap4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":2863:3379  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3447:3600  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3541:3593  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_96\n        /* \"contracts/OZ_contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3574:3582  operator */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3584:3592  approved */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3541:3559  _setApprovalForAll */\n      tag_98\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3541:3593  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3447:3600  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3900:4289  function safeTransferFrom(... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4100:4120  from == _msgSender() */\n      dup6\n      and\n        /* \"contracts/OZ_contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4100:4120  from == _msgSender() */\n      eq\n      dup1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4100:4160  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_103\n      jumpi\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4124:4160  isApprovedForAll(from, _msgSender()) */\n      tag_103\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4141:4145  from */\n      dup6\n        /* \"contracts/OZ_contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":3667:3833  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4124:4160  isApprovedForAll(from, _msgSender()) */\n    tag_103:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4079:4227  require(... */\n      tag_105\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11722:11724   */\n      0x20\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4079:4227  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11704:11725   */\n      mstore\n        /* \"#utility.yul\":11761:11763   */\n      0x29\n        /* \"#utility.yul\":11741:11759   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11734:11764   */\n      mstore\n        /* \"#utility.yul\":11800:11834   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":11780:11798   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11773:11835   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":11851:11869   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11844:11883   */\n      mstore\n        /* \"#utility.yul\":11900:11919   */\n      0x84\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4079:4227  require(... */\n      tag_55\n        /* \"#utility.yul\":11694:11925   */\n      jump\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4079:4227  require(... */\n    tag_105:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4237:4282  _safeTransferFrom(from, to, id, amount, data) */\n      tag_78\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4255:4259  from */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4261:4263  to */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4265:4267  id */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4269:4275  amount */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4277:4281  data */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4237:4254  _safeTransferFrom */\n      tag_109\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":4237:4282  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_66:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":384:397  string memory */\n      0x60\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":601:611  value == 0 */\n      dup2\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n      tag_113\n      jumpi\n      pop\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":627:637  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n    tag_113:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":672:677  value */\n      dup2\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":657:669  uint256 temp */\n      0x00\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n    tag_114:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":718:727  temp != 0 */\n      dup2\n      iszero\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      tag_115\n      jumpi\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":743:751  digits++ */\n      dup1\n      tag_116\n      dup2\n      tag_94\n      jump\t// in\n    tag_116:\n      swap2\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      tag_117\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":773:775  10 */\n      0x0a\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      dup4\n      tag_118\n      jump\t// in\n    tag_117:\n      swap2\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      jump(tag_114)\n    tag_115:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":795:814  bytes memory buffer */\n      0x00\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":827:833  digits */\n      dup2\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":817:834  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_119\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_119:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_120:\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":795:834  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n    tag_121:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":851:861  value != 0 */\n      dup5\n      iszero\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      tag_122\n      jumpi\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      tag_123\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":887:888  1 */\n      0x01\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      dup4\n      tag_124\n      jump\t// in\n    tag_123:\n      swap2\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_125\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":945:950  value */\n      dup7\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_127\n      swap1\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":932:934  48 */\n      0x30\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":919:958  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":902:908  buffer */\n      dup2\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":909:915  digits */\n      dup4\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":902:916  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_129\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_129:\n      0x20\n      add\n      add\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":902:958  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":972:983  value /= 10 */\n      tag_130\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":981:983  10 */\n      0x0a\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":972:983  value /= 10 */\n      dup7\n      tag_118\n      jump\t// in\n    tag_130:\n      swap5\n      pop\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      jump(tag_121)\n    tag_122:\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":1017:1023  buffer */\n      swap5\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6535:7650  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6755:6762  amounts */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6755:6769  amounts.length */\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6741:6744  ids */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6741:6751  ids.length */\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6741:6769  ids.length == amounts.length */\n      eq\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6733:6814  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14599:14601   */\n      0x20\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6733:6814  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14581:14602   */\n      mstore\n        /* \"#utility.yul\":14638:14640   */\n      0x28\n        /* \"#utility.yul\":14618:14636   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14611:14641   */\n      mstore\n        /* \"#utility.yul\":14677:14711   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":14657:14675   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14650:14712   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":14728:14746   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14721:14759   */\n      mstore\n        /* \"#utility.yul\":14776:14795   */\n      0x84\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6733:6814  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":14571:14801   */\n      jump\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6733:6814  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6832:6848  to != address(0) */\n      dup5\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6824:6890  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_138\n      jump\t// in\n    tag_136:\n        /* \"contracts/OZ_contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6901:6917  address operator */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7014:7425  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_142:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7038:7041  ids */\n      dup5\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7038:7048  ids.length */\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7034:7035  i */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7034:7048  i < ids.length */\n      lt\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7014:7425  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_143\n      jumpi\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7069:7079  uint256 id */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7082:7085  ids */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7086:7087  i */\n      dup3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7082:7088  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_145\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_145:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7069:7088  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7102:7116  uint256 amount */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7119:7126  amounts */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7127:7128  i */\n      dup4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7119:7129  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_146\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_146:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7144:7163  uint256 fromBalance */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7166:7179  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7166:7185  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7119:7129  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7207:7228  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7199:7275  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_149\n      jump\t// in\n    tag_147:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7317:7326  _balances */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7317:7330  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7317:7336  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7339:7359  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7317:7359  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7387:7404  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7387:7414  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7339:7359  fromBalance - amount */\n      dup5\n      swap3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7317:7326  _balances */\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7387:7414  _balances[id][to] += amount */\n      tag_150\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7339:7359  fromBalance - amount */\n      dup5\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7387:7414  _balances[id][to] += amount */\n      tag_128\n      jump\t// in\n    tag_150:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7014:7425  for (uint256 i = 0; i < ids.length; ++i) {... */\n      pop\n      pop\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7050:7053  ++i */\n      dup1\n      tag_151\n      swap1\n      tag_94\n      jump\t// in\n    tag_151:\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7014:7425  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_142)\n    tag_143:\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7470:7472  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7440:7487  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7464:7468  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7440:7487  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7454:7462  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7440:7487  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7474:7477  ids */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7479:7486  amounts */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7440:7487  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_152\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7568:7643  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_156\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7604:7612  operator */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7614:7618  from */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7620:7622  to */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7624:7627  ids */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7629:7636  amounts */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7638:7642  data */\n      dup8\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7568:7603  _doSafeBatchTransferAcceptanceCheck */\n      tag_157\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":7568:7643  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6535:7650  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13075:13398  function _setApprovalForAll(... */\n    tag_98:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13225:13233  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13216:13233  owner != operator */\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13216:13221  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13216:13233  owner != operator */\n      and\n      eq\n      iszero\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13208:13279  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13779:13781   */\n      0x20\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13208:13279  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13761:13782   */\n      mstore\n        /* \"#utility.yul\":13818:13820   */\n      0x29\n        /* \"#utility.yul\":13798:13816   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13791:13821   */\n      mstore\n        /* \"#utility.yul\":13857:13891   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":13837:13855   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13830:13892   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":13908:13926   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13901:13940   */\n      mstore\n        /* \"#utility.yul\":13957:13976   */\n      0x84\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13208:13279  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_55\n        /* \"#utility.yul\":13751:13982   */\n      jump\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13208:13279  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_159:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13289:13314  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13289:13307  _operatorApprovals */\n      0x01\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13289:13314  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13289:13324  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13289:13335  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13350:13391  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":10414:10455   */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13350:13391  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":10387:10405   */\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13350:13391  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":13075:13398  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5242:6189  function _safeTransferFrom(... */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5423:5439  to != address(0) */\n      dup5\n      and\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5415:5481  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_138\n      jump\t// in\n    tag_164:\n        /* \"contracts/OZ_contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5492:5508  address operator */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5556:5577  _asSingletonArray(id) */\n      tag_167\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5574:5576  id */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5556:5573  _asSingletonArray */\n      tag_168\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5556:5577  _asSingletonArray(id) */\n      jump\t// in\n    tag_167:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5533:5577  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5587:5611  uint256[] memory amounts */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5614:5639  _asSingletonArray(amount) */\n      tag_169\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5632:5638  amount */\n      dup6\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5614:5631  _asSingletonArray */\n      tag_168\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5614:5639  _asSingletonArray(amount) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5587:5639  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5721:5740  uint256 fromBalance */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5743:5756  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5743:5762  _balances[id][from] */\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5780:5801  fromBalance >= amount */\n      dup6\n      dup2\n      lt\n      iszero\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5772:5848  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_149\n      jump\t// in\n    tag_171:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5882:5891  _balances */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5882:5895  _balances[id] */\n      dup8\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5882:5901  _balances[id][from] */\n      dup14\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5904:5924  fromBalance - amount */\n      dup10\n      dup6\n      sub\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5882:5924  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5944:5961  _balances[id][to] */\n      swap1\n      dup11\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5944:5971  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5904:5924  fromBalance - amount */\n      dup9\n      swap3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5882:5891  _balances */\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5944:5971  _balances[id][to] += amount */\n      tag_173\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5904:5924  fromBalance - amount */\n      dup5\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5944:5971  _balances[id][to] += amount */\n      tag_128\n      jump\t// in\n    tag_173:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5987:6033  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":15162:15187   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":15218:15220   */\n      0x20\n        /* \"#utility.yul\":15203:15221   */\n      dup2\n      add\n        /* \"#utility.yul\":15196:15230   */\n      dup9\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5987:6033  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup12\n      and\n      swap3\n      dup13\n      dup3\n      and\n      swap3\n      swap2\n      dup9\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":15135:15153   */\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5987:6033  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6114:6182  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_177\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6145:6153  operator */\n      dup5\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6155:6159  from */\n      dup11\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6161:6163  to */\n      dup11\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6165:6167  id */\n      dup11\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6169:6175  amount */\n      dup11\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6177:6181  data */\n      dup11\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6114:6144  _doSafeTransferAcceptanceCheck */\n      tag_178\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":6114:6182  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_177:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":5242:6189  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16429:17221  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16661:16674  to.isContract */\n      dup5\n      and\n        /* \"contracts/OZ_contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"contracts/OZ_contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16657:17215  if (to.isContract()) {... */\n      tag_156\n      jumpi\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16696:16775  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16696:16739  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16696:16775  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_185\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16740:16748  operator */\n      dup10\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16750:16754  from */\n      dup10\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16756:16759  ids */\n      dup9\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16761:16768  amounts */\n      dup9\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16770:16774  data */\n      dup9\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16696:16775  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_186\n      jump\t// in\n    tag_185:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_188\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_189\n      swap2\n      dup2\n      add\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      0x01\n    tag_188:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16692:17205  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_191\n      jumpi\n      tag_195\n      tag_196\n      jump\t// in\n    tag_195:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_194\n      jumpi\n      pop\n      tag_197\n      tag_198\n      jump\t// in\n    tag_197:\n      dup1\n      tag_199\n      jumpi\n      pop\n      jump(tag_193)\n    tag_199:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17081:17087  reason */\n      dup1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17074:17088  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16692:17205  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_194:\n      pop\n    tag_193:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17128:17190  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10892:10894   */\n      0x20\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17128:17190  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10874:10895   */\n      mstore\n        /* \"#utility.yul\":10931:10933   */\n      0x34\n        /* \"#utility.yul\":10911:10929   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10904:10934   */\n      mstore\n        /* \"#utility.yul\":10970:11004   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":10950:10968   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10943:11005   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":11021:11039   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11014:11064   */\n      mstore\n        /* \"#utility.yul\":11081:11100   */\n      0x84\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17128:17190  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_55\n        /* \"#utility.yul\":10864:11106   */\n      jump\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16692:17205  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_191:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16854:16914  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16850:17007  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_204\n      jumpi\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16938:16988  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_206\n      jump\t// in\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16850:17007  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_204:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16776:17021  returns (... */\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16429:17221  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17227:17420  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_168:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17346:17362  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17360:17361  1 */\n      0x01\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17346:17362  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17293:17309  uint256[] memory */\n      0x60\n      swap2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17321:17343  uint256[] memory array */\n      0x00\n      swap2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17346:17362  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17321:17362  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17383:17390  element */\n      dup3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17372:17377  array */\n      dup2\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17378:17379  0 */\n      0x00\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17372:17380  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_210\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_210:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17372:17390  array[0] = element */\n      mstore\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17408:17413  array */\n      swap3\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":17227:17420  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15698:16423  function _doSafeTransferAcceptanceCheck(... */\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15905:15918  to.isContract */\n      dup5\n      and\n        /* \"contracts/OZ_contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"contracts/OZ_contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15901:16417  if (to.isContract()) {... */\n      tag_156\n      jumpi\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15940:16012  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15940:15978  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15940:16012  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_214\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15979:15987  operator */\n      dup10\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15989:15993  from */\n      dup10\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15995:15997  id */\n      dup9\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15999:16005  amount */\n      dup9\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16007:16011  data */\n      dup9\n      swap1\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15940:16012  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_215\n      jump\t// in\n    tag_214:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_216\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_216:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_217\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_218\n      swap2\n      dup2\n      add\n      swap1\n      tag_190\n      jump\t// in\n    tag_218:\n      0x01\n    tag_217:\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":15936:16407  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_219\n      jumpi\n      tag_195\n      tag_196\n      jump\t// in\n    tag_219:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16061:16116  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16057:16209  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_204\n      jumpi\n        /* \"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":16140:16190  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_206\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_233:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:113   */\n    tag_235:\n        /* \"#utility.yul\":63:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:947   */\n    tag_236:\n        /* \"#utility.yul\":246:251   */\n      0x00\n        /* \"#utility.yul\":299:302   */\n      dup3\n        /* \"#utility.yul\":292:296   */\n      0x1f\n        /* \"#utility.yul\":284:290   */\n      dup4\n        /* \"#utility.yul\":280:297   */\n      add\n        /* \"#utility.yul\":276:303   */\n      slt\n        /* \"#utility.yul\":266:268   */\n      tag_238\n      jumpi\n        /* \"#utility.yul\":321:326   */\n      dup1\n        /* \"#utility.yul\":314:319   */\n      dup2\n        /* \"#utility.yul\":307:327   */\n      revert\n        /* \"#utility.yul\":266:268   */\n    tag_238:\n        /* \"#utility.yul\":361:367   */\n      dup2\n        /* \"#utility.yul\":348:368   */\n      calldataload\n        /* \"#utility.yul\":387:391   */\n      0x20\n        /* \"#utility.yul\":410:453   */\n      tag_239\n        /* \"#utility.yul\":450:452   */\n      dup3\n        /* \"#utility.yul\":410:453   */\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":482:484   */\n      0x40\n        /* \"#utility.yul\":476:485   */\n      mload\n        /* \"#utility.yul\":494:525   */\n      tag_241\n        /* \"#utility.yul\":522:524   */\n      dup3\n        /* \"#utility.yul\":514:520   */\n      dup3\n        /* \"#utility.yul\":494:525   */\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":560:578   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":594:609   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":629:644   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":679:680   */\n      0x05\n        /* \"#utility.yul\":675:685   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":663:686   */\n      dup8\n      add\n        /* \"#utility.yul\":659:691   */\n      dup5\n      add\n        /* \"#utility.yul\":656:697   */\n      dup9\n      lt\n        /* \"#utility.yul\":653:655   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":714:719   */\n      dup6\n        /* \"#utility.yul\":707:712   */\n      dup7\n        /* \"#utility.yul\":700:720   */\n      revert\n        /* \"#utility.yul\":653:655   */\n    tag_243:\n        /* \"#utility.yul\":740:745   */\n      dup6\n        /* \"#utility.yul\":754:917   */\n    tag_244:\n        /* \"#utility.yul\":768:770   */\n      dup6\n        /* \"#utility.yul\":765:766   */\n      dup2\n        /* \"#utility.yul\":762:771   */\n      lt\n        /* \"#utility.yul\":754:917   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":825:842   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":813:843   */\n      dup5\n      mstore\n        /* \"#utility.yul\":863:875   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":895:907   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":786:787   */\n      0x01\n        /* \"#utility.yul\":779:788   */\n      add\n        /* \"#utility.yul\":754:917   */\n      jump(tag_244)\n    tag_246:\n      pop\n        /* \"#utility.yul\":935:941   */\n      swap1\n      swap8\n        /* \"#utility.yul\":256:947   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":952:1527   */\n    tag_247:\n        /* \"#utility.yul\":994:999   */\n      0x00\n        /* \"#utility.yul\":1047:1050   */\n      dup3\n        /* \"#utility.yul\":1040:1044   */\n      0x1f\n        /* \"#utility.yul\":1032:1038   */\n      dup4\n        /* \"#utility.yul\":1028:1045   */\n      add\n        /* \"#utility.yul\":1024:1051   */\n      slt\n        /* \"#utility.yul\":1014:1016   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":1069:1074   */\n      dup1\n        /* \"#utility.yul\":1062:1067   */\n      dup2\n        /* \"#utility.yul\":1055:1075   */\n      revert\n        /* \"#utility.yul\":1014:1016   */\n    tag_249:\n        /* \"#utility.yul\":1109:1115   */\n      dup2\n        /* \"#utility.yul\":1096:1116   */\n      calldataload\n        /* \"#utility.yul\":1135:1153   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1131:1133   */\n      dup2\n        /* \"#utility.yul\":1128:1154   */\n      gt\n        /* \"#utility.yul\":1125:1127   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":1157:1175   */\n      tag_251\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":1206:1208   */\n      0x40\n        /* \"#utility.yul\":1200:1209   */\n      mload\n        /* \"#utility.yul\":1218:1285   */\n      tag_253\n        /* \"#utility.yul\":1273:1275   */\n      0x1f\n        /* \"#utility.yul\":1254:1267   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1250:1277   */\n      and\n        /* \"#utility.yul\":1279:1283   */\n      0x20\n        /* \"#utility.yul\":1246:1284   */\n      add\n        /* \"#utility.yul\":1200:1209   */\n      dup3\n        /* \"#utility.yul\":1218:1285   */\n      tag_242\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":1309:1311   */\n      dup2\n        /* \"#utility.yul\":1301:1307   */\n      dup2\n        /* \"#utility.yul\":1294:1312   */\n      mstore\n        /* \"#utility.yul\":1355:1358   */\n      dup5\n        /* \"#utility.yul\":1348:1352   */\n      0x20\n        /* \"#utility.yul\":1343:1345   */\n      dup4\n        /* \"#utility.yul\":1335:1341   */\n      dup7\n        /* \"#utility.yul\":1331:1346   */\n      add\n        /* \"#utility.yul\":1327:1353   */\n      add\n        /* \"#utility.yul\":1324:1359   */\n      gt\n        /* \"#utility.yul\":1321:1323   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":1376:1381   */\n      dup3\n        /* \"#utility.yul\":1369:1374   */\n      dup4\n        /* \"#utility.yul\":1362:1382   */\n      revert\n        /* \"#utility.yul\":1321:1323   */\n    tag_254:\n        /* \"#utility.yul\":1444:1446   */\n      dup2\n        /* \"#utility.yul\":1437:1441   */\n      0x20\n        /* \"#utility.yul\":1429:1435   */\n      dup6\n        /* \"#utility.yul\":1425:1442   */\n      add\n        /* \"#utility.yul\":1418:1422   */\n      0x20\n        /* \"#utility.yul\":1410:1416   */\n      dup4\n        /* \"#utility.yul\":1406:1423   */\n      add\n        /* \"#utility.yul\":1393:1447   */\n      calldatacopy\n        /* \"#utility.yul\":1467:1482   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":1484:1488   */\n      0x20\n        /* \"#utility.yul\":1463:1489   */\n      add\n        /* \"#utility.yul\":1456:1497   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1471:1477   */\n      swap3\n        /* \"#utility.yul\":1004:1527   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1802   */\n    tag_46:\n        /* \"#utility.yul\":1600:1606   */\n      0x00\n        /* \"#utility.yul\":1608:1614   */\n      dup1\n        /* \"#utility.yul\":1661:1663   */\n      0x40\n        /* \"#utility.yul\":1649:1658   */\n      dup4\n        /* \"#utility.yul\":1640:1647   */\n      dup6\n        /* \"#utility.yul\":1636:1659   */\n      sub\n        /* \"#utility.yul\":1632:1664   */\n      slt\n        /* \"#utility.yul\":1629:1631   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":1682:1688   */\n      dup2\n        /* \"#utility.yul\":1674:1680   */\n      dup3\n        /* \"#utility.yul\":1667:1689   */\n      revert\n        /* \"#utility.yul\":1629:1631   */\n    tag_256:\n        /* \"#utility.yul\":1710:1739   */\n      tag_257\n        /* \"#utility.yul\":1729:1738   */\n      dup4\n        /* \"#utility.yul\":1710:1739   */\n      tag_233\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":1700:1739   */\n      swap2\n      pop\n        /* \"#utility.yul\":1758:1796   */\n      tag_258\n        /* \"#utility.yul\":1792:1794   */\n      0x20\n        /* \"#utility.yul\":1781:1790   */\n      dup5\n        /* \"#utility.yul\":1777:1795   */\n      add\n        /* \"#utility.yul\":1758:1796   */\n      tag_233\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":1748:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1619:1802   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1807:2790   */\n    tag_32:\n        /* \"#utility.yul\":1961:1967   */\n      0x00\n        /* \"#utility.yul\":1969:1975   */\n      dup1\n        /* \"#utility.yul\":1977:1983   */\n      0x00\n        /* \"#utility.yul\":1985:1991   */\n      dup1\n        /* \"#utility.yul\":1993:1999   */\n      0x00\n        /* \"#utility.yul\":2046:2049   */\n      0xa0\n        /* \"#utility.yul\":2034:2043   */\n      dup7\n        /* \"#utility.yul\":2025:2032   */\n      dup9\n        /* \"#utility.yul\":2021:2044   */\n      sub\n        /* \"#utility.yul\":2017:2050   */\n      slt\n        /* \"#utility.yul\":2014:2016   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":2068:2074   */\n      dup1\n        /* \"#utility.yul\":2060:2066   */\n      dup2\n        /* \"#utility.yul\":2053:2075   */\n      revert\n        /* \"#utility.yul\":2014:2016   */\n    tag_260:\n        /* \"#utility.yul\":2096:2125   */\n      tag_261\n        /* \"#utility.yul\":2115:2124   */\n      dup7\n        /* \"#utility.yul\":2096:2125   */\n      tag_233\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":2086:2125   */\n      swap5\n      pop\n        /* \"#utility.yul\":2144:2182   */\n      tag_262\n        /* \"#utility.yul\":2178:2180   */\n      0x20\n        /* \"#utility.yul\":2167:2176   */\n      dup8\n        /* \"#utility.yul\":2163:2181   */\n      add\n        /* \"#utility.yul\":2144:2182   */\n      tag_233\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":2134:2182   */\n      swap4\n      pop\n        /* \"#utility.yul\":2233:2235   */\n      0x40\n        /* \"#utility.yul\":2222:2231   */\n      dup7\n        /* \"#utility.yul\":2218:2236   */\n      add\n        /* \"#utility.yul\":2205:2237   */\n      calldataload\n        /* \"#utility.yul\":2256:2274   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2297:2299   */\n      dup1\n        /* \"#utility.yul\":2289:2295   */\n      dup3\n        /* \"#utility.yul\":2286:2300   */\n      gt\n        /* \"#utility.yul\":2283:2285   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":2318:2324   */\n      dup3\n        /* \"#utility.yul\":2310:2316   */\n      dup4\n        /* \"#utility.yul\":2303:2325   */\n      revert\n        /* \"#utility.yul\":2283:2285   */\n    tag_263:\n        /* \"#utility.yul\":2346:2407   */\n      tag_264\n        /* \"#utility.yul\":2399:2406   */\n      dup10\n        /* \"#utility.yul\":2390:2396   */\n      dup4\n        /* \"#utility.yul\":2379:2388   */\n      dup11\n        /* \"#utility.yul\":2375:2397   */\n      add\n        /* \"#utility.yul\":2346:2407   */\n      tag_236\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":2336:2407   */\n      swap5\n      pop\n        /* \"#utility.yul\":2460:2462   */\n      0x60\n        /* \"#utility.yul\":2449:2458   */\n      dup9\n        /* \"#utility.yul\":2445:2463   */\n      add\n        /* \"#utility.yul\":2432:2464   */\n      calldataload\n        /* \"#utility.yul\":2416:2464   */\n      swap2\n      pop\n        /* \"#utility.yul\":2489:2491   */\n      dup1\n        /* \"#utility.yul\":2479:2487   */\n      dup3\n        /* \"#utility.yul\":2476:2492   */\n      gt\n        /* \"#utility.yul\":2473:2475   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":2510:2516   */\n      dup3\n        /* \"#utility.yul\":2502:2508   */\n      dup4\n        /* \"#utility.yul\":2495:2517   */\n      revert\n        /* \"#utility.yul\":2473:2475   */\n    tag_265:\n        /* \"#utility.yul\":2538:2601   */\n      tag_266\n        /* \"#utility.yul\":2593:2600   */\n      dup10\n        /* \"#utility.yul\":2582:2590   */\n      dup4\n        /* \"#utility.yul\":2571:2580   */\n      dup11\n        /* \"#utility.yul\":2567:2591   */\n      add\n        /* \"#utility.yul\":2538:2601   */\n      tag_236\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":2528:2601   */\n      swap4\n      pop\n        /* \"#utility.yul\":2654:2657   */\n      0x80\n        /* \"#utility.yul\":2643:2652   */\n      dup9\n        /* \"#utility.yul\":2639:2658   */\n      add\n        /* \"#utility.yul\":2626:2659   */\n      calldataload\n        /* \"#utility.yul\":2610:2659   */\n      swap2\n      pop\n        /* \"#utility.yul\":2684:2686   */\n      dup1\n        /* \"#utility.yul\":2674:2682   */\n      dup3\n        /* \"#utility.yul\":2671:2687   */\n      gt\n        /* \"#utility.yul\":2668:2670   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":2705:2711   */\n      dup3\n        /* \"#utility.yul\":2697:2703   */\n      dup4\n        /* \"#utility.yul\":2690:2712   */\n      revert\n        /* \"#utility.yul\":2668:2670   */\n    tag_267:\n      pop\n        /* \"#utility.yul\":2733:2784   */\n      tag_268\n        /* \"#utility.yul\":2776:2783   */\n      dup9\n        /* \"#utility.yul\":2765:2773   */\n      dup3\n        /* \"#utility.yul\":2754:2763   */\n      dup10\n        /* \"#utility.yul\":2750:2774   */\n      add\n        /* \"#utility.yul\":2733:2784   */\n      tag_247\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":2723:2784   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2004:2790   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:3421   */\n    tag_51:\n        /* \"#utility.yul\":2899:2905   */\n      0x00\n        /* \"#utility.yul\":2907:2913   */\n      dup1\n        /* \"#utility.yul\":2915:2921   */\n      0x00\n        /* \"#utility.yul\":2923:2929   */\n      dup1\n        /* \"#utility.yul\":2931:2937   */\n      0x00\n        /* \"#utility.yul\":2984:2987   */\n      0xa0\n        /* \"#utility.yul\":2972:2981   */\n      dup7\n        /* \"#utility.yul\":2963:2970   */\n      dup9\n        /* \"#utility.yul\":2959:2982   */\n      sub\n        /* \"#utility.yul\":2955:2988   */\n      slt\n        /* \"#utility.yul\":2952:2954   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":3006:3012   */\n      dup1\n        /* \"#utility.yul\":2998:3004   */\n      dup2\n        /* \"#utility.yul\":2991:3013   */\n      revert\n        /* \"#utility.yul\":2952:2954   */\n    tag_270:\n        /* \"#utility.yul\":3034:3063   */\n      tag_271\n        /* \"#utility.yul\":3053:3062   */\n      dup7\n        /* \"#utility.yul\":3034:3063   */\n      tag_233\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":3024:3063   */\n      swap5\n      pop\n        /* \"#utility.yul\":3082:3120   */\n      tag_272\n        /* \"#utility.yul\":3116:3118   */\n      0x20\n        /* \"#utility.yul\":3105:3114   */\n      dup8\n        /* \"#utility.yul\":3101:3119   */\n      add\n        /* \"#utility.yul\":3082:3120   */\n      tag_233\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":3072:3120   */\n      swap4\n      pop\n        /* \"#utility.yul\":3167:3169   */\n      0x40\n        /* \"#utility.yul\":3156:3165   */\n      dup7\n        /* \"#utility.yul\":3152:3170   */\n      add\n        /* \"#utility.yul\":3139:3171   */\n      calldataload\n        /* \"#utility.yul\":3129:3171   */\n      swap3\n      pop\n        /* \"#utility.yul\":3218:3220   */\n      0x60\n        /* \"#utility.yul\":3207:3216   */\n      dup7\n        /* \"#utility.yul\":3203:3221   */\n      add\n        /* \"#utility.yul\":3190:3222   */\n      calldataload\n        /* \"#utility.yul\":3180:3222   */\n      swap2\n      pop\n        /* \"#utility.yul\":3273:3276   */\n      0x80\n        /* \"#utility.yul\":3262:3271   */\n      dup7\n        /* \"#utility.yul\":3258:3277   */\n      add\n        /* \"#utility.yul\":3245:3278   */\n      calldataload\n        /* \"#utility.yul\":3301:3319   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3293:3299   */\n      dup2\n        /* \"#utility.yul\":3290:3320   */\n      gt\n        /* \"#utility.yul\":3287:3289   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":3338:3344   */\n      dup2\n        /* \"#utility.yul\":3330:3336   */\n      dup3\n        /* \"#utility.yul\":3323:3345   */\n      revert\n        /* \"#utility.yul\":3287:3289   */\n    tag_273:\n        /* \"#utility.yul\":3366:3415   */\n      tag_268\n        /* \"#utility.yul\":3407:3414   */\n      dup9\n        /* \"#utility.yul\":3398:3404   */\n      dup3\n        /* \"#utility.yul\":3387:3396   */\n      dup10\n        /* \"#utility.yul\":3383:3405   */\n      add\n        /* \"#utility.yul\":3366:3415   */\n      tag_247\n      jump\t// in\n        /* \"#utility.yul\":3426:3793   */\n    tag_42:\n        /* \"#utility.yul\":3491:3497   */\n      0x00\n        /* \"#utility.yul\":3499:3505   */\n      dup1\n        /* \"#utility.yul\":3552:3554   */\n      0x40\n        /* \"#utility.yul\":3540:3549   */\n      dup4\n        /* \"#utility.yul\":3531:3538   */\n      dup6\n        /* \"#utility.yul\":3527:3550   */\n      sub\n        /* \"#utility.yul\":3523:3555   */\n      slt\n        /* \"#utility.yul\":3520:3522   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":3573:3579   */\n      dup2\n        /* \"#utility.yul\":3565:3571   */\n      dup3\n        /* \"#utility.yul\":3558:3580   */\n      revert\n        /* \"#utility.yul\":3520:3522   */\n    tag_276:\n        /* \"#utility.yul\":3601:3630   */\n      tag_277\n        /* \"#utility.yul\":3620:3629   */\n      dup4\n        /* \"#utility.yul\":3601:3630   */\n      tag_233\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":3591:3630   */\n      swap2\n      pop\n        /* \"#utility.yul\":3680:3682   */\n      0x20\n        /* \"#utility.yul\":3669:3678   */\n      dup4\n        /* \"#utility.yul\":3665:3683   */\n      add\n        /* \"#utility.yul\":3652:3684   */\n      calldataload\n        /* \"#utility.yul\":3727:3732   */\n      dup1\n        /* \"#utility.yul\":3720:3733   */\n      iszero\n        /* \"#utility.yul\":3713:3734   */\n      iszero\n        /* \"#utility.yul\":3706:3711   */\n      dup2\n        /* \"#utility.yul\":3703:3735   */\n      eq\n        /* \"#utility.yul\":3693:3695   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":3754:3760   */\n      dup2\n        /* \"#utility.yul\":3746:3752   */\n      dup3\n        /* \"#utility.yul\":3739:3761   */\n      revert\n        /* \"#utility.yul\":3693:3695   */\n    tag_278:\n        /* \"#utility.yul\":3782:3787   */\n      dup1\n        /* \"#utility.yul\":3772:3787   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3510:3793   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4062   */\n    tag_14:\n        /* \"#utility.yul\":3866:3872   */\n      0x00\n        /* \"#utility.yul\":3874:3880   */\n      dup1\n        /* \"#utility.yul\":3927:3929   */\n      0x40\n        /* \"#utility.yul\":3915:3924   */\n      dup4\n        /* \"#utility.yul\":3906:3913   */\n      dup6\n        /* \"#utility.yul\":3902:3925   */\n      sub\n        /* \"#utility.yul\":3898:3930   */\n      slt\n        /* \"#utility.yul\":3895:3897   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":3948:3954   */\n      dup2\n        /* \"#utility.yul\":3940:3946   */\n      dup3\n        /* \"#utility.yul\":3933:3955   */\n      revert\n        /* \"#utility.yul\":3895:3897   */\n    tag_280:\n        /* \"#utility.yul\":3976:4005   */\n      tag_281\n        /* \"#utility.yul\":3995:4004   */\n      dup4\n        /* \"#utility.yul\":3976:4005   */\n      tag_233\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":3966:4005   */\n      swap5\n        /* \"#utility.yul\":4052:4054   */\n      0x20\n        /* \"#utility.yul\":4037:4055   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":4024:4056   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3885:4062   */\n      jump\t// out\n        /* \"#utility.yul\":4067:5341   */\n    tag_36:\n        /* \"#utility.yul\":4185:4191   */\n      0x00\n        /* \"#utility.yul\":4193:4199   */\n      dup1\n        /* \"#utility.yul\":4246:4248   */\n      0x40\n        /* \"#utility.yul\":4234:4243   */\n      dup4\n        /* \"#utility.yul\":4225:4232   */\n      dup6\n        /* \"#utility.yul\":4221:4244   */\n      sub\n        /* \"#utility.yul\":4217:4249   */\n      slt\n        /* \"#utility.yul\":4214:4216   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":4267:4273   */\n      dup2\n        /* \"#utility.yul\":4259:4265   */\n      dup3\n        /* \"#utility.yul\":4252:4274   */\n      revert\n        /* \"#utility.yul\":4214:4216   */\n    tag_283:\n        /* \"#utility.yul\":4312:4321   */\n      dup3\n        /* \"#utility.yul\":4299:4322   */\n      calldataload\n        /* \"#utility.yul\":4341:4359   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4382:4384   */\n      dup1\n        /* \"#utility.yul\":4374:4380   */\n      dup3\n        /* \"#utility.yul\":4371:4385   */\n      gt\n        /* \"#utility.yul\":4368:4370   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":4403:4409   */\n      dup4\n        /* \"#utility.yul\":4395:4401   */\n      dup5\n        /* \"#utility.yul\":4388:4410   */\n      revert\n        /* \"#utility.yul\":4368:4370   */\n    tag_284:\n        /* \"#utility.yul\":4446:4452   */\n      dup2\n        /* \"#utility.yul\":4435:4444   */\n      dup6\n        /* \"#utility.yul\":4431:4453   */\n      add\n        /* \"#utility.yul\":4421:4453   */\n      swap2\n      pop\n        /* \"#utility.yul\":4491:4498   */\n      dup6\n        /* \"#utility.yul\":4484:4488   */\n      0x1f\n        /* \"#utility.yul\":4480:4482   */\n      dup4\n        /* \"#utility.yul\":4476:4489   */\n      add\n        /* \"#utility.yul\":4472:4499   */\n      slt\n        /* \"#utility.yul\":4462:4464   */\n      tag_285\n      jumpi\n        /* \"#utility.yul\":4518:4524   */\n      dup4\n        /* \"#utility.yul\":4510:4516   */\n      dup5\n        /* \"#utility.yul\":4503:4525   */\n      revert\n        /* \"#utility.yul\":4462:4464   */\n    tag_285:\n        /* \"#utility.yul\":4559:4561   */\n      dup2\n        /* \"#utility.yul\":4546:4562   */\n      calldataload\n        /* \"#utility.yul\":4581:4585   */\n      0x20\n        /* \"#utility.yul\":4604:4647   */\n      tag_286\n        /* \"#utility.yul\":4644:4646   */\n      dup3\n        /* \"#utility.yul\":4604:4647   */\n      tag_240\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":4676:4678   */\n      0x40\n        /* \"#utility.yul\":4670:4679   */\n      mload\n        /* \"#utility.yul\":4688:4719   */\n      tag_287\n        /* \"#utility.yul\":4716:4718   */\n      dup3\n        /* \"#utility.yul\":4708:4714   */\n      dup3\n        /* \"#utility.yul\":4688:4719   */\n      tag_242\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":4754:4772   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":4788:4803   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":4823:4834   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":4865:4866   */\n      0x05\n        /* \"#utility.yul\":4861:4871   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":4853:4872   */\n      dup8\n      add\n        /* \"#utility.yul\":4849:4877   */\n      dup5\n      add\n        /* \"#utility.yul\":4846:4887   */\n      dup12\n      lt\n        /* \"#utility.yul\":4843:4845   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":4905:4911   */\n      dup9\n        /* \"#utility.yul\":4897:4903   */\n      dup10\n        /* \"#utility.yul\":4890:4912   */\n      revert\n        /* \"#utility.yul\":4843:4845   */\n    tag_288:\n        /* \"#utility.yul\":4932:4938   */\n      dup9\n        /* \"#utility.yul\":4923:4938   */\n      swap7\n      pop\n        /* \"#utility.yul\":4947:5116   */\n    tag_289:\n        /* \"#utility.yul\":4961:4963   */\n      dup5\n        /* \"#utility.yul\":4958:4959   */\n      dup8\n        /* \"#utility.yul\":4955:4964   */\n      lt\n        /* \"#utility.yul\":4947:5116   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":5018:5041   */\n      tag_292\n        /* \"#utility.yul\":5037:5040   */\n      dup2\n        /* \"#utility.yul\":5018:5041   */\n      tag_233\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":5006:5042   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4979:4980   */\n      0x01\n        /* \"#utility.yul\":4972:4981   */\n      swap7\n      swap1\n      swap7\n      add\n      swap6\n        /* \"#utility.yul\":5062:5074   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":5094:5106   */\n      dup4\n      add\n        /* \"#utility.yul\":4947:5116   */\n      jump(tag_289)\n    tag_291:\n      pop\n        /* \"#utility.yul\":5135:5141   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":5179:5197   */\n      dup7\n      add\n        /* \"#utility.yul\":5166:5198   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5210:5226   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5207:5209   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":5244:5250   */\n      dup3\n        /* \"#utility.yul\":5236:5242   */\n      dup4\n        /* \"#utility.yul\":5229:5251   */\n      revert\n        /* \"#utility.yul\":5207:5209   */\n    tag_293:\n      pop\n        /* \"#utility.yul\":5272:5335   */\n      tag_294\n        /* \"#utility.yul\":5327:5334   */\n      dup6\n        /* \"#utility.yul\":5316:5324   */\n      dup3\n        /* \"#utility.yul\":5305:5314   */\n      dup7\n        /* \"#utility.yul\":5301:5325   */\n      add\n        /* \"#utility.yul\":5272:5335   */\n      tag_236\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":5262:5335   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4204:5341   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5346:5601   */\n    tag_20:\n        /* \"#utility.yul\":5404:5410   */\n      0x00\n        /* \"#utility.yul\":5457:5459   */\n      0x20\n        /* \"#utility.yul\":5445:5454   */\n      dup3\n        /* \"#utility.yul\":5436:5443   */\n      dup5\n        /* \"#utility.yul\":5432:5455   */\n      sub\n        /* \"#utility.yul\":5428:5460   */\n      slt\n        /* \"#utility.yul\":5425:5427   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":5478:5484   */\n      dup1\n        /* \"#utility.yul\":5470:5476   */\n      dup2\n        /* \"#utility.yul\":5463:5485   */\n      revert\n        /* \"#utility.yul\":5425:5427   */\n    tag_296:\n        /* \"#utility.yul\":5522:5531   */\n      dup2\n        /* \"#utility.yul\":5509:5532   */\n      calldataload\n        /* \"#utility.yul\":5541:5571   */\n      tag_57\n        /* \"#utility.yul\":5565:5570   */\n      dup2\n        /* \"#utility.yul\":5541:5571   */\n      tag_298\n      jump\t// in\n        /* \"#utility.yul\":5606:5865   */\n    tag_190:\n        /* \"#utility.yul\":5675:5681   */\n      0x00\n        /* \"#utility.yul\":5728:5730   */\n      0x20\n        /* \"#utility.yul\":5716:5725   */\n      dup3\n        /* \"#utility.yul\":5707:5714   */\n      dup5\n        /* \"#utility.yul\":5703:5726   */\n      sub\n        /* \"#utility.yul\":5699:5731   */\n      slt\n        /* \"#utility.yul\":5696:5698   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":5749:5755   */\n      dup1\n        /* \"#utility.yul\":5741:5747   */\n      dup2\n        /* \"#utility.yul\":5734:5756   */\n      revert\n        /* \"#utility.yul\":5696:5698   */\n    tag_300:\n        /* \"#utility.yul\":5786:5795   */\n      dup2\n        /* \"#utility.yul\":5780:5796   */\n      mload\n        /* \"#utility.yul\":5805:5835   */\n      tag_57\n        /* \"#utility.yul\":5829:5834   */\n      dup2\n        /* \"#utility.yul\":5805:5835   */\n      tag_298\n      jump\t// in\n        /* \"#utility.yul\":5870:6060   */\n    tag_26:\n        /* \"#utility.yul\":5929:5935   */\n      0x00\n        /* \"#utility.yul\":5982:5984   */\n      0x20\n        /* \"#utility.yul\":5970:5979   */\n      dup3\n        /* \"#utility.yul\":5961:5968   */\n      dup5\n        /* \"#utility.yul\":5957:5980   */\n      sub\n        /* \"#utility.yul\":5953:5985   */\n      slt\n        /* \"#utility.yul\":5950:5952   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":6003:6009   */\n      dup1\n        /* \"#utility.yul\":5995:6001   */\n      dup2\n        /* \"#utility.yul\":5988:6010   */\n      revert\n        /* \"#utility.yul\":5950:5952   */\n    tag_303:\n      pop\n        /* \"#utility.yul\":6031:6054   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":5940:6060   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6065:6502   */\n    tag_304:\n        /* \"#utility.yul\":6118:6121   */\n      0x00\n        /* \"#utility.yul\":6156:6161   */\n      dup2\n        /* \"#utility.yul\":6150:6162   */\n      mload\n        /* \"#utility.yul\":6183:6189   */\n      dup1\n        /* \"#utility.yul\":6178:6181   */\n      dup5\n        /* \"#utility.yul\":6171:6190   */\n      mstore\n        /* \"#utility.yul\":6209:6213   */\n      0x20\n        /* \"#utility.yul\":6238:6240   */\n      dup1\n        /* \"#utility.yul\":6233:6236   */\n      dup6\n        /* \"#utility.yul\":6229:6241   */\n      add\n        /* \"#utility.yul\":6222:6241   */\n      swap5\n      pop\n        /* \"#utility.yul\":6275:6277   */\n      dup1\n        /* \"#utility.yul\":6268:6273   */\n      dup5\n        /* \"#utility.yul\":6264:6278   */\n      add\n        /* \"#utility.yul\":6296:6299   */\n      dup4\n        /* \"#utility.yul\":6308:6477   */\n    tag_306:\n        /* \"#utility.yul\":6322:6328   */\n      dup4\n        /* \"#utility.yul\":6319:6320   */\n      dup2\n        /* \"#utility.yul\":6316:6329   */\n      lt\n        /* \"#utility.yul\":6308:6477   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":6383:6396   */\n      dup2\n      mload\n        /* \"#utility.yul\":6371:6397   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6417:6429   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6452:6467   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6344:6345   */\n      0x01\n        /* \"#utility.yul\":6337:6346   */\n      add\n        /* \"#utility.yul\":6308:6477   */\n      jump(tag_306)\n    tag_308:\n      pop\n        /* \"#utility.yul\":6493:6496   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6126:6502   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6507:6764   */\n    tag_309:\n        /* \"#utility.yul\":6548:6551   */\n      0x00\n        /* \"#utility.yul\":6586:6591   */\n      dup2\n        /* \"#utility.yul\":6580:6592   */\n      mload\n        /* \"#utility.yul\":6613:6619   */\n      dup1\n        /* \"#utility.yul\":6608:6611   */\n      dup5\n        /* \"#utility.yul\":6601:6620   */\n      mstore\n        /* \"#utility.yul\":6629:6692   */\n      tag_311\n        /* \"#utility.yul\":6685:6691   */\n      dup2\n        /* \"#utility.yul\":6678:6682   */\n      0x20\n        /* \"#utility.yul\":6673:6676   */\n      dup7\n        /* \"#utility.yul\":6669:6683   */\n      add\n        /* \"#utility.yul\":6662:6666   */\n      0x20\n        /* \"#utility.yul\":6655:6660   */\n      dup7\n        /* \"#utility.yul\":6651:6667   */\n      add\n        /* \"#utility.yul\":6629:6692   */\n      tag_312\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":6746:6748   */\n      0x1f\n        /* \"#utility.yul\":6725:6740   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":6721:6750   */\n      and\n        /* \"#utility.yul\":6712:6751   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":6753:6757   */\n      0x20\n        /* \"#utility.yul\":6708:6758   */\n      add\n      swap3\n        /* \"#utility.yul\":6556:6764   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6769:6954   */\n    tag_313:\n        /* \"#utility.yul\":6811:6814   */\n      0x00\n        /* \"#utility.yul\":6849:6854   */\n      dup2\n        /* \"#utility.yul\":6843:6855   */\n      mload\n        /* \"#utility.yul\":6864:6916   */\n      tag_315\n        /* \"#utility.yul\":6909:6915   */\n      dup2\n        /* \"#utility.yul\":6904:6907   */\n      dup6\n        /* \"#utility.yul\":6897:6901   */\n      0x20\n        /* \"#utility.yul\":6890:6895   */\n      dup7\n        /* \"#utility.yul\":6886:6902   */\n      add\n        /* \"#utility.yul\":6864:6916   */\n      tag_312\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":6932:6948   */\n      swap3\n      swap1\n      swap3\n      add\n      swap3\n        /* \"#utility.yul\":6819:6954   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6959:8137   */\n    tag_68:\n        /* \"#utility.yul\":7135:7138   */\n      0x00\n        /* \"#utility.yul\":7164:7167   */\n      dup1\n        /* \"#utility.yul\":7199:7205   */\n      dup5\n        /* \"#utility.yul\":7193:7206   */\n      sload\n        /* \"#utility.yul\":7229:7232   */\n      dup3\n        /* \"#utility.yul\":7251:7252   */\n      0x01\n        /* \"#utility.yul\":7279:7288   */\n      dup3\n        /* \"#utility.yul\":7275:7277   */\n      dup2\n        /* \"#utility.yul\":7271:7289   */\n      shr\n        /* \"#utility.yul\":7261:7289   */\n      swap2\n      pop\n        /* \"#utility.yul\":7339:7341   */\n      dup1\n        /* \"#utility.yul\":7328:7337   */\n      dup4\n        /* \"#utility.yul\":7324:7342   */\n      and\n        /* \"#utility.yul\":7361:7379   */\n      dup1\n        /* \"#utility.yul\":7351:7353   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":7405:7409   */\n      0x7f\n        /* \"#utility.yul\":7397:7403   */\n      dup4\n        /* \"#utility.yul\":7393:7410   */\n      and\n        /* \"#utility.yul\":7383:7410   */\n      swap3\n      pop\n        /* \"#utility.yul\":7351:7353   */\n    tag_317:\n        /* \"#utility.yul\":7431:7433   */\n      0x20\n        /* \"#utility.yul\":7479:7481   */\n      dup1\n        /* \"#utility.yul\":7471:7477   */\n      dup5\n        /* \"#utility.yul\":7468:7482   */\n      lt\n        /* \"#utility.yul\":7448:7466   */\n      dup3\n        /* \"#utility.yul\":7445:7483   */\n      eq\n        /* \"#utility.yul\":7442:7444   */\n      iszero\n      tag_318\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":7506:7539   */\n      dup8\n      mstore\n        /* \"#utility.yul\":7562:7566   */\n      0x22\n        /* \"#utility.yul\":7559:7560   */\n      0x04\n        /* \"#utility.yul\":7552:7567   */\n      mstore\n        /* \"#utility.yul\":7592:7596   */\n      0x24\n        /* \"#utility.yul\":7513:7516   */\n      dup8\n        /* \"#utility.yul\":7580:7597   */\n      revert\n        /* \"#utility.yul\":7442:7444   */\n    tag_318:\n        /* \"#utility.yul\":7623:7641   */\n      dup2\n        /* \"#utility.yul\":7650:7754   */\n      dup1\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":7768:7769   */\n      0x01\n        /* \"#utility.yul\":7763:8085   */\n      dup2\n      eq\n      tag_321\n      jumpi\n        /* \"#utility.yul\":7616:8085   */\n      jump(tag_319)\n        /* \"#utility.yul\":7650:7754   */\n    tag_320:\n      not(0xff)\n        /* \"#utility.yul\":7683:7707   */\n      dup7\n      and\n        /* \"#utility.yul\":7671:7708   */\n      dup10\n      mstore\n        /* \"#utility.yul\":7728:7744   */\n      dup5\n      dup10\n      add\n      swap7\n      pop\n        /* \"#utility.yul\":7650:7754   */\n      jump(tag_319)\n        /* \"#utility.yul\":7763:8085   */\n    tag_321:\n        /* \"#utility.yul\":15476:15480   */\n      0x00\n        /* \"#utility.yul\":15495:15512   */\n      dup12\n      dup2\n      mstore\n        /* \"#utility.yul\":15545:15549   */\n      0x20\n        /* \"#utility.yul\":15529:15550   */\n      swap1\n      keccak256\n        /* \"#utility.yul\":7858:7861   */\n      dup9\n        /* \"#utility.yul\":7874:8039   */\n    tag_324:\n        /* \"#utility.yul\":7888:7894   */\n      dup7\n        /* \"#utility.yul\":7885:7886   */\n      dup2\n        /* \"#utility.yul\":7882:7895   */\n      lt\n        /* \"#utility.yul\":7874:8039   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":7966:7980   */\n      dup2\n      sload\n        /* \"#utility.yul\":7953:7964   */\n      dup12\n      dup3\n      add\n        /* \"#utility.yul\":7946:7981   */\n      mstore\n        /* \"#utility.yul\":8009:8025   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":7903:7913   */\n      dup4\n      add\n        /* \"#utility.yul\":7874:8039   */\n      jump(tag_324)\n    tag_326:\n        /* \"#utility.yul\":7878:7881   */\n      pop\n      pop\n        /* \"#utility.yul\":8068:8074   */\n      dup5\n        /* \"#utility.yul\":8063:8066   */\n      dup10\n        /* \"#utility.yul\":8059:8075   */\n      add\n        /* \"#utility.yul\":8052:8075   */\n      swap7\n      pop\n        /* \"#utility.yul\":7616:8085   */\n    tag_319:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8101:8131   */\n      tag_327\n        /* \"#utility.yul\":8127:8130   */\n      dup2\n        /* \"#utility.yul\":8119:8125   */\n      dup6\n        /* \"#utility.yul\":8101:8131   */\n      tag_313\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":8094:8131   */\n      swap6\n        /* \"#utility.yul\":7143:8137   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8142:8968   */\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8539:8554   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":8521:8555   */\n      dup3\n      mstore\n        /* \"#utility.yul\":8591:8606   */\n      dup6\n      and\n        /* \"#utility.yul\":8586:8588   */\n      0x20\n        /* \"#utility.yul\":8571:8589   */\n      dup3\n      add\n        /* \"#utility.yul\":8564:8607   */\n      mstore\n        /* \"#utility.yul\":8501:8504   */\n      0xa0\n        /* \"#utility.yul\":8638:8640   */\n      0x40\n        /* \"#utility.yul\":8623:8641   */\n      dup3\n      add\n        /* \"#utility.yul\":8616:8647   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8464:8468   */\n      0x00\n      swap1\n        /* \"#utility.yul\":8670:8727   */\n      tag_329\n      swap1\n        /* \"#utility.yul\":8707:8726   */\n      dup4\n      add\n        /* \"#utility.yul\":8699:8705   */\n      dup7\n        /* \"#utility.yul\":8670:8727   */\n      tag_304\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":8775:8784   */\n      dup3\n        /* \"#utility.yul\":8767:8773   */\n      dup2\n        /* \"#utility.yul\":8763:8785   */\n      sub\n        /* \"#utility.yul\":8758:8760   */\n      0x60\n        /* \"#utility.yul\":8747:8756   */\n      dup5\n        /* \"#utility.yul\":8743:8761   */\n      add\n        /* \"#utility.yul\":8736:8786   */\n      mstore\n        /* \"#utility.yul\":8809:8853   */\n      tag_330\n        /* \"#utility.yul\":8846:8852   */\n      dup2\n        /* \"#utility.yul\":8838:8844   */\n      dup7\n        /* \"#utility.yul\":8809:8853   */\n      tag_304\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":8795:8853   */\n      swap1\n      pop\n        /* \"#utility.yul\":8902:8911   */\n      dup3\n        /* \"#utility.yul\":8894:8900   */\n      dup2\n        /* \"#utility.yul\":8890:8912   */\n      sub\n        /* \"#utility.yul\":8884:8887   */\n      0x80\n        /* \"#utility.yul\":8873:8882   */\n      dup5\n        /* \"#utility.yul\":8869:8888   */\n      add\n        /* \"#utility.yul\":8862:8913   */\n      mstore\n        /* \"#utility.yul\":8930:8962   */\n      tag_331\n        /* \"#utility.yul\":8955:8961   */\n      dup2\n        /* \"#utility.yul\":8947:8953   */\n      dup6\n        /* \"#utility.yul\":8930:8962   */\n      tag_309\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":8922:8962   */\n      swap9\n        /* \"#utility.yul\":8473:8968   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8973:9533   */\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9270:9285   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":9252:9286   */\n      dup3\n      mstore\n        /* \"#utility.yul\":9322:9337   */\n      dup6\n      and\n        /* \"#utility.yul\":9317:9319   */\n      0x20\n        /* \"#utility.yul\":9302:9320   */\n      dup3\n      add\n        /* \"#utility.yul\":9295:9338   */\n      mstore\n        /* \"#utility.yul\":9369:9371   */\n      0x40\n        /* \"#utility.yul\":9354:9372   */\n      dup2\n      add\n        /* \"#utility.yul\":9347:9381   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":9412:9414   */\n      0x60\n        /* \"#utility.yul\":9397:9415   */\n      dup2\n      add\n        /* \"#utility.yul\":9390:9424   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":9232:9235   */\n      0xa0\n        /* \"#utility.yul\":9455:9458   */\n      0x80\n        /* \"#utility.yul\":9440:9459   */\n      dup3\n      add\n        /* \"#utility.yul\":9433:9465   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9195:9199   */\n      0x00\n      swap1\n        /* \"#utility.yul\":9482:9527   */\n      tag_333\n      swap1\n        /* \"#utility.yul\":9507:9526   */\n      dup4\n      add\n        /* \"#utility.yul\":9499:9505   */\n      dup5\n        /* \"#utility.yul\":9482:9527   */\n      tag_309\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":9474:9527   */\n      swap8\n        /* \"#utility.yul\":9204:9533   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9538:9799   */\n    tag_39:\n        /* \"#utility.yul\":9717:9719   */\n      0x20\n        /* \"#utility.yul\":9706:9715   */\n      dup2\n        /* \"#utility.yul\":9699:9720   */\n      mstore\n        /* \"#utility.yul\":9680:9684   */\n      0x00\n        /* \"#utility.yul\":9737:9793   */\n      tag_57\n        /* \"#utility.yul\":9789:9791   */\n      0x20\n        /* \"#utility.yul\":9778:9787   */\n      dup4\n        /* \"#utility.yul\":9774:9792   */\n      add\n        /* \"#utility.yul\":9766:9772   */\n      dup5\n        /* \"#utility.yul\":9737:9793   */\n      tag_304\n      jump\t// in\n        /* \"#utility.yul\":9804:10269   */\n    tag_153:\n        /* \"#utility.yul\":10061:10063   */\n      0x40\n        /* \"#utility.yul\":10050:10059   */\n      dup2\n        /* \"#utility.yul\":10043:10064   */\n      mstore\n        /* \"#utility.yul\":10024:10028   */\n      0x00\n        /* \"#utility.yul\":10087:10143   */\n      tag_337\n        /* \"#utility.yul\":10139:10141   */\n      0x40\n        /* \"#utility.yul\":10128:10137   */\n      dup4\n        /* \"#utility.yul\":10124:10142   */\n      add\n        /* \"#utility.yul\":10116:10122   */\n      dup6\n        /* \"#utility.yul\":10087:10143   */\n      tag_304\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":10191:10200   */\n      dup3\n        /* \"#utility.yul\":10183:10189   */\n      dup2\n        /* \"#utility.yul\":10179:10201   */\n      sub\n        /* \"#utility.yul\":10174:10176   */\n      0x20\n        /* \"#utility.yul\":10163:10172   */\n      dup5\n        /* \"#utility.yul\":10159:10177   */\n      add\n        /* \"#utility.yul\":10152:10202   */\n      mstore\n        /* \"#utility.yul\":10219:10263   */\n      tag_327\n        /* \"#utility.yul\":10256:10262   */\n      dup2\n        /* \"#utility.yul\":10248:10254   */\n      dup6\n        /* \"#utility.yul\":10219:10263   */\n      tag_304\n      jump\t// in\n        /* \"#utility.yul\":10466:10685   */\n    tag_29:\n        /* \"#utility.yul\":10615:10617   */\n      0x20\n        /* \"#utility.yul\":10604:10613   */\n      dup2\n        /* \"#utility.yul\":10597:10618   */\n      mstore\n        /* \"#utility.yul\":10578:10582   */\n      0x00\n        /* \"#utility.yul\":10635:10679   */\n      tag_57\n        /* \"#utility.yul\":10675:10677   */\n      0x20\n        /* \"#utility.yul\":10664:10673   */\n      dup4\n        /* \"#utility.yul\":10660:10678   */\n      add\n        /* \"#utility.yul\":10652:10658   */\n      dup5\n        /* \"#utility.yul\":10635:10679   */\n      tag_309\n      jump\t// in\n        /* \"#utility.yul\":11111:11515   */\n    tag_206:\n        /* \"#utility.yul\":11313:11315   */\n      0x20\n        /* \"#utility.yul\":11295:11316   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11352:11354   */\n      0x28\n        /* \"#utility.yul\":11332:11350   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11325:11355   */\n      mstore\n        /* \"#utility.yul\":11391:11425   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":11386:11388   */\n      0x40\n        /* \"#utility.yul\":11371:11389   */\n      dup3\n      add\n        /* \"#utility.yul\":11364:11426   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":11457:11459   */\n      0x60\n        /* \"#utility.yul\":11442:11460   */\n      dup3\n      add\n        /* \"#utility.yul\":11435:11473   */\n      mstore\n        /* \"#utility.yul\":11505:11508   */\n      0x80\n        /* \"#utility.yul\":11490:11509   */\n      add\n      swap1\n        /* \"#utility.yul\":11285:11515   */\n      jump\t// out\n        /* \"#utility.yul\":12341:12742   */\n    tag_138:\n        /* \"#utility.yul\":12543:12545   */\n      0x20\n        /* \"#utility.yul\":12525:12546   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12582:12584   */\n      0x25\n        /* \"#utility.yul\":12562:12580   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12555:12585   */\n      mstore\n        /* \"#utility.yul\":12621:12655   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":12616:12618   */\n      0x40\n        /* \"#utility.yul\":12601:12619   */\n      dup3\n      add\n        /* \"#utility.yul\":12594:12656   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":12687:12689   */\n      0x60\n        /* \"#utility.yul\":12672:12690   */\n      dup3\n      add\n        /* \"#utility.yul\":12665:12700   */\n      mstore\n        /* \"#utility.yul\":12732:12735   */\n      0x80\n        /* \"#utility.yul\":12717:12736   */\n      add\n      swap1\n        /* \"#utility.yul\":12515:12742   */\n      jump\t// out\n        /* \"#utility.yul\":13166:13572   */\n    tag_149:\n        /* \"#utility.yul\":13368:13370   */\n      0x20\n        /* \"#utility.yul\":13350:13371   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13407:13409   */\n      0x2a\n        /* \"#utility.yul\":13387:13405   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13380:13410   */\n      mstore\n        /* \"#utility.yul\":13446:13480   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":13441:13443   */\n      0x40\n        /* \"#utility.yul\":13426:13444   */\n      dup3\n      add\n        /* \"#utility.yul\":13419:13481   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":13512:13514   */\n      0x60\n        /* \"#utility.yul\":13497:13515   */\n      dup3\n      add\n        /* \"#utility.yul\":13490:13530   */\n      mstore\n        /* \"#utility.yul\":13562:13565   */\n      0x80\n        /* \"#utility.yul\":13547:13566   */\n      add\n      swap1\n        /* \"#utility.yul\":13340:13572   */\n      jump\t// out\n        /* \"#utility.yul\":15241:15424   */\n    tag_240:\n        /* \"#utility.yul\":15301:15305   */\n      0x00\n        /* \"#utility.yul\":15334:15352   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15326:15332   */\n      dup3\n        /* \"#utility.yul\":15323:15353   */\n      gt\n        /* \"#utility.yul\":15320:15322   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":15356:15374   */\n      tag_356\n      tag_252\n      jump\t// in\n    tag_356:\n      pop\n        /* \"#utility.yul\":15401:15402   */\n      0x05\n        /* \"#utility.yul\":15397:15411   */\n      shl\n        /* \"#utility.yul\":15413:15417   */\n      0x20\n        /* \"#utility.yul\":15393:15418   */\n      add\n      swap1\n        /* \"#utility.yul\":15310:15424   */\n      jump\t// out\n        /* \"#utility.yul\":15561:15689   */\n    tag_128:\n        /* \"#utility.yul\":15601:15604   */\n      0x00\n        /* \"#utility.yul\":15632:15633   */\n      dup3\n        /* \"#utility.yul\":15628:15634   */\n      not\n        /* \"#utility.yul\":15625:15626   */\n      dup3\n        /* \"#utility.yul\":15622:15635   */\n      gt\n        /* \"#utility.yul\":15619:15621   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":15638:15656   */\n      tag_360\n      tag_361\n      jump\t// in\n    tag_360:\n      pop\n        /* \"#utility.yul\":15674:15683   */\n      add\n      swap1\n        /* \"#utility.yul\":15609:15689   */\n      jump\t// out\n        /* \"#utility.yul\":15694:15814   */\n    tag_118:\n        /* \"#utility.yul\":15734:15735   */\n      0x00\n        /* \"#utility.yul\":15760:15761   */\n      dup3\n        /* \"#utility.yul\":15750:15752   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":15765:15783   */\n      tag_364\n      tag_365\n      jump\t// in\n    tag_364:\n      pop\n        /* \"#utility.yul\":15799:15808   */\n      div\n      swap1\n        /* \"#utility.yul\":15740:15814   */\n      jump\t// out\n        /* \"#utility.yul\":15819:15944   */\n    tag_124:\n        /* \"#utility.yul\":15859:15863   */\n      0x00\n        /* \"#utility.yul\":15887:15888   */\n      dup3\n        /* \"#utility.yul\":15884:15885   */\n      dup3\n        /* \"#utility.yul\":15881:15889   */\n      lt\n        /* \"#utility.yul\":15878:15880   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":15892:15910   */\n      tag_368\n      tag_361\n      jump\t// in\n    tag_368:\n      pop\n        /* \"#utility.yul\":15929:15938   */\n      sub\n      swap1\n        /* \"#utility.yul\":15868:15944   */\n      jump\t// out\n        /* \"#utility.yul\":15949:16207   */\n    tag_312:\n        /* \"#utility.yul\":16021:16022   */\n      0x00\n        /* \"#utility.yul\":16031:16144   */\n    tag_370:\n        /* \"#utility.yul\":16045:16051   */\n      dup4\n        /* \"#utility.yul\":16042:16043   */\n      dup2\n        /* \"#utility.yul\":16039:16052   */\n      lt\n        /* \"#utility.yul\":16031:16144   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":16121:16132   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":16115:16133   */\n      mload\n        /* \"#utility.yul\":16102:16113   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":16095:16134   */\n      mstore\n        /* \"#utility.yul\":16067:16069   */\n      0x20\n        /* \"#utility.yul\":16060:16070   */\n      add\n        /* \"#utility.yul\":16031:16144   */\n      jump(tag_370)\n    tag_372:\n        /* \"#utility.yul\":16162:16168   */\n      dup4\n        /* \"#utility.yul\":16159:16160   */\n      dup2\n        /* \"#utility.yul\":16156:16169   */\n      gt\n        /* \"#utility.yul\":16153:16155   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":16197:16198   */\n      0x00\n        /* \"#utility.yul\":16188:16194   */\n      dup5\n        /* \"#utility.yul\":16183:16186   */\n      dup5\n        /* \"#utility.yul\":16179:16195   */\n      add\n        /* \"#utility.yul\":16172:16199   */\n      mstore\n        /* \"#utility.yul\":16153:16155   */\n    tag_373:\n      pop\n        /* \"#utility.yul\":16002:16207   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16212:16461   */\n    tag_242:\n        /* \"#utility.yul\":16322:16324   */\n      0x1f\n        /* \"#utility.yul\":16303:16316   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":16299:16326   */\n      and\n        /* \"#utility.yul\":16287:16327   */\n      dup2\n      add\n        /* \"#utility.yul\":16357:16375   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16342:16376   */\n      dup2\n      gt\n        /* \"#utility.yul\":16378:16400   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":16339:16401   */\n      or\n        /* \"#utility.yul\":16336:16338   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":16404:16422   */\n      tag_376\n      tag_252\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":16440:16442   */\n      0x40\n        /* \"#utility.yul\":16433:16455   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":16259:16461   */\n      jump\t// out\n        /* \"#utility.yul\":16466:16601   */\n    tag_94:\n        /* \"#utility.yul\":16505:16508   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":16526:16543   */\n      dup3\n      eq\n        /* \"#utility.yul\":16523:16525   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":16546:16564   */\n      tag_379\n      tag_361\n      jump\t// in\n    tag_379:\n      pop\n        /* \"#utility.yul\":16593:16594   */\n      0x01\n        /* \"#utility.yul\":16582:16595   */\n      add\n      swap1\n        /* \"#utility.yul\":16513:16601   */\n      jump\t// out\n        /* \"#utility.yul\":16606:16718   */\n    tag_126:\n        /* \"#utility.yul\":16638:16639   */\n      0x00\n        /* \"#utility.yul\":16664:16665   */\n      dup3\n        /* \"#utility.yul\":16654:16656   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":16669:16687   */\n      tag_382\n      tag_365\n      jump\t// in\n    tag_382:\n      pop\n        /* \"#utility.yul\":16703:16712   */\n      mod\n      swap1\n        /* \"#utility.yul\":16644:16718   */\n      jump\t// out\n        /* \"#utility.yul\":16723:16850   */\n    tag_361:\n        /* \"#utility.yul\":16784:16794   */\n      0x4e487b71\n        /* \"#utility.yul\":16779:16782   */\n      0xe0\n        /* \"#utility.yul\":16775:16795   */\n      shl\n        /* \"#utility.yul\":16772:16773   */\n      0x00\n        /* \"#utility.yul\":16765:16796   */\n      mstore\n        /* \"#utility.yul\":16815:16819   */\n      0x11\n        /* \"#utility.yul\":16812:16813   */\n      0x04\n        /* \"#utility.yul\":16805:16820   */\n      mstore\n        /* \"#utility.yul\":16839:16843   */\n      0x24\n        /* \"#utility.yul\":16836:16837   */\n      0x00\n        /* \"#utility.yul\":16829:16844   */\n      revert\n        /* \"#utility.yul\":16855:16982   */\n    tag_365:\n        /* \"#utility.yul\":16916:16926   */\n      0x4e487b71\n        /* \"#utility.yul\":16911:16914   */\n      0xe0\n        /* \"#utility.yul\":16907:16927   */\n      shl\n        /* \"#utility.yul\":16904:16905   */\n      0x00\n        /* \"#utility.yul\":16897:16928   */\n      mstore\n        /* \"#utility.yul\":16947:16951   */\n      0x12\n        /* \"#utility.yul\":16944:16945   */\n      0x04\n        /* \"#utility.yul\":16937:16952   */\n      mstore\n        /* \"#utility.yul\":16971:16975   */\n      0x24\n        /* \"#utility.yul\":16968:16969   */\n      0x00\n        /* \"#utility.yul\":16961:16976   */\n      revert\n        /* \"#utility.yul\":16987:17114   */\n    tag_252:\n        /* \"#utility.yul\":17048:17058   */\n      0x4e487b71\n        /* \"#utility.yul\":17043:17046   */\n      0xe0\n        /* \"#utility.yul\":17039:17059   */\n      shl\n        /* \"#utility.yul\":17036:17037   */\n      0x00\n        /* \"#utility.yul\":17029:17060   */\n      mstore\n        /* \"#utility.yul\":17079:17083   */\n      0x41\n        /* \"#utility.yul\":17076:17077   */\n      0x04\n        /* \"#utility.yul\":17069:17084   */\n      mstore\n        /* \"#utility.yul\":17103:17107   */\n      0x24\n        /* \"#utility.yul\":17100:17101   */\n      0x00\n        /* \"#utility.yul\":17093:17108   */\n      revert\n        /* \"#utility.yul\":17119:17304   */\n    tag_196:\n        /* \"#utility.yul\":17154:17157   */\n      0x00\n        /* \"#utility.yul\":17196:17197   */\n      0x03\n        /* \"#utility.yul\":17178:17194   */\n      returndatasize\n        /* \"#utility.yul\":17175:17198   */\n      gt\n        /* \"#utility.yul\":17172:17174   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":17246:17247   */\n      0x04\n        /* \"#utility.yul\":17241:17244   */\n      dup2\n        /* \"#utility.yul\":17236:17239   */\n      dup3\n        /* \"#utility.yul\":17221:17248   */\n      returndatacopy\n        /* \"#utility.yul\":17277:17287   */\n      mload\n        /* \"#utility.yul\":17272:17275   */\n      0xe0\n        /* \"#utility.yul\":17268:17288   */\n      shr\n        /* \"#utility.yul\":17172:17174   */\n    tag_387:\n        /* \"#utility.yul\":17162:17304   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17309:17980   */\n    tag_198:\n        /* \"#utility.yul\":17348:17351   */\n      0x00\n        /* \"#utility.yul\":17390:17394   */\n      0x44\n        /* \"#utility.yul\":17372:17388   */\n      returndatasize\n        /* \"#utility.yul\":17369:17395   */\n      lt\n        /* \"#utility.yul\":17366:17368   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":17356:17980   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17366:17368   */\n    tag_389:\n        /* \"#utility.yul\":17432:17434   */\n      0x40\n        /* \"#utility.yul\":17426:17435   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":17497:17513   */\n      returndatasize\n        /* \"#utility.yul\":17493:17518   */\n      dup2\n      add\n        /* \"#utility.yul\":17490:17491   */\n      0x04\n        /* \"#utility.yul\":17426:17435   */\n      dup4\n        /* \"#utility.yul\":17469:17519   */\n      returndatacopy\n        /* \"#utility.yul\":17548:17552   */\n      dup2\n        /* \"#utility.yul\":17542:17553   */\n      mload\n        /* \"#utility.yul\":17572:17588   */\n      returndatasize\n        /* \"#utility.yul\":17607:17625   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17678:17680   */\n      dup2\n        /* \"#utility.yul\":17671:17675   */\n      0x24\n        /* \"#utility.yul\":17663:17669   */\n      dup5\n        /* \"#utility.yul\":17659:17676   */\n      add\n        /* \"#utility.yul\":17656:17681   */\n      gt\n        /* \"#utility.yul\":17651:17653   */\n      dup2\n        /* \"#utility.yul\":17643:17649   */\n      dup5\n        /* \"#utility.yul\":17640:17654   */\n      gt\n        /* \"#utility.yul\":17637:17682   */\n      or\n        /* \"#utility.yul\":17634:17636   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":17685:17690   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17356:17980   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17634:17636   */\n    tag_390:\n        /* \"#utility.yul\":17722:17728   */\n      dup3\n        /* \"#utility.yul\":17716:17720   */\n      dup6\n        /* \"#utility.yul\":17712:17729   */\n      add\n        /* \"#utility.yul\":17701:17729   */\n      swap2\n      pop\n        /* \"#utility.yul\":17758:17761   */\n      dup2\n        /* \"#utility.yul\":17752:17762   */\n      mload\n        /* \"#utility.yul\":17785:17787   */\n      dup2\n        /* \"#utility.yul\":17777:17783   */\n      dup2\n        /* \"#utility.yul\":17774:17788   */\n      gt\n        /* \"#utility.yul\":17771:17773   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":17791:17796   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17356:17980   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17771:17773   */\n    tag_391:\n        /* \"#utility.yul\":17875:17877   */\n      dup5\n        /* \"#utility.yul\":17856:17872   */\n      returndatasize\n        /* \"#utility.yul\":17850:17854   */\n      dup8\n        /* \"#utility.yul\":17846:17873   */\n      add\n        /* \"#utility.yul\":17842:17878   */\n      add\n        /* \"#utility.yul\":17835:17839   */\n      0x20\n        /* \"#utility.yul\":17826:17832   */\n      dup3\n        /* \"#utility.yul\":17821:17824   */\n      dup6\n        /* \"#utility.yul\":17817:17833   */\n      add\n        /* \"#utility.yul\":17813:17840   */\n      add\n        /* \"#utility.yul\":17810:17879   */\n      gt\n        /* \"#utility.yul\":17807:17809   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":17882:17887   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17356:17980   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17807:17809   */\n    tag_392:\n        /* \"#utility.yul\":17898:17955   */\n      tag_393\n        /* \"#utility.yul\":17949:17953   */\n      0x20\n        /* \"#utility.yul\":17940:17946   */\n      dup3\n        /* \"#utility.yul\":17932:17938   */\n      dup7\n        /* \"#utility.yul\":17928:17947   */\n      add\n        /* \"#utility.yul\":17924:17954   */\n      add\n        /* \"#utility.yul\":17918:17922   */\n      dup8\n        /* \"#utility.yul\":17898:17955   */\n      tag_242\n      jump\t// in\n    tag_393:\n      pop\n        /* \"#utility.yul\":17971:17974   */\n      swap1\n      swap6\n        /* \"#utility.yul\":17356:17980   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17985:18116   */\n    tag_298:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":18059:18091   */\n      dup2\n      and\n        /* \"#utility.yul\":18049:18092   */\n      dup2\n      eq\n        /* \"#utility.yul\":18039:18041   */\n      tag_395\n      jumpi\n        /* \"#utility.yul\":18106:18107   */\n      0x00\n        /* \"#utility.yul\":18103:18104   */\n      dup1\n        /* \"#utility.yul\":18096:18108   */\n      revert\n        /* \"#utility.yul\":18039:18041   */\n    tag_395:\n        /* \"#utility.yul\":18029:18116   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c018ce7ecf67a6699bbc729cef52370062e4a42c0d3c81aee2807cca19928c0b64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1670:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "105:1046:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "115:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "125:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "119:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "172:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "181:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "189:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "174:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "174:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "174:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "147:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "156:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "143:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "143:23:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "168:2:9"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "139:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "139:32:9"
															},
															"nodeType": "YulIf",
															"src": "136:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "207:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "227:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "221:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:16:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "211:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "246:28:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:9",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "268:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "260:10:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "272:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "256:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "256:18:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "250:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "301:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "310:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "318:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "303:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "303:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "303:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "289:6:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "297:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "286:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "286:14:9"
															},
															"nodeType": "YulIf",
															"src": "283:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "336:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "350:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "361:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "346:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "346:22:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "340:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "416:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "425:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "433:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "418:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "418:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "418:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "395:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "399:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "391:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "406:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "387:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "387:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "380:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "380:35:9"
															},
															"nodeType": "YulIf",
															"src": "377:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "451:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "467:2:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "461:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "461:9:9"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "455:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "493:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "495:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "485:2:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "489:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "482:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "482:10:9"
															},
															"nodeType": "YulIf",
															"src": "479:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "524:17:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "538:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "534:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:7:9"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "528:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "550:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "570:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "564:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "564:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "554:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "582:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "604:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "628:2:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "632:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "624:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "624:13:9"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "639:2:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "620:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "620:22:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "644:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "616:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "616:31:9"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "649:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "612:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "612:40:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "600:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "600:53:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "586:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "712:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "714:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "714:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "714:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "671:10:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "683:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "668:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "691:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "703:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "688:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "688:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "665:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:46:9"
															},
															"nodeType": "YulIf",
															"src": "662:2:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "750:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "754:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "743:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "743:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "781:6:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "789:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "774:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "774:18:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "838:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "847:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "855:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "840:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "840:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "840:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "815:2:9"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "819:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "811:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "811:11:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "824:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "807:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "807:20:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "829:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "804:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "804:33:9"
															},
															"nodeType": "YulIf",
															"src": "801:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "873:15:9",
															"value": {
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "882:6:9"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "877:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "943:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "972:6:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "980:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "968:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "968:14:9"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "964:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "964:23:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1003:2:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1007:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "999:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "999:10:9"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1011:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "995:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "995:19:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "989:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "989:26:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "957:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "957:59:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "957:59:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "908:1:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "911:2:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "905:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "905:9:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "915:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "917:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "926:1:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "929:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "922:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "922:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "917:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "901:3:9",
																"statements": []
															},
															"src": "897:129:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1056:64:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1085:6:9"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1093:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1081:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1081:15:9"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1098:2:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1077:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1077:24:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1103:6:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:40:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:40:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1041:1:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1044:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1038:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1038:9:9"
															},
															"nodeType": "YulIf",
															"src": "1035:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1129:16:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1139:6:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1129:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "71:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "82:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "94:6:9",
														"type": ""
													}
												],
												"src": "14:1137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1211:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1221:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1235:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1238:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1231:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1221:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1252:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1282:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1278:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1278:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1256:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1329:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1331:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1345:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1353:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1341:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1341:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1331:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1309:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1302:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1302:26:9"
															},
															"nodeType": "YulIf",
															"src": "1299:2:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1419:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1440:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1447:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1452:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1443:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1443:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1433:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1433:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1433:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1484:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1487:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1477:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1477:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1477:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1512:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1515:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1505:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1505:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1505:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1375:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1406:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1395:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1395:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1372:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1372:38:9"
															},
															"nodeType": "YulIf",
															"src": "1369:2:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1191:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1200:6:9",
														"type": ""
													}
												],
												"src": "1156:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1573:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1590:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1597:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1602:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1593:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1593:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1583:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1583:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1630:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1633:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1623:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1623:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1654:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1657:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1647:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1541:127:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(value0, value0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), value0)\n        }\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200180038038062001800833981016040819052620000349162000105565b6200003f8162000046565b506200022e565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001db565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b6000602080838503121562000118578182fd5b82516001600160401b03808211156200012f578384fd5b818501915085601f83011262000143578384fd5b81518181111562000158576200015862000218565b604051601f8201601f19908116603f0116810190838211818310171562000183576200018362000218565b8160405282815288868487010111156200019b578687fd5b8693505b82841015620001be57848401860151818501870152928501926200019f565b82841115620001cf57868684830101525b98975050505050505050565b600181811c90821680620001f057607f821691505b602082108114156200021257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6115c2806200023e6000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610f6b565b61018c565b6040519081526020015b60405180910390f35b6100c56100c036600461105f565b610225565b60405190151581526020016100a9565b6100e86100e3366004611097565b610277565b6040516100a991906112b2565b610108610103366004610e28565b6102ab565b005b61011d610118366004610f94565b610342565b6040516100a9919061127a565b610108610138366004610f31565b6104a4565b6100c561014b366004610df6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004610ece565b6104b3565b60006001600160a01b0383166101fc5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b6000828152602081815260408083206001600160a01b03871684529091529020545b9392505050565b60006001600160e01b03198216636cdb3d1360e11b148061025657506001600160e01b031982166303a24d0760e21b145b8061027157506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060026102848361053a565b604051602001610295929190611131565b6040516020818303038152906040529050919050565b6001600160a01b0385163314806102c757506102c7853361014b565b61032e5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f3565b61033b858585858561065c565b5050505050565b606081518351146103a75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f3565b6000835167ffffffffffffffff8111156103d157634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156103fa578160200160208202803683370190505b50905060005b845181101561049c5761046185828151811061042c57634e487b7160e01b600052603260045260246000fd5b602002602001015185838151811061045457634e487b7160e01b600052603260045260246000fd5b602002602001015161018c565b82828151811061048157634e487b7160e01b600052603260045260246000fd5b602090810291909101015261049581611460565b9050610400565b509392505050565b6104af338383610855565b5050565b6001600160a01b0385163314806104cf57506104cf853361014b565b61052d5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f3565b61033b8585858585610936565b60608161055e5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610588578061057281611460565b91506105819050600a836113d8565b9150610562565b60008167ffffffffffffffff8111156105b157634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156105db576020820181803683370190505b5090505b8415610654576105f06001836113ec565b91506105fd600a8661147b565b6106089060306113c0565b60f81b81838151811061062b57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535061064d600a866113d8565b94506105df565b949350505050565b81518351146106be5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f3565b6001600160a01b0384166106e45760405162461bcd60e51b81526004016101f39061130d565b3360005b84518110156107e757600085828151811061071357634e487b7160e01b600052603260045260246000fd5b60200260200101519050600085838151811061073f57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561078f5760405162461bcd60e51b81526004016101f390611352565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906107cc9084906113c0565b92505081905550505050806107e090611460565b90506106e8565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161083792919061128d565b60405180910390a461084d818787878787610a60565b505050505050565b816001600160a01b0316836001600160a01b031614156108c95760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f3565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03841661095c5760405162461bcd60e51b81526004016101f39061130d565b33600061096885610bd4565b9050600061097585610bd4565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156109b85760405162461bcd60e51b81526004016101f390611352565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906109f59084906113c0565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610a55848a8a8a8a8a610c2d565b505050505050505050565b6001600160a01b0384163b1561084d5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610aa490899089908890889088906004016111d7565b602060405180830381600087803b158015610abe57600080fd5b505af1925050508015610aee575060408051601f3d908101601f19168201909252610aeb9181019061107b565b60015b610b9b57610afa6114d1565b806308c379a01415610b345750610b0f6114e9565b80610b1a5750610b36565b8060405162461bcd60e51b81526004016101f391906112b2565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f3565b6001600160e01b0319811663bc197c8160e01b14610bcb5760405162461bcd60e51b81526004016101f3906112c5565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610c1c57634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b1561084d5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610c719089908990889088908890600401611235565b602060405180830381600087803b158015610c8b57600080fd5b505af1925050508015610cbb575060408051601f3d908101601f19168201909252610cb89181019061107b565b60015b610cc757610afa6114d1565b6001600160e01b0319811663f23a6e6160e01b14610bcb5760405162461bcd60e51b81526004016101f3906112c5565b80356001600160a01b0381168114610d0e57600080fd5b919050565b600082601f830112610d23578081fd5b81356020610d308261139c565b604051610d3d8282611433565b8381528281019150858301600585901b87018401881015610d5c578586fd5b855b85811015610d7a57813584529284019290840190600101610d5e565b5090979650505050505050565b600082601f830112610d97578081fd5b813567ffffffffffffffff811115610db157610db16114bb565b604051610dc8601f8301601f191660200182611433565b818152846020838601011115610ddc578283fd5b816020850160208301379081016020019190915292915050565b60008060408385031215610e08578182fd5b610e1183610cf7565b9150610e1f60208401610cf7565b90509250929050565b600080600080600060a08688031215610e3f578081fd5b610e4886610cf7565b9450610e5660208701610cf7565b9350604086013567ffffffffffffffff80821115610e72578283fd5b610e7e89838a01610d13565b94506060880135915080821115610e93578283fd5b610e9f89838a01610d13565b93506080880135915080821115610eb4578283fd5b50610ec188828901610d87565b9150509295509295909350565b600080600080600060a08688031215610ee5578081fd5b610eee86610cf7565b9450610efc60208701610cf7565b93506040860135925060608601359150608086013567ffffffffffffffff811115610f25578182fd5b610ec188828901610d87565b60008060408385031215610f43578182fd5b610f4c83610cf7565b915060208301358015158114610f60578182fd5b809150509250929050565b60008060408385031215610f7d578182fd5b610f8683610cf7565b946020939093013593505050565b60008060408385031215610fa6578182fd5b823567ffffffffffffffff80821115610fbd578384fd5b818501915085601f830112610fd0578384fd5b81356020610fdd8261139c565b604051610fea8282611433565b8381528281019150858301600585901b870184018b1015611009578889fd5b8896505b848710156110325761101e81610cf7565b83526001969096019591830191830161100d565b5096505086013592505080821115611048578283fd5b5061105585828601610d13565b9150509250929050565b600060208284031215611070578081fd5b813561021e81611573565b60006020828403121561108c578081fd5b815161021e81611573565b6000602082840312156110a8578081fd5b5035919050565b6000815180845260208085019450808401835b838110156110de578151875295820195908201906001016110c2565b509495945050505050565b60008151808452611101816020860160208601611403565b601f01601f19169290920160200192915050565b60008151611127818560208601611403565b9290920192915050565b600080845482600182811c91508083168061114d57607f831692505b602080841082141561116d57634e487b7160e01b87526022600452602487fd5b8180156111815760018114611192576111be565b60ff198616895284890196506111be565b60008b815260209020885b868110156111b65781548b82015290850190830161119d565b505084890196505b5050505050506111ce8185611115565b95945050505050565b6001600160a01b0386811682528516602082015260a060408201819052600090611203908301866110af565b828103606084015261121581866110af565b9050828103608084015261122981856110e9565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061126f908301846110e9565b979650505050505050565b60208152600061021e60208301846110af565b6040815260006112a060408301856110af565b82810360208401526111ce81856110af565b60208152600061021e60208301846110e9565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600067ffffffffffffffff8211156113b6576113b66114bb565b5060051b60200190565b600082198211156113d3576113d361148f565b500190565b6000826113e7576113e76114a5565b500490565b6000828210156113fe576113fe61148f565b500390565b60005b8381101561141e578181015183820152602001611406565b8381111561142d576000848401525b50505050565b601f8201601f1916810167ffffffffffffffff81118282101715611459576114596114bb565b6040525050565b60006000198214156114745761147461148f565b5060010190565b60008261148a5761148a6114a5565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d11156114e657600481823e5160e01c5b90565b600060443d10156114f75790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561152757505050505090565b828501915081518181111561153f5750505050505090565b843d87010160208285010111156115595750505050505090565b61156860208286010187611433565b509095945050505050565b6001600160e01b03198116811461158957600080fd5b5056fea2646970667358221220c018ce7ecf67a6699bbc729cef52370062e4a42c0d3c81aee2807cca19928c0b64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1800 CODESIZE SUB DUP1 PUSH3 0x1800 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x105 JUMP JUMPDEST PUSH3 0x3F DUP2 PUSH3 0x46 JUMP JUMPDEST POP PUSH3 0x22E JUMP JUMPDEST DUP1 MLOAD PUSH3 0x5B SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x5F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x6D SWAP1 PUSH3 0x1DB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x91 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xAC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xDC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xDC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xBF JUMP JUMPDEST POP PUSH3 0xEA SWAP3 SWAP2 POP PUSH3 0xEE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xEA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xEF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x118 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x12F JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x143 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x158 JUMPI PUSH3 0x158 PUSH3 0x218 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x183 JUMPI PUSH3 0x183 PUSH3 0x218 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x19B JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x1BE JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x19F JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x1CF JUMPI DUP7 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1F0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x212 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15C2 DUP1 PUSH3 0x23E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xF6B JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x105F JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1097 JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x12B2 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xE28 JUMP JUMPDEST PUSH2 0x2AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xF94 JUMP JUMPDEST PUSH2 0x342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x127A JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xF31 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xECE JUMP JUMPDEST PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x256 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x271 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH2 0x284 DUP4 PUSH2 0x53A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x295 SWAP3 SWAP2 SWAP1 PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x2C7 JUMPI POP PUSH2 0x2C7 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x32E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x33B DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x65C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3FA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x49C JUMPI PUSH2 0x461 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x42C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x454 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x481 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x495 DUP2 PUSH2 0x1460 JUMP JUMPDEST SWAP1 POP PUSH2 0x400 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4AF CALLER DUP4 DUP4 PUSH2 0x855 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4CF JUMPI POP PUSH2 0x4CF DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x52D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x33B DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x55E JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x588 JUMPI DUP1 PUSH2 0x572 DUP2 PUSH2 0x1460 JUMP JUMPDEST SWAP2 POP PUSH2 0x581 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x13D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x562 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x654 JUMPI PUSH2 0x5F0 PUSH1 0x1 DUP4 PUSH2 0x13EC JUMP JUMPDEST SWAP2 POP PUSH2 0x5FD PUSH1 0xA DUP7 PUSH2 0x147B JUMP JUMPDEST PUSH2 0x608 SWAP1 PUSH1 0x30 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x62B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x64D PUSH1 0xA DUP7 PUSH2 0x13D8 JUMP JUMPDEST SWAP5 POP PUSH2 0x5DF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x6BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x130D JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x7E7 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x713 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x73F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7CC SWAP1 DUP5 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x7E0 SWAP1 PUSH2 0x1460 JUMP JUMPDEST SWAP1 POP PUSH2 0x6E8 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x837 SWAP3 SWAP2 SWAP1 PUSH2 0x128D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x84D DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xA60 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x95C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x130D JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x968 DUP6 PUSH2 0xBD4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x975 DUP6 PUSH2 0xBD4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x9B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x9F5 SWAP1 DUP5 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA55 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xC2D JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xAA4 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAEE JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAEB SWAP2 DUP2 ADD SWAP1 PUSH2 0x107B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB9B JUMPI PUSH2 0xAFA PUSH2 0x14D1 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xB34 JUMPI POP PUSH2 0xB0F PUSH2 0x14E9 JUMP JUMPDEST DUP1 PUSH2 0xB1A JUMPI POP PUSH2 0xB36 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x12B2 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xC1C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xC71 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCBB JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCB8 SWAP2 DUP2 ADD SWAP1 PUSH2 0x107B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCC7 JUMPI PUSH2 0xAFA PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD23 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD30 DUP3 PUSH2 0x139C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3D DUP3 DUP3 PUSH2 0x1433 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0xD5C JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xD7A JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xD5E JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD97 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDB1 JUMPI PUSH2 0xDB1 PUSH2 0x14BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC8 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x1433 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xDDC JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE08 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xE11 DUP4 PUSH2 0xCF7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE1F PUSH1 0x20 DUP5 ADD PUSH2 0xCF7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE3F JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xE48 DUP7 PUSH2 0xCF7 JUMP JUMPDEST SWAP5 POP PUSH2 0xE56 PUSH1 0x20 DUP8 ADD PUSH2 0xCF7 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE72 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xE7E DUP10 DUP4 DUP11 ADD PUSH2 0xD13 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE93 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xE9F DUP10 DUP4 DUP11 ADD PUSH2 0xD13 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xEB4 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xEC1 DUP9 DUP3 DUP10 ADD PUSH2 0xD87 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xEE5 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xEEE DUP7 PUSH2 0xCF7 JUMP JUMPDEST SWAP5 POP PUSH2 0xEFC PUSH1 0x20 DUP8 ADD PUSH2 0xCF7 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF25 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xEC1 DUP9 DUP3 DUP10 ADD PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF43 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xF4C DUP4 PUSH2 0xCF7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF60 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF7D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xF86 DUP4 PUSH2 0xCF7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFA6 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xFBD JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFD0 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xFDD DUP3 PUSH2 0x139C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFEA DUP3 DUP3 PUSH2 0x1433 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0x1009 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x1032 JUMPI PUSH2 0x101E DUP2 PUSH2 0xCF7 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x100D JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1048 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x1055 DUP6 DUP3 DUP7 ADD PUSH2 0xD13 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1070 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21E DUP2 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x21E DUP2 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10A8 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10DE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x10C2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1101 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1403 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x1127 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1403 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD DUP3 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x114D JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x116D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1181 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1192 JUMPI PUSH2 0x11BE JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP9 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x11B6 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x119D JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP PUSH2 0x11CE DUP2 DUP6 PUSH2 0x1115 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1203 SWAP1 DUP4 ADD DUP7 PUSH2 0x10AF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1215 DUP2 DUP7 PUSH2 0x10AF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1229 DUP2 DUP6 PUSH2 0x10E9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x126F SWAP1 DUP4 ADD DUP5 PUSH2 0x10E9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x21E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10AF JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12A0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x10AF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11CE DUP2 DUP6 PUSH2 0x10AF JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x21E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x13B6 JUMPI PUSH2 0x13B6 PUSH2 0x14BB JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x13D3 JUMPI PUSH2 0x13D3 PUSH2 0x148F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x13E7 JUMPI PUSH2 0x13E7 PUSH2 0x14A5 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x13FE JUMPI PUSH2 0x13FE PUSH2 0x148F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x141E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1406 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x142D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1459 JUMPI PUSH2 0x1459 PUSH2 0x14BB JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1474 JUMPI PUSH2 0x1474 PUSH2 0x148F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x148A JUMPI PUSH2 0x148A PUSH2 0x14A5 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x14E6 JUMPI PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x14F7 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1527 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x153F JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1559 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1568 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1433 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 XOR 0xCE PUSH31 0xCF67A6699BBC729CEF52370062E4A42C0D3C81AEE2807CCA19928C0B64736F PUSH13 0x63430008040033000000000000 ",
							"sourceMap": "604:16818:0:-:0;;;1141:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1183:13;1191:4;1183:7;:13::i;:::-;1141:62;604:16818;;8473:86;8539:13;;;;:4;;:13;;;;;:::i;:::-;;8473:86;:::o;604:16818::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;604:16818:0;;;-1:-1:-1;604:16818:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1137:9;94:6;125:2;168;156:9;147:7;143:23;139:32;136:2;;;189:6;181;174:22;136:2;221:16;;-1:-1:-1;;;;;286:14:9;;;283:2;;;318:6;310;303:22;283:2;361:6;350:9;346:22;336:32;;406:7;399:4;395:2;391:13;387:27;377:2;;433:6;425;418:22;377:2;467;461:9;489:2;485;482:10;479:2;;;495:18;;:::i;:::-;570:2;564:9;538:2;624:13;;-1:-1:-1;;620:22:9;;;644:2;616:31;612:40;600:53;;;668:18;;;688:22;;;665:46;662:2;;;714:18;;:::i;:::-;754:10;750:2;743:22;789:2;781:6;774:18;829:7;824:2;819;815;811:11;807:20;804:33;801:2;;;855:6;847;840:22;801:2;882:6;873:15;;897:129;911:2;908:1;905:9;897:129;;;999:10;;;995:19;;989:26;968:14;;;964:23;;957:59;922:10;;;;897:129;;;1044:2;1041:1;1038:9;1035:2;;;1103:6;1098:2;1093;1085:6;1081:15;1077:24;1070:40;1035:2;1139:6;105:1046;-1:-1:-1;;;;;;;;105:1046:9:o;1156:380::-;1235:1;1231:12;;;;1278;;;1299:2;;1353:4;1345:6;1341:17;1331:27;;1299:2;1406;1398:6;1395:14;1375:18;1372:38;1369:2;;;1452:10;1447:3;1443:20;1440:1;1433:31;1487:4;1484:1;1477:15;1515:4;1512:1;1505:15;1369:2;;1211:325;;;:::o;1541:127::-;1602:10;1597:3;1593:20;1590:1;1583:31;1633:4;1630:1;1623:15;1657:4;1654:1;1647:15;1573:95;604:16818:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18118:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:9"
															},
															"nodeType": "YulIf",
															"src": "111:2:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:9",
														"type": ""
													}
												],
												"src": "14:173:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "256:691:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "305:24:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "314:5:9"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "321:5:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "307:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "307:20:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "307:20:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "284:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "292:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "280:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "280:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "299:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "276:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "276:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "269:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "269:35:9"
															},
															"nodeType": "YulIf",
															"src": "266:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "338:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "361:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "348:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "348:20:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "342:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "377:14:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "387:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "381:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "400:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "450:2:9"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "410:39:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "410:43:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "404:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "462:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "482:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "476:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "476:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "466:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "514:6:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "522:2:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "494:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "494:31:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "534:17:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "545:6:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "538:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "567:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "575:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "560:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "560:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "560:18:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "587:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "598:6:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "606:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "594:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "594:15:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "587:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "618:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "641:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "629:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "629:15:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "622:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "698:24:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "707:5:9"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "714:5:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "700:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "700:20:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "700:20:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "667:6:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "679:1:9",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "682:2:9"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "675:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "675:10:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "663:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "663:23:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "688:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "659:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "659:32:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "693:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "656:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "656:41:9"
															},
															"nodeType": "YulIf",
															"src": "653:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "731:14:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "740:5:9"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "735:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "799:118:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "820:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "838:3:9"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "825:12:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "825:17:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "813:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "813:30:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "813:30:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "856:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "867:3:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "872:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "863:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "863:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "856:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "888:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "899:3:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "904:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "895:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "895:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "888:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "765:1:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "768:2:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "762:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:9:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "772:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "774:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "783:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "786:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "779:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "779:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "774:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "758:3:9",
																"statements": []
															},
															"src": "754:163:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "926:15:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "935:6:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "926:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "230:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "238:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "246:5:9",
														"type": ""
													}
												],
												"src": "192:755:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1004:523:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1053:24:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1062:5:9"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1069:5:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1055:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1055:20:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1055:20:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1032:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1040:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1028:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1028:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1047:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1024:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1024:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1017:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:35:9"
															},
															"nodeType": "YulIf",
															"src": "1014:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1086:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1109:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1096:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1096:20:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1090:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1157:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1131:2:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1135:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1128:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1128:26:9"
															},
															"nodeType": "YulIf",
															"src": "1125:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1186:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1206:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1200:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1200:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1190:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1238:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1258:2:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1262:4:9",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1254:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1254:13:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1273:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1269:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1269:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1250:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1250:27:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1279:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1246:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:38:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1218:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1218:67:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1218:67:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1301:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1309:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1294:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1294:18:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1360:24:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1369:5:9"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1376:5:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1362:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1362:20:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1362:20:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1343:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1331:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1331:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1348:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1327:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1327:26:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1355:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1324:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1324:35:9"
															},
															"nodeType": "YulIf",
															"src": "1321:2:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1410:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1418:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1406:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1406:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1429:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1437:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1425:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1425:17:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1444:2:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1393:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:54:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1393:54:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1471:6:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1479:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1467:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1467:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1484:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1463:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1463:26:9"
																	},
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1491:5:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1456:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1456:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1456:41:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1506:15:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1515:6:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1506:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "978:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "986:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "994:5:9",
														"type": ""
													}
												],
												"src": "952:575:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1619:183:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1665:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1674:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1682:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1667:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1667:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1667:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1640:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1649:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1636:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1661:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1632:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1632:32:9"
															},
															"nodeType": "YulIf",
															"src": "1629:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1700:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1729:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1710:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1710:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1700:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1748:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1781:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1792:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1777:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1777:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1758:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1748:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1577:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1588:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1600:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1608:6:9",
														"type": ""
													}
												],
												"src": "1532:270:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2004:786:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2051:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2060:6:9"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2068:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2053:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2053:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2053:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2025:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2034:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2021:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2021:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2046:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2017:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2017:33:9"
															},
															"nodeType": "YulIf",
															"src": "2014:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2086:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2115:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2096:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2096:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2086:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2134:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2167:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2178:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2163:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2163:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2144:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2144:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2134:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2191:46:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2222:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2233:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2218:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2218:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2205:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2205:32:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2195:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2246:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2256:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2250:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2301:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2310:6:9"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2318:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2303:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2303:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2303:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2289:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2297:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2286:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:14:9"
															},
															"nodeType": "YulIf",
															"src": "2283:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2336:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2390:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2399:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2346:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2346:61:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2336:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2416:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2449:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2460:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2445:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2445:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2432:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2432:32:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2420:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2493:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2502:6:9"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2510:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2495:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2495:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2495:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2479:8:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2489:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2476:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2476:16:9"
															},
															"nodeType": "YulIf",
															"src": "2473:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2528:73:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2571:9:9"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2582:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2567:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2567:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2593:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2538:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:63:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2528:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2610:49:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2643:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2654:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2626:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2626:33:9"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "2614:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2688:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2697:6:9"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2705:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2690:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2690:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2690:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "2674:8:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2684:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2671:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2671:16:9"
															},
															"nodeType": "YulIf",
															"src": "2668:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2723:61:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2754:9:9"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "2765:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2750:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2750:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2776:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2733:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2733:51:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2723:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1938:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1949:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1961:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1969:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1977:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1985:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1993:6:9",
														"type": ""
													}
												],
												"src": "1807:983:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2942:479:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2989:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2998:6:9"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3006:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2991:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2991:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2991:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2963:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2972:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2959:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2984:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2955:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:33:9"
															},
															"nodeType": "YulIf",
															"src": "2952:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3024:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3053:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3034:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3034:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3024:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3072:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3082:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3072:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3129:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3156:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3167:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3152:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3152:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3139:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3139:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3129:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3180:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3207:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3218:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3203:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3203:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3190:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:32:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3180:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3231:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3262:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3273:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3258:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3258:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3245:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3245:33:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3235:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3321:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3330:6:9"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3338:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3323:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3323:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3323:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3293:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3301:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3290:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3290:30:9"
															},
															"nodeType": "YulIf",
															"src": "3287:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3356:59:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3387:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3398:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3383:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3383:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3407:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3366:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:49:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3356:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2876:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2887:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2899:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2907:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2915:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2923:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2931:6:9",
														"type": ""
													}
												],
												"src": "2795:626:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3510:283:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3556:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3565:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3573:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3558:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3558:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3558:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3531:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3540:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3527:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3527:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3552:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3523:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:32:9"
															},
															"nodeType": "YulIf",
															"src": "3520:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3591:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3620:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3601:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3601:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3591:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3639:45:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3669:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3680:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3665:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3665:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3652:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3652:32:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3643:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3737:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "3746:6:9"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "3754:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3739:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3739:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3739:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3706:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3727:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3720:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3720:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3713:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3713:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3703:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3703:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3696:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3696:40:9"
															},
															"nodeType": "YulIf",
															"src": "3693:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3772:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3782:5:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3772:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3468:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3479:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3491:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3499:6:9",
														"type": ""
													}
												],
												"src": "3426:367:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3885:177:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3931:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3940:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3948:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3933:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3933:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3933:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3906:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3915:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3902:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3902:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3927:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:32:9"
															},
															"nodeType": "YulIf",
															"src": "3895:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3966:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3995:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3976:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3966:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4014:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4041:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4052:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4037:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4037:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4024:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4024:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4014:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3843:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3854:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3866:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3874:6:9",
														"type": ""
													}
												],
												"src": "3798:264:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4204:1137:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4250:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4259:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4267:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4252:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4252:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4252:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4225:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4234:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4221:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4221:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4246:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4217:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4217:32:9"
															},
															"nodeType": "YulIf",
															"src": "4214:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4285:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4312:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4299:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4299:23:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4289:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4331:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4341:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4335:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4386:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4395:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4403:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4388:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4388:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4388:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4374:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4382:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4371:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4371:14:9"
															},
															"nodeType": "YulIf",
															"src": "4368:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4421:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4435:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4446:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4431:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4431:22:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4425:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4501:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4510:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4518:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4503:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4503:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4503:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4480:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4484:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4476:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4476:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4491:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4472:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4472:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4465:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4465:35:9"
															},
															"nodeType": "YulIf",
															"src": "4462:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4536:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4559:2:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4546:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4546:16:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4540:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4571:14:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4581:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4575:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4594:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4644:2:9"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4604:39:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4604:43:9"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "4598:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4656:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4676:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4670:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4670:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4660:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4708:6:9"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "4716:2:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "4688:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4688:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4688:31:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4728:17:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4739:6:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4732:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4761:6:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4769:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:18:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4781:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4792:6:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4800:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4788:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4788:15:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4781:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4812:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4827:2:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4831:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4823:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4823:11:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4816:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4888:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4897:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4905:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4890:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4890:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4890:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4857:2:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4865:1:9",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "4868:2:9"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4861:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4861:10:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4853:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4853:19:9"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4874:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4849:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4849:28:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4879:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4846:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4846:41:9"
															},
															"nodeType": "YulIf",
															"src": "4843:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4923:15:9",
															"value": {
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "4932:6:9"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4927:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4992:124:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5013:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5037:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "5018:18:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5018:23:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5006:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5006:36:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5006:36:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5055:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5066:3:9"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5071:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5062:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5062:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5055:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5087:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5098:3:9"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5103:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5094:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5094:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5087:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4958:1:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4961:2:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4955:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4955:9:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4965:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4967:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4976:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4979:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4972:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4972:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4967:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4951:3:9",
																"statements": []
															},
															"src": "4947:169:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5125:16:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5135:6:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5125:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5150:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5183:9:9"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5194:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5179:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5179:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5166:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5166:32:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5154:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5227:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "5236:6:9"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "5244:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5229:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5229:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5229:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5213:8:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5223:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5210:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5210:16:9"
															},
															"nodeType": "YulIf",
															"src": "5207:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5262:73:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5305:9:9"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5316:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5301:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5301:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5327:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5272:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5272:63:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5262:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4162:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4173:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4185:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4193:6:9",
														"type": ""
													}
												],
												"src": "4067:1274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5415:186:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5461:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5470:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5478:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5463:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5463:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5463:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5436:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5445:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5432:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5432:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5457:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5428:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5428:32:9"
															},
															"nodeType": "YulIf",
															"src": "5425:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5496:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5522:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5509:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5509:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5500:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5565:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "5541:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5541:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5541:30:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5580:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5590:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5580:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5381:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5392:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5404:6:9",
														"type": ""
													}
												],
												"src": "5346:255:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5686:179:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5732:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5741:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5749:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5734:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5734:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5734:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5707:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5716:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5703:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5703:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5728:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5699:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5699:32:9"
															},
															"nodeType": "YulIf",
															"src": "5696:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5767:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5786:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5780:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5780:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5771:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5829:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "5805:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5805:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5805:30:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5844:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5854:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5844:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5652:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5663:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5675:6:9",
														"type": ""
													}
												],
												"src": "5606:259:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5940:120:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5986:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5995:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6003:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5988:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5988:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5988:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5961:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5970:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5957:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5957:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5982:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5953:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5953:32:9"
															},
															"nodeType": "YulIf",
															"src": "5950:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6021:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6044:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6031:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6031:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6021:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5906:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5917:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5929:6:9",
														"type": ""
													}
												],
												"src": "5870:190:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6126:376:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6136:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6156:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6150:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6150:12:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6140:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6178:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6183:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6171:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6171:19:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6199:14:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6209:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6203:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6222:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6233:3:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6238:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6229:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6229:12:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6222:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6250:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6268:5:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6275:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6264:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6264:14:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6254:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6287:12:9",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "6296:3:9"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6291:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6357:120:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6378:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6389:6:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6383:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6383:13:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6371:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6371:26:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6371:26:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6410:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6421:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6426:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6417:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6410:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6442:25:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6456:6:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6464:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6452:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6452:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6442:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6319:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6322:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6316:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6316:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6330:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6332:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6341:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6344:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6337:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6337:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6332:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6312:3:9",
																"statements": []
															},
															"src": "6308:169:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6486:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6493:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6486:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6103:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6110:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6118:3:9",
														"type": ""
													}
												],
												"src": "6065:437:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6556:208:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6566:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6586:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6580:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6580:12:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6570:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6608:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6613:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6601:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6601:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6601:19:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6655:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6662:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6651:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6651:16:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6673:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6678:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6669:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6669:14:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6685:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6629:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6629:63:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6629:63:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6701:57:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6716:3:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "6729:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6737:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6725:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6725:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6746:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6742:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6742:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6721:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6721:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6712:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6712:39:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6753:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6708:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6708:50:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6701:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6533:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6540:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6548:3:9",
														"type": ""
													}
												],
												"src": "6507:257:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6819:135:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6829:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6849:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6843:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6843:12:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6833:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6890:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6897:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6886:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6886:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6904:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6909:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6864:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6864:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6864:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6925:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6936:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6941:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6932:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6932:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6925:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6796:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6803:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6811:3:9",
														"type": ""
													}
												],
												"src": "6769:185:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7143:994:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7153:14:9",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "7164:3:9"
															},
															"variables": [
																{
																	"name": "ret",
																	"nodeType": "YulTypedName",
																	"src": "7157:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7176:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7199:6:9"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "7193:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7193:13:9"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "7180:9:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7215:17:9",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "7229:3:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7219:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7241:11:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7251:1:9",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7245:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7261:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7275:2:9"
																	},
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "7279:9:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7271:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7271:18:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7261:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7298:44:9",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "7328:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7339:2:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7324:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7324:18:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7302:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7381:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7383:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7397:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7405:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7393:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7393:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7383:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7361:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7354:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7354:26:9"
															},
															"nodeType": "YulIf",
															"src": "7351:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7421:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7431:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "7425:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7492:115:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "end",
																					"nodeType": "YulIdentifier",
																					"src": "7513:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7522:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7527:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7518:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7518:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7506:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7506:33:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7506:33:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7559:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7562:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7552:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7552:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7552:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "end",
																					"nodeType": "YulIdentifier",
																					"src": "7587:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7592:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7580:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7580:17:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7580:17:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7448:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7471:6:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "7479:2:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7468:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7468:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7445:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7445:38:9"
															},
															"nodeType": "YulIf",
															"src": "7442:2:9"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7657:97:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "7678:3:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "7687:9:9"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "7702:3:9",
																											"type": "",
																											"value": "255"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "7698:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7698:8:9"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "7683:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7683:24:9"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "7671:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7671:37:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7671:37:9"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "7721:23:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "7732:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "7737:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7728:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7728:16:9"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "7721:3:9"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7650:104:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7655:1:9",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7770:315:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7784:52:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "value0",
																							"nodeType": "YulIdentifier",
																							"src": "7829:6:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7799:29:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7799:37:9"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "7788:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7849:12:9",
																				"value": {
																					"name": "end",
																					"nodeType": "YulIdentifier",
																					"src": "7858:3:9"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7853:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7928:111:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nodeType": "YulIdentifier",
																												"src": "7957:3:9"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "7962:1:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "7953:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7953:11:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "7972:7:9"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "7966:5:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7966:14:9"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "7946:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7946:35:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7946:35:9"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7998:27:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "8013:7:9"
																									},
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "8022:2:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8009:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8009:16:9"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "7998:7:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7885:1:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "7888:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7882:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7882:13:9"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7896:19:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7898:15:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7907:1:9"
																									},
																									{
																										"name": "_2",
																										"nodeType": "YulIdentifier",
																										"src": "7910:2:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7903:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7903:10:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7898:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7878:3:9",
																					"statements": []
																				},
																				"src": "7874:165:9"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "8052:23:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "8063:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "8068:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8059:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8059:16:9"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "8052:3:9"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7763:322:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7768:1:9",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"name": "outOfPlaceEncoding",
																"nodeType": "YulIdentifier",
																"src": "7623:18:9"
															},
															"nodeType": "YulSwitch",
															"src": "7616:469:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8094:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8119:6:9"
																	},
																	{
																		"name": "ret",
																		"nodeType": "YulIdentifier",
																		"src": "8127:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "8101:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8101:30:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8094:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7111:3:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7116:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7124:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7135:3:9",
														"type": ""
													}
												],
												"src": "6959:1178:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8473:495:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8483:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8501:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8506:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8497:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8497:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8510:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8493:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8493:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8487:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8528:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8543:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8551:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8539:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8539:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8521:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8521:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8521:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8575:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8586:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8571:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8571:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8595:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8603:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8591:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8591:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8564:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8564:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8564:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8627:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8638:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8623:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8623:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8643:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8616:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8616:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8616:31:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8656:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8699:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8711:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8722:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8707:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8707:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8670:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8670:57:9"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "8660:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8747:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8758:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8743:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8743:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "8767:6:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8775:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8763:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8763:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8736:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8736:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8736:50:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8795:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8838:6:9"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "8846:6:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8809:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8809:44:9"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "8799:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8873:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8884:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8869:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8869:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "8894:6:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8902:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8890:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8890:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8862:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8862:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8862:51:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8922:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8947:6:9"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "8955:6:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8930:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8930:32:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8922:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8410:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8421:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8429:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8437:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8445:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8453:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8464:4:9",
														"type": ""
													}
												],
												"src": "8142:826:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9204:329:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9214:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9232:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9237:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9228:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9228:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9241:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9224:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9224:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9218:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9259:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9274:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9282:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9270:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9270:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9252:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9252:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9252:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9306:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9317:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9302:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9302:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9326:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9334:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9322:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9322:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9295:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9295:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9295:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9358:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9369:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9354:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9354:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9374:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9347:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9347:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9347:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9401:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9412:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9397:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9397:18:9"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9417:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9390:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9390:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9390:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9444:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9455:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9440:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9440:19:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9461:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9433:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9433:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9433:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9474:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "9499:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9511:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9522:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9507:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9507:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "9482:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9482:45:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9474:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9141:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9152:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9160:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9168:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9176:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9184:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9195:4:9",
														"type": ""
													}
												],
												"src": "8973:560:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9689:110:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9706:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9717:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9699:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9699:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9699:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9729:64:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9766:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9778:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9789:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9774:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9774:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "9737:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9737:56:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9729:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9658:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9669:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9680:4:9",
														"type": ""
													}
												],
												"src": "9538:261:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10033:236:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10050:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10061:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10043:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10043:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10043:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10073:70:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10116:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10128:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10139:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10124:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10124:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10087:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10087:56:9"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "10077:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10163:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10174:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10159:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10159:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "10183:6:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10191:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10179:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10179:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10152:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10152:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10152:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10211:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10248:6:9"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "10256:6:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10219:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10219:44:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10211:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9994:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10005:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10013:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10024:4:9",
														"type": ""
													}
												],
												"src": "9804:465:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10369:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10379:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10391:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10402:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10387:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10387:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10379:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10421:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10446:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10439:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10439:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10432:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10432:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10414:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10414:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10414:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10338:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10349:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10360:4:9",
														"type": ""
													}
												],
												"src": "10274:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10587:98:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10604:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10615:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10597:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10597:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10597:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10627:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10652:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10664:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10675:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10660:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10660:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "10635:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10635:44:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10627:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10556:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10567:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10578:4:9",
														"type": ""
													}
												],
												"src": "10466:219:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10864:242:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10881:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10892:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10874:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10874:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10874:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10915:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10926:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10911:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10911:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10931:2:9",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10904:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10904:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10904:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10954:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10965:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10950:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10950:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10970:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10943:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10943:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10943:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11025:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11036:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11021:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11021:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11041:22:9",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11014:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11014:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11014:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11073:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11085:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11096:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11081:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11081:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11073:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10841:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10855:4:9",
														"type": ""
													}
												],
												"src": "10690:416:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11285:230:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11302:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11313:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11295:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11295:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11295:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11336:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11347:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11332:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11332:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11352:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11325:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11325:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11325:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11375:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11386:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11371:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11371:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11391:34:9",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11364:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11364:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11364:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11446:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11457:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11442:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11442:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11462:10:9",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11435:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11435:38:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11435:38:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11482:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11494:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11505:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11490:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11490:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11482:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11262:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11276:4:9",
														"type": ""
													}
												],
												"src": "11111:404:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11694:231:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11711:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11722:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11704:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11704:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11704:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11745:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11756:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11741:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11741:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11761:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11734:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11734:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11734:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11784:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11795:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11780:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11780:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11800:34:9",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11773:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11773:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11773:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11855:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11866:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11851:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11851:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11871:11:9",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11844:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11844:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11844:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11892:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11904:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11915:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11900:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11900:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11892:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11671:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11685:4:9",
														"type": ""
													}
												],
												"src": "11520:405:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12104:232:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12121:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12132:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12114:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12114:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12114:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12155:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12166:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12151:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12151:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12171:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12144:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12144:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12144:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12194:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12205:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12190:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12190:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12210:34:9",
																		"type": "",
																		"value": "ERC1155: address zero is not a v"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12183:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12183:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12183:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12265:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12276:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12261:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12261:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12281:12:9",
																		"type": "",
																		"value": "alid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12254:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12254:40:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12254:40:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12303:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12315:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12326:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12311:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12311:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12303:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12081:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12095:4:9",
														"type": ""
													}
												],
												"src": "11930:406:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12515:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12532:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12543:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12525:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12525:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12525:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12566:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12577:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12562:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12562:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12582:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12555:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12555:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12555:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12605:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12616:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12601:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12601:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12621:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12594:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12594:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12594:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12676:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12687:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12672:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12672:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12692:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12665:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12665:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12665:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12709:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12721:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12732:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12717:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12717:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12709:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12492:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12506:4:9",
														"type": ""
													}
												],
												"src": "12341:401:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12921:240:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12938:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12949:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12931:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12931:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12931:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12972:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12983:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12968:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12968:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12988:2:9",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12961:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12961:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12961:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13011:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13022:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13007:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13007:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13027:34:9",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13000:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13000:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13000:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13082:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13093:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13078:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13078:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13098:20:9",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13071:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13071:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13071:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13128:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13140:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13151:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13136:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13136:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13128:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12898:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12912:4:9",
														"type": ""
													}
												],
												"src": "12747:414:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13340:232:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13357:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13368:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13350:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13350:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13350:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13391:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13402:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13387:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13387:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13407:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13380:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13380:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13380:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13430:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13441:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13426:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13426:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13446:34:9",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13419:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13419:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13419:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13501:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13512:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13497:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13497:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13517:12:9",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13490:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13490:40:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13490:40:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13539:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13551:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13562:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13547:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13547:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13539:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13317:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13331:4:9",
														"type": ""
													}
												],
												"src": "13166:406:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13751:231:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13768:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13779:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13761:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13761:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13761:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13802:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13813:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13798:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13798:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13818:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13791:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13791:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13791:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13841:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13852:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13837:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13837:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13857:34:9",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13830:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13830:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13830:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13912:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13923:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13908:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13908:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13928:11:9",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13901:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13901:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13901:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13949:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13961:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13972:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13957:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13957:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13949:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13728:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13742:4:9",
														"type": ""
													}
												],
												"src": "13577:405:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14161:231:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14178:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14189:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14171:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14171:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14171:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14212:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14223:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14208:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14208:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14228:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14201:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14201:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14201:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14251:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14262:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14247:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14247:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14267:34:9",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14240:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14240:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14240:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14322:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14333:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14318:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14318:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14338:11:9",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14311:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14311:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14311:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14359:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14371:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14382:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14367:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14367:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14359:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14138:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14152:4:9",
														"type": ""
													}
												],
												"src": "13987:405:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14571:230:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14588:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14599:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14581:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14581:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14581:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14622:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14633:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14618:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14618:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14638:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14611:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14611:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14611:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14661:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14672:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14657:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14657:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14677:34:9",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14650:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14650:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14650:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14732:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14743:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14728:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14728:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14748:10:9",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14721:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14721:38:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14721:38:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14768:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14780:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14791:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14776:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14776:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14768:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14548:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14562:4:9",
														"type": ""
													}
												],
												"src": "14397:404:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14907:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14917:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14929:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14940:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14925:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14925:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14917:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14959:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14970:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14952:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14952:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14952:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14876:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14887:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14898:4:9",
														"type": ""
													}
												],
												"src": "14806:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15117:119:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15127:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15139:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15150:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15135:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15135:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15127:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15169:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15180:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15162:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15162:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15162:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15207:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15218:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15203:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15203:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15223:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15196:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15196:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15196:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15078:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15089:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15097:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15108:4:9",
														"type": ""
													}
												],
												"src": "14988:248:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15310:114:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15354:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "15356:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15356:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15356:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15326:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15334:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15323:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15323:30:9"
															},
															"nodeType": "YulIf",
															"src": "15320:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15385:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15401:1:9",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15404:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15397:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15397:14:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15413:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15393:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15393:25:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "15385:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15290:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "15301:4:9",
														"type": ""
													}
												],
												"src": "15241:183:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15485:71:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15502:4:9"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "15508:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15495:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15495:17:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15495:17:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15521:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15539:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15545:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "15529:9:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15529:21:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "15521:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "15468:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "15476:4:9",
														"type": ""
													}
												],
												"src": "15429:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15609:80:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15636:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15638:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15638:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15638:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15625:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "15632:1:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15628:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15628:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15622:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15622:13:9"
															},
															"nodeType": "YulIf",
															"src": "15619:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15667:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15678:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15681:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15674:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15674:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "15667:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15592:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15595:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "15601:3:9",
														"type": ""
													}
												],
												"src": "15561:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15740:74:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15763:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "15765:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15765:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15765:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15760:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15753:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15753:9:9"
															},
															"nodeType": "YulIf",
															"src": "15750:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15794:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15803:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15806:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "15799:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15799:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "15794:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15725:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15728:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15734:1:9",
														"type": ""
													}
												],
												"src": "15694:120:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15868:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15890:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15892:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15892:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15892:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15884:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15887:1:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15881:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15881:8:9"
															},
															"nodeType": "YulIf",
															"src": "15878:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15921:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15933:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15936:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15929:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15929:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "15921:4:9"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15850:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15853:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "15859:4:9",
														"type": ""
													}
												],
												"src": "15819:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16002:205:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16012:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16021:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "16016:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16081:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "16106:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "16111:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "16102:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16102:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "16125:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "16130:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "16121:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "16121:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "16115:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16115:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16095:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16095:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16095:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "16042:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16045:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "16039:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16039:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "16053:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16055:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "16064:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16067:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "16060:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16060:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "16055:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "16035:3:9",
																"statements": []
															},
															"src": "16031:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16170:31:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "16183:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "16188:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "16179:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16179:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16197:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16172:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16172:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16172:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "16159:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16162:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16156:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16156:13:9"
															},
															"nodeType": "YulIf",
															"src": "16153:2:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "15980:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "15985:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15990:6:9",
														"type": ""
													}
												],
												"src": "15949:258:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16259:202:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16269:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "16291:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "16307:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16313:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16303:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16303:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16322:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "16318:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16318:7:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16299:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16299:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16287:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16287:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "16273:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16402:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "16404:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16404:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16404:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "16345:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16357:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16342:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16342:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "16381:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16393:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "16378:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16378:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "16339:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16339:62:9"
															},
															"nodeType": "YulIf",
															"src": "16336:2:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16440:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "16444:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16433:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16433:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16433:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16241:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "16249:4:9",
														"type": ""
													}
												],
												"src": "16212:249:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16513:88:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16544:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16546:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16546:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16546:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16529:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16540:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16536:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16536:6:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "16526:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16526:17:9"
															},
															"nodeType": "YulIf",
															"src": "16523:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16575:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16586:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16593:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16582:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16582:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16575:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16495:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16505:3:9",
														"type": ""
													}
												],
												"src": "16466:135:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16644:74:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16667:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "16669:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16669:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16669:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16664:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16657:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16657:9:9"
															},
															"nodeType": "YulIf",
															"src": "16654:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16698:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16707:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16710:1:9"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "16703:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16703:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "16698:1:9"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16629:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16632:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "16638:1:9",
														"type": ""
													}
												],
												"src": "16606:112:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16755:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16772:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16779:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16784:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16775:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16775:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16765:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16765:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16765:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16812:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16815:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16805:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16805:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16805:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16836:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16839:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16829:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16829:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16829:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "16723:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16887:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16904:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16911:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16916:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16907:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16907:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16897:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16897:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16897:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16944:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16947:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16937:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16937:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16937:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16968:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16971:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16961:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16961:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16961:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "16855:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17019:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17036:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17043:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17048:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "17039:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17039:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17029:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17029:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17029:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17076:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17079:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17069:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17069:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17069:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17100:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17103:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17093:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17093:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17093:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "16987:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17162:142:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17207:91:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sig",
																					"nodeType": "YulIdentifier",
																					"src": "17236:3:9"
																				},
																				{
																					"name": "sig",
																					"nodeType": "YulIdentifier",
																					"src": "17241:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17246:1:9",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "17221:14:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17221:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17221:27:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "17261:27:9",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17272:3:9",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"name": "sig",
																							"nodeType": "YulIdentifier",
																							"src": "17283:3:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "17277:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17277:10:9"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "17268:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17268:20:9"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "17261:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "17178:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17178:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17196:1:9",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17175:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17175:23:9"
															},
															"nodeType": "YulIf",
															"src": "17172:2:9"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "17154:3:9",
														"type": ""
													}
												],
												"src": "17119:185:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17356:624:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17396:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "17398:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "17372:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17372:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17390:4:9",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "17369:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17369:26:9"
															},
															"nodeType": "YulIf",
															"src": "17366:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17414:21:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17432:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17426:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17426:9:9"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "17418:4:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17444:16:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17458:1:9",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "17454:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17454:6:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "17448:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17484:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17490:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "17497:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17497:16:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "17515:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17493:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17493:25:9"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "17469:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17469:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17469:50:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17528:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17548:4:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17542:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17542:11:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "17532:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17562:26:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "17572:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17572:16:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "17566:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17597:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "17607:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "17601:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17683:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "17685:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "17643:6:9"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "17651:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "17640:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17640:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17663:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17671:4:9",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17659:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17659:17:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "17678:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "17656:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17656:25:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "17637:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17637:45:9"
															},
															"nodeType": "YulIf",
															"src": "17634:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17701:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17716:4:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "17722:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17712:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17712:17:9"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "17705:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17738:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "17758:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17752:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17752:10:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "17742:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17789:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "17791:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17777:6:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "17785:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17774:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17774:14:9"
															},
															"nodeType": "YulIf",
															"src": "17771:2:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17880:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "17882:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "17821:3:9"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "17826:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17817:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17817:16:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17835:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17813:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17813:27:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "17850:4:9"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "17856:14:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17856:16:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17846:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17846:27:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "17875:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17842:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17842:36:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17810:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17810:69:9"
															},
															"nodeType": "YulIf",
															"src": "17807:2:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17918:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17932:6:9"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "17940:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17928:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17928:19:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17949:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17924:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17924:30:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "17898:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17898:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17898:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17964:10:9",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "17971:3:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "17964:3:9"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "17348:3:9",
														"type": ""
													}
												],
												"src": "17309:671:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18029:87:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18094:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18103:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18106:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18096:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18096:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18096:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18052:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18063:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "18074:3:9",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "18079:10:9",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "18070:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18070:20:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "18059:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18059:32:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18049:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18049:43:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18042:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18042:51:9"
															},
															"nodeType": "YulIf",
															"src": "18039:2:9"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18018:5:9",
														"type": ""
													}
												],
												"src": "17985:131:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_address_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), array)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(value4, value4) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(value4, value4) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value1, value1) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_address_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let src := add(_2, _4)\n        if gt(add(add(_2, shl(5, _3)), _4), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n            src := add(src, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let ret := end\n        let slotValue := sload(value0)\n        let length := end\n        let _1 := 1\n        length := shr(_1, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        let _2 := 32\n        if eq(outOfPlaceEncoding, lt(length, _2))\n        {\n            mstore(end, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(end, 0x24)\n        }\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, length)\n        }\n        case 1 {\n            let dataPos := array_dataslot_string_storage(value0)\n            let i := end\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        end := abi_encode_string(value1, ret)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value4, tail_2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_bytes(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: address zero is not a v\")\n        mstore(add(headStart, 96), \"alid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(data, ptr)\n        data := keccak256(data, 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(sig, sig, 4)\n            sig := shr(224, mload(sig))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xF6B JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x105F JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1097 JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x12B2 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xE28 JUMP JUMPDEST PUSH2 0x2AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xF94 JUMP JUMPDEST PUSH2 0x342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x127A JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xF31 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xECE JUMP JUMPDEST PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x256 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x271 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH2 0x284 DUP4 PUSH2 0x53A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x295 SWAP3 SWAP2 SWAP1 PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x2C7 JUMPI POP PUSH2 0x2C7 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x32E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x33B DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x65C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3FA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x49C JUMPI PUSH2 0x461 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x42C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x454 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x481 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x495 DUP2 PUSH2 0x1460 JUMP JUMPDEST SWAP1 POP PUSH2 0x400 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4AF CALLER DUP4 DUP4 PUSH2 0x855 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4CF JUMPI POP PUSH2 0x4CF DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x52D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x33B DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x55E JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x588 JUMPI DUP1 PUSH2 0x572 DUP2 PUSH2 0x1460 JUMP JUMPDEST SWAP2 POP PUSH2 0x581 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x13D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x562 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x654 JUMPI PUSH2 0x5F0 PUSH1 0x1 DUP4 PUSH2 0x13EC JUMP JUMPDEST SWAP2 POP PUSH2 0x5FD PUSH1 0xA DUP7 PUSH2 0x147B JUMP JUMPDEST PUSH2 0x608 SWAP1 PUSH1 0x30 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x62B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x64D PUSH1 0xA DUP7 PUSH2 0x13D8 JUMP JUMPDEST SWAP5 POP PUSH2 0x5DF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x6BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x130D JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x7E7 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x713 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x73F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7CC SWAP1 DUP5 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x7E0 SWAP1 PUSH2 0x1460 JUMP JUMPDEST SWAP1 POP PUSH2 0x6E8 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x837 SWAP3 SWAP2 SWAP1 PUSH2 0x128D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x84D DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xA60 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x95C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x130D JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x968 DUP6 PUSH2 0xBD4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x975 DUP6 PUSH2 0xBD4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x9B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x9F5 SWAP1 DUP5 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA55 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xC2D JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xAA4 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAEE JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAEB SWAP2 DUP2 ADD SWAP1 PUSH2 0x107B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB9B JUMPI PUSH2 0xAFA PUSH2 0x14D1 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xB34 JUMPI POP PUSH2 0xB0F PUSH2 0x14E9 JUMP JUMPDEST DUP1 PUSH2 0xB1A JUMPI POP PUSH2 0xB36 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x12B2 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xC1C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xC71 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCBB JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCB8 SWAP2 DUP2 ADD SWAP1 PUSH2 0x107B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCC7 JUMPI PUSH2 0xAFA PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD23 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD30 DUP3 PUSH2 0x139C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3D DUP3 DUP3 PUSH2 0x1433 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0xD5C JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xD7A JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xD5E JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD97 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDB1 JUMPI PUSH2 0xDB1 PUSH2 0x14BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC8 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x1433 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xDDC JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE08 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xE11 DUP4 PUSH2 0xCF7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE1F PUSH1 0x20 DUP5 ADD PUSH2 0xCF7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE3F JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xE48 DUP7 PUSH2 0xCF7 JUMP JUMPDEST SWAP5 POP PUSH2 0xE56 PUSH1 0x20 DUP8 ADD PUSH2 0xCF7 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE72 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xE7E DUP10 DUP4 DUP11 ADD PUSH2 0xD13 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE93 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xE9F DUP10 DUP4 DUP11 ADD PUSH2 0xD13 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xEB4 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xEC1 DUP9 DUP3 DUP10 ADD PUSH2 0xD87 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xEE5 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xEEE DUP7 PUSH2 0xCF7 JUMP JUMPDEST SWAP5 POP PUSH2 0xEFC PUSH1 0x20 DUP8 ADD PUSH2 0xCF7 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF25 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xEC1 DUP9 DUP3 DUP10 ADD PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF43 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xF4C DUP4 PUSH2 0xCF7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF60 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF7D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xF86 DUP4 PUSH2 0xCF7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFA6 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xFBD JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFD0 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xFDD DUP3 PUSH2 0x139C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFEA DUP3 DUP3 PUSH2 0x1433 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0x1009 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x1032 JUMPI PUSH2 0x101E DUP2 PUSH2 0xCF7 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x100D JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1048 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x1055 DUP6 DUP3 DUP7 ADD PUSH2 0xD13 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1070 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21E DUP2 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x21E DUP2 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10A8 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10DE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x10C2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1101 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1403 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x1127 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1403 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD DUP3 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x114D JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x116D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1181 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1192 JUMPI PUSH2 0x11BE JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP9 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x11B6 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x119D JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP PUSH2 0x11CE DUP2 DUP6 PUSH2 0x1115 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1203 SWAP1 DUP4 ADD DUP7 PUSH2 0x10AF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1215 DUP2 DUP7 PUSH2 0x10AF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1229 DUP2 DUP6 PUSH2 0x10E9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x126F SWAP1 DUP4 ADD DUP5 PUSH2 0x10E9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x21E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10AF JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12A0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x10AF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11CE DUP2 DUP6 PUSH2 0x10AF JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x21E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x13B6 JUMPI PUSH2 0x13B6 PUSH2 0x14BB JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x13D3 JUMPI PUSH2 0x13D3 PUSH2 0x148F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x13E7 JUMPI PUSH2 0x13E7 PUSH2 0x14A5 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x13FE JUMPI PUSH2 0x13FE PUSH2 0x148F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x141E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1406 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x142D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1459 JUMPI PUSH2 0x1459 PUSH2 0x14BB JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1474 JUMPI PUSH2 0x1474 PUSH2 0x148F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x148A JUMPI PUSH2 0x148A PUSH2 0x14A5 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x14E6 JUMPI PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x14F7 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1527 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x153F JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1559 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1568 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1433 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 XOR 0xCE PUSH31 0xCF67A6699BBC729CEF52370062E4A42C0D3C81AEE2807CCA19928C0B64736F PUSH13 0x63430008040033000000000000 ",
							"sourceMap": "604:16818:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2338:228;;;;;;:::i;:::-;;:::i;:::-;;;14952:25:9;;;14940:2;14925:18;2338:228:0;;;;;;;;1270:305;;;;;;:::i;:::-;;:::i;:::-;;;10439:14:9;;10432:22;10414:41;;10402:2;10387:18;1270:305:0;10369:92:9;1974:222:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4361:430::-;;;;;;:::i;:::-;;:::i;:::-;;2863:516;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3447:153::-;;;;;;:::i;:::-;;:::i;3667:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3789:27:0;;;3766:4;3789:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3667:166;3900:389;;;;;;:::i;:::-;;:::i;2338:228::-;2424:7;-1:-1:-1;;;;;2451:21:0;;2443:76;;;;-1:-1:-1;;;2443:76:0;;12132:2:9;2443:76:0;;;12114:21:9;12171:2;12151:18;;;12144:30;12210:34;12190:18;;;12183:62;-1:-1:-1;;;12261:18:9;;;12254:40;12311:19;;2443:76:0;;;;;;;;;2651:7;2677:13;;;;;;;;;;;-1:-1:-1;;;;;2677:22:0;;;;;;;;;;2536:23;2529:30;2338:228;-1:-1:-1;;;2338:228:0:o;1270:305::-;1372:4;-1:-1:-1;;;;;;1407:41:0;;-1:-1:-1;;;1407:41:0;;:109;;-1:-1:-1;;;;;;;1464:52:0;;-1:-1:-1;;;1464:52:0;1407:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:7;;;1532:36:0;1388:180;1270:305;-1:-1:-1;;1270:305:0:o;1974:222::-;2037:13;2123:4;2145:20;2162:2;2145:16;:20::i;:::-;2089:90;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2062:127;;1974:222;;;:::o;4361:430::-;-1:-1:-1;;;;;4586:20:0;;719:10:5;4586:20:0;;:60;;-1:-1:-1;4610:36:0;4627:4;719:10:5;3667:166:0;:::i;4610:36::-;4565:157;;;;-1:-1:-1;;;4565:157:0;;12949:2:9;4565:157:0;;;12931:21:9;12988:2;12968:18;;;12961:30;13027:34;13007:18;;;13000:62;-1:-1:-1;;;13078:18:9;;;13071:48;13136:19;;4565:157:0;12921:240:9;4565:157:0;4732:52;4755:4;4761:2;4765:3;4770:7;4779:4;4732:22;:52::i;:::-;4361:430;;;;;:::o;2863:516::-;3014:16;3073:3;:10;3054:8;:15;:29;3046:83;;;;-1:-1:-1;;;3046:83:0;;14189:2:9;3046:83:0;;;14171:21:9;14228:2;14208:18;;;14201:30;14267:34;14247:18;;;14240:62;-1:-1:-1;;;14318:18:9;;;14311:39;14367:19;;3046:83:0;14161:231:9;3046:83:0;3148:30;3195:8;:15;3181:30;;;;;;-1:-1:-1;;;3181:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3181:30:0;;3148:63;;3227:9;3222:120;3246:8;:15;3242:1;:19;3222:120;;;3301:30;3311:8;3320:1;3311:11;;;;;;-1:-1:-1;;;3311:11:0;;;;;;;;;;;;;;;3324:3;3328:1;3324:6;;;;;;-1:-1:-1;;;3324:6:0;;;;;;;;;;;;;;;3301:9;:30::i;:::-;3282:13;3296:1;3282:16;;;;;;-1:-1:-1;;;3282:16:0;;;;;;;;;;;;;;;;;;:49;3263:3;;;:::i;:::-;;;3222:120;;;-1:-1:-1;3359:13:0;2863:516;-1:-1:-1;;;2863:516:0:o;3447:153::-;3541:52;719:10:5;3574:8:0;3584;3541:18;:52::i;:::-;3447:153;;:::o;3900:389::-;-1:-1:-1;;;;;4100:20:0;;719:10:5;4100:20:0;;:60;;-1:-1:-1;4124:36:0;4141:4;719:10:5;3667:166:0;:::i;4124:36::-;4079:148;;;;-1:-1:-1;;;4079:148:0;;11722:2:9;4079:148:0;;;11704:21:9;11761:2;11741:18;;;11734:30;11800:34;11780:18;;;11773:62;-1:-1:-1;;;11851:18:9;;;11844:39;11900:19;;4079:148:0;11694:231:9;4079:148:0;4237:45;4255:4;4261:2;4265;4269:6;4277:4;4237:17;:45::i;328:703:6:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:6;;;;;;;;;;;;-1:-1:-1;;;627:10:6;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:6;;-1:-1:-1;773:2:6;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;-1:-1:-1;;;817:17:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:6;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:6;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;-1:-1:-1;;;902:14:6;;;;;;;;;;;;:56;-1:-1:-1;;;;;902:56:6;;;;;;;;-1:-1:-1;972:11:6;981:2;972:11;;:::i;:::-;;;844:150;;;1017:6;328:703;-1:-1:-1;;;;328:703:6:o;6535:1115:0:-;6755:7;:14;6741:3;:10;:28;6733:81;;;;-1:-1:-1;;;6733:81:0;;14599:2:9;6733:81:0;;;14581:21:9;14638:2;14618:18;;;14611:30;14677:34;14657:18;;;14650:62;-1:-1:-1;;;14728:18:9;;;14721:38;14776:19;;6733:81:0;14571:230:9;6733:81:0;-1:-1:-1;;;;;6832:16:0;;6824:66;;;;-1:-1:-1;;;6824:66:0;;;;;;;:::i;:::-;719:10:5;6901:16:0;7014:411;7038:3;:10;7034:1;:14;7014:411;;;7069:10;7082:3;7086:1;7082:6;;;;;;-1:-1:-1;;;7082:6:0;;;;;;;;;;;;;;;7069:19;;7102:14;7119:7;7127:1;7119:10;;;;;;-1:-1:-1;;;7119:10:0;;;;;;;;;;;;;;;;;;;;7144:19;7166:13;;;;;;;;;;-1:-1:-1;;;;;7166:19:0;;;;;;;;;;;;7119:10;;-1:-1:-1;7207:21:0;;;;7199:76;;;;-1:-1:-1;;;7199:76:0;;;;;;;:::i;:::-;7317:9;:13;;;;;;;;;;;-1:-1:-1;;;;;7317:19:0;;;;;;;;;;7339:20;;;7317:42;;7387:17;;;;;;;:27;;7339:20;;7317:9;7387:27;;7339:20;;7387:27;:::i;:::-;;;;;;;;7014:411;;;7050:3;;;;:::i;:::-;;;7014:411;;;;7470:2;-1:-1:-1;;;;;7440:47:0;7464:4;-1:-1:-1;;;;;7440:47:0;7454:8;-1:-1:-1;;;;;7440:47:0;;7474:3;7479:7;7440:47;;;;;;;:::i;:::-;;;;;;;;7568:75;7604:8;7614:4;7620:2;7624:3;7629:7;7638:4;7568:35;:75::i;:::-;6535:1115;;;;;;:::o;13075:323::-;13225:8;-1:-1:-1;;;;;13216:17:0;:5;-1:-1:-1;;;;;13216:17:0;;;13208:71;;;;-1:-1:-1;;;13208:71:0;;13779:2:9;13208:71:0;;;13761:21:9;13818:2;13798:18;;;13791:30;13857:34;13837:18;;;13830:62;-1:-1:-1;;;13908:18:9;;;13901:39;13957:19;;13208:71:0;13751:231:9;13208:71:0;-1:-1:-1;;;;;13289:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13289:46:0;;;;;;;;;;13350:41;;10414::9;;;13350::0;;10387:18:9;13350:41:0;;;;;;;13075:323;;;:::o;5242:947::-;-1:-1:-1;;;;;5423:16:0;;5415:66;;;;-1:-1:-1;;;5415:66:0;;;;;;;:::i;:::-;719:10:5;5492:16:0;5556:21;5574:2;5556:17;:21::i;:::-;5533:44;;5587:24;5614:25;5632:6;5614:17;:25::i;:::-;5587:52;;5721:19;5743:13;;;;;;;;;;;-1:-1:-1;;;;;5743:19:0;;;;;;;;;;5780:21;;;;5772:76;;;;-1:-1:-1;;;5772:76:0;;;;;;;:::i;:::-;5882:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5882:19:0;;;;;;;;;;5904:20;;;5882:42;;5944:17;;;;;;;:27;;5904:20;;5882:9;5944:27;;5904:20;;5944:27;:::i;:::-;;;;-1:-1:-1;;5987:46:0;;;15162:25:9;;;15218:2;15203:18;;15196:34;;;-1:-1:-1;;;;;5987:46:0;;;;;;;;;;;;;;15135:18:9;5987:46:0;;;;;;;6114:68;6145:8;6155:4;6161:2;6165;6169:6;6177:4;6114:30;:68::i;:::-;5242:947;;;;;;;;;:::o;16429:792::-;-1:-1:-1;;;;;16661:13:0;;1465:19:4;:23;16657:558:0;;16696:79;;-1:-1:-1;;;16696:79:0;;-1:-1:-1;;;;;16696:43:0;;;;;:79;;16740:8;;16750:4;;16756:3;;16761:7;;16770:4;;16696:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16696:79:0;;;;;;;;-1:-1:-1;;16696:79:0;;;;;;;;;;;;:::i;:::-;;;16692:513;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;17081:6;17074:14;;-1:-1:-1;;;17074:14:0;;;;;;;;:::i;16692:513::-;;;17128:62;;-1:-1:-1;;;17128:62:0;;10892:2:9;17128:62:0;;;10874:21:9;10931:2;10911:18;;;10904:30;10970:34;10950:18;;;10943:62;-1:-1:-1;;;11021:18:9;;;11014:50;11081:19;;17128:62:0;10864:242:9;16692:513:0;-1:-1:-1;;;;;;16854:60:0;;-1:-1:-1;;;16854:60:0;16850:157;;16938:50;;-1:-1:-1;;;16938:50:0;;;;;;;:::i;16850:157::-;16776:245;16429:792;;;;;;:::o;17227:193::-;17346:16;;;17360:1;17346:16;;;;;;;;;17293;;17321:22;;17346:16;;;;;;;;;;;;-1:-1:-1;17346:16:0;17321:41;;17383:7;17372:5;17378:1;17372:8;;;;;;-1:-1:-1;;;17372:8:0;;;;;;;;;;;;;;;;;;:18;17408:5;17227:193;-1:-1:-1;;17227:193:0:o;15698:725::-;-1:-1:-1;;;;;15905:13:0;;1465:19:4;:23;15901:516:0;;15940:72;;-1:-1:-1;;;15940:72:0;;-1:-1:-1;;;;;15940:38:0;;;;;:72;;15979:8;;15989:4;;15995:2;;15999:6;;16007:4;;15940:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15940:72:0;;;;;;;;-1:-1:-1;;15940:72:0;;;;;;;;;;;;:::i;:::-;;;15936:471;;;;:::i;:::-;-1:-1:-1;;;;;;16061:55:0;;-1:-1:-1;;;16061:55:0;16057:152;;16140:50;;-1:-1:-1;;;16140:50:0;;;;;;;:::i;14:173:9:-;82:20;;-1:-1:-1;;;;;131:31:9;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:755::-;246:5;299:3;292:4;284:6;280:17;276:27;266:2;;321:5;314;307:20;266:2;361:6;348:20;387:4;410:43;450:2;410:43;:::i;:::-;482:2;476:9;494:31;522:2;514:6;494:31;:::i;:::-;560:18;;;594:15;;;;-1:-1:-1;629:15:9;;;679:1;675:10;;;663:23;;659:32;;656:41;-1:-1:-1;653:2:9;;;714:5;707;700:20;653:2;740:5;754:163;768:2;765:1;762:9;754:163;;;825:17;;813:30;;863:12;;;;895;;;;786:1;779:9;754:163;;;-1:-1:-1;935:6:9;;256:691;-1:-1:-1;;;;;;;256:691:9:o;952:575::-;994:5;1047:3;1040:4;1032:6;1028:17;1024:27;1014:2;;1069:5;1062;1055:20;1014:2;1109:6;1096:20;1135:18;1131:2;1128:26;1125:2;;;1157:18;;:::i;:::-;1206:2;1200:9;1218:67;1273:2;1254:13;;-1:-1:-1;;1250:27:9;1279:4;1246:38;1200:9;1218:67;:::i;:::-;1309:2;1301:6;1294:18;1355:3;1348:4;1343:2;1335:6;1331:15;1327:26;1324:35;1321:2;;;1376:5;1369;1362:20;1321:2;1444;1437:4;1429:6;1425:17;1418:4;1410:6;1406:17;1393:54;1467:15;;;1484:4;1463:26;1456:41;;;;1471:6;1004:523;-1:-1:-1;;1004:523:9:o;1532:270::-;1600:6;1608;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1682:6;1674;1667:22;1629:2;1710:29;1729:9;1710:29;:::i;:::-;1700:39;;1758:38;1792:2;1781:9;1777:18;1758:38;:::i;:::-;1748:48;;1619:183;;;;;:::o;1807:983::-;1961:6;1969;1977;1985;1993;2046:3;2034:9;2025:7;2021:23;2017:33;2014:2;;;2068:6;2060;2053:22;2014:2;2096:29;2115:9;2096:29;:::i;:::-;2086:39;;2144:38;2178:2;2167:9;2163:18;2144:38;:::i;:::-;2134:48;;2233:2;2222:9;2218:18;2205:32;2256:18;2297:2;2289:6;2286:14;2283:2;;;2318:6;2310;2303:22;2283:2;2346:61;2399:7;2390:6;2379:9;2375:22;2346:61;:::i;:::-;2336:71;;2460:2;2449:9;2445:18;2432:32;2416:48;;2489:2;2479:8;2476:16;2473:2;;;2510:6;2502;2495:22;2473:2;2538:63;2593:7;2582:8;2571:9;2567:24;2538:63;:::i;:::-;2528:73;;2654:3;2643:9;2639:19;2626:33;2610:49;;2684:2;2674:8;2671:16;2668:2;;;2705:6;2697;2690:22;2668:2;;2733:51;2776:7;2765:8;2754:9;2750:24;2733:51;:::i;:::-;2723:61;;;2004:786;;;;;;;;:::o;2795:626::-;2899:6;2907;2915;2923;2931;2984:3;2972:9;2963:7;2959:23;2955:33;2952:2;;;3006:6;2998;2991:22;2952:2;3034:29;3053:9;3034:29;:::i;:::-;3024:39;;3082:38;3116:2;3105:9;3101:18;3082:38;:::i;:::-;3072:48;;3167:2;3156:9;3152:18;3139:32;3129:42;;3218:2;3207:9;3203:18;3190:32;3180:42;;3273:3;3262:9;3258:19;3245:33;3301:18;3293:6;3290:30;3287:2;;;3338:6;3330;3323:22;3287:2;3366:49;3407:7;3398:6;3387:9;3383:22;3366:49;:::i;3426:367::-;3491:6;3499;3552:2;3540:9;3531:7;3527:23;3523:32;3520:2;;;3573:6;3565;3558:22;3520:2;3601:29;3620:9;3601:29;:::i;:::-;3591:39;;3680:2;3669:9;3665:18;3652:32;3727:5;3720:13;3713:21;3706:5;3703:32;3693:2;;3754:6;3746;3739:22;3693:2;3782:5;3772:15;;;3510:283;;;;;:::o;3798:264::-;3866:6;3874;3927:2;3915:9;3906:7;3902:23;3898:32;3895:2;;;3948:6;3940;3933:22;3895:2;3976:29;3995:9;3976:29;:::i;:::-;3966:39;4052:2;4037:18;;;;4024:32;;-1:-1:-1;;;3885:177:9:o;4067:1274::-;4185:6;4193;4246:2;4234:9;4225:7;4221:23;4217:32;4214:2;;;4267:6;4259;4252:22;4214:2;4312:9;4299:23;4341:18;4382:2;4374:6;4371:14;4368:2;;;4403:6;4395;4388:22;4368:2;4446:6;4435:9;4431:22;4421:32;;4491:7;4484:4;4480:2;4476:13;4472:27;4462:2;;4518:6;4510;4503:22;4462:2;4559;4546:16;4581:4;4604:43;4644:2;4604:43;:::i;:::-;4676:2;4670:9;4688:31;4716:2;4708:6;4688:31;:::i;:::-;4754:18;;;4788:15;;;;-1:-1:-1;4823:11:9;;;4865:1;4861:10;;;4853:19;;4849:28;;4846:41;-1:-1:-1;4843:2:9;;;4905:6;4897;4890:22;4843:2;4932:6;4923:15;;4947:169;4961:2;4958:1;4955:9;4947:169;;;5018:23;5037:3;5018:23;:::i;:::-;5006:36;;4979:1;4972:9;;;;;5062:12;;;;5094;;4947:169;;;-1:-1:-1;5135:6:9;-1:-1:-1;;5179:18:9;;5166:32;;-1:-1:-1;;5210:16:9;;;5207:2;;;5244:6;5236;5229:22;5207:2;;5272:63;5327:7;5316:8;5305:9;5301:24;5272:63;:::i;:::-;5262:73;;;4204:1137;;;;;:::o;5346:255::-;5404:6;5457:2;5445:9;5436:7;5432:23;5428:32;5425:2;;;5478:6;5470;5463:22;5425:2;5522:9;5509:23;5541:30;5565:5;5541:30;:::i;5606:259::-;5675:6;5728:2;5716:9;5707:7;5703:23;5699:32;5696:2;;;5749:6;5741;5734:22;5696:2;5786:9;5780:16;5805:30;5829:5;5805:30;:::i;5870:190::-;5929:6;5982:2;5970:9;5961:7;5957:23;5953:32;5950:2;;;6003:6;5995;5988:22;5950:2;-1:-1:-1;6031:23:9;;5940:120;-1:-1:-1;5940:120:9:o;6065:437::-;6118:3;6156:5;6150:12;6183:6;6178:3;6171:19;6209:4;6238:2;6233:3;6229:12;6222:19;;6275:2;6268:5;6264:14;6296:3;6308:169;6322:6;6319:1;6316:13;6308:169;;;6383:13;;6371:26;;6417:12;;;;6452:15;;;;6344:1;6337:9;6308:169;;;-1:-1:-1;6493:3:9;;6126:376;-1:-1:-1;;;;;6126:376:9:o;6507:257::-;6548:3;6586:5;6580:12;6613:6;6608:3;6601:19;6629:63;6685:6;6678:4;6673:3;6669:14;6662:4;6655:5;6651:16;6629:63;:::i;:::-;6746:2;6725:15;-1:-1:-1;;6721:29:9;6712:39;;;;6753:4;6708:50;;6556:208;-1:-1:-1;;6556:208:9:o;6769:185::-;6811:3;6849:5;6843:12;6864:52;6909:6;6904:3;6897:4;6890:5;6886:16;6864:52;:::i;:::-;6932:16;;;;;6819:135;-1:-1:-1;;6819:135:9:o;6959:1178::-;7135:3;7164;7199:6;7193:13;7229:3;7251:1;7279:9;7275:2;7271:18;7261:28;;7339:2;7328:9;7324:18;7361;7351:2;;7405:4;7397:6;7393:17;7383:27;;7351:2;7431;7479;7471:6;7468:14;7448:18;7445:38;7442:2;;;-1:-1:-1;;;7506:33:9;;7562:4;7559:1;7552:15;7592:4;7513:3;7580:17;7442:2;7623:18;7650:104;;;;7768:1;7763:322;;;;7616:469;;7650:104;-1:-1:-1;;7683:24:9;;7671:37;;7728:16;;;;-1:-1:-1;7650:104:9;;7763:322;15476:4;15495:17;;;15545:4;15529:21;;7858:3;7874:165;7888:6;7885:1;7882:13;7874:165;;;7966:14;;7953:11;;;7946:35;8009:16;;;;7903:10;;7874:165;;;7878:3;;8068:6;8063:3;8059:16;8052:23;;7616:469;;;;;;;8101:30;8127:3;8119:6;8101:30;:::i;:::-;8094:37;7143:994;-1:-1:-1;;;;;7143:994:9:o;8142:826::-;-1:-1:-1;;;;;8539:15:9;;;8521:34;;8591:15;;8586:2;8571:18;;8564:43;8501:3;8638:2;8623:18;;8616:31;;;8464:4;;8670:57;;8707:19;;8699:6;8670:57;:::i;:::-;8775:9;8767:6;8763:22;8758:2;8747:9;8743:18;8736:50;8809:44;8846:6;8838;8809:44;:::i;:::-;8795:58;;8902:9;8894:6;8890:22;8884:3;8873:9;8869:19;8862:51;8930:32;8955:6;8947;8930:32;:::i;:::-;8922:40;8473:495;-1:-1:-1;;;;;;;;8473:495:9:o;8973:560::-;-1:-1:-1;;;;;9270:15:9;;;9252:34;;9322:15;;9317:2;9302:18;;9295:43;9369:2;9354:18;;9347:34;;;9412:2;9397:18;;9390:34;;;9232:3;9455;9440:19;;9433:32;;;9195:4;;9482:45;;9507:19;;9499:6;9482:45;:::i;:::-;9474:53;9204:329;-1:-1:-1;;;;;;;9204:329:9:o;9538:261::-;9717:2;9706:9;9699:21;9680:4;9737:56;9789:2;9778:9;9774:18;9766:6;9737:56;:::i;9804:465::-;10061:2;10050:9;10043:21;10024:4;10087:56;10139:2;10128:9;10124:18;10116:6;10087:56;:::i;:::-;10191:9;10183:6;10179:22;10174:2;10163:9;10159:18;10152:50;10219:44;10256:6;10248;10219:44;:::i;10466:219::-;10615:2;10604:9;10597:21;10578:4;10635:44;10675:2;10664:9;10660:18;10652:6;10635:44;:::i;11111:404::-;11313:2;11295:21;;;11352:2;11332:18;;;11325:30;11391:34;11386:2;11371:18;;11364:62;-1:-1:-1;;;11457:2:9;11442:18;;11435:38;11505:3;11490:19;;11285:230::o;12341:401::-;12543:2;12525:21;;;12582:2;12562:18;;;12555:30;12621:34;12616:2;12601:18;;12594:62;-1:-1:-1;;;12687:2:9;12672:18;;12665:35;12732:3;12717:19;;12515:227::o;13166:406::-;13368:2;13350:21;;;13407:2;13387:18;;;13380:30;13446:34;13441:2;13426:18;;13419:62;-1:-1:-1;;;13512:2:9;13497:18;;13490:40;13562:3;13547:19;;13340:232::o;15241:183::-;15301:4;15334:18;15326:6;15323:30;15320:2;;;15356:18;;:::i;:::-;-1:-1:-1;15401:1:9;15397:14;15413:4;15393:25;;15310:114::o;15561:128::-;15601:3;15632:1;15628:6;15625:1;15622:13;15619:2;;;15638:18;;:::i;:::-;-1:-1:-1;15674:9:9;;15609:80::o;15694:120::-;15734:1;15760;15750:2;;15765:18;;:::i;:::-;-1:-1:-1;15799:9:9;;15740:74::o;15819:125::-;15859:4;15887:1;15884;15881:8;15878:2;;;15892:18;;:::i;:::-;-1:-1:-1;15929:9:9;;15868:76::o;15949:258::-;16021:1;16031:113;16045:6;16042:1;16039:13;16031:113;;;16121:11;;;16115:18;16102:11;;;16095:39;16067:2;16060:10;16031:113;;;16162:6;16159:1;16156:13;16153:2;;;16197:1;16188:6;16183:3;16179:16;16172:27;16153:2;;16002:205;;;:::o;16212:249::-;16322:2;16303:13;;-1:-1:-1;;16299:27:9;16287:40;;16357:18;16342:34;;16378:22;;;16339:62;16336:2;;;16404:18;;:::i;:::-;16440:2;16433:22;-1:-1:-1;;16259:202:9:o;16466:135::-;16505:3;-1:-1:-1;;16526:17:9;;16523:2;;;16546:18;;:::i;:::-;-1:-1:-1;16593:1:9;16582:13;;16513:88::o;16606:112::-;16638:1;16664;16654:2;;16669:18;;:::i;:::-;-1:-1:-1;16703:9:9;;16644:74::o;16723:127::-;16784:10;16779:3;16775:20;16772:1;16765:31;16815:4;16812:1;16805:15;16839:4;16836:1;16829:15;16855:127;16916:10;16911:3;16907:20;16904:1;16897:31;16947:4;16944:1;16937:15;16971:4;16968:1;16961:15;16987:127;17048:10;17043:3;17039:20;17036:1;17029:31;17079:4;17076:1;17069:15;17103:4;17100:1;17093:15;17119:185;17154:3;17196:1;17178:16;17175:23;17172:2;;;17246:1;17241:3;17236;17221:27;17277:10;17272:3;17268:20;17172:2;17162:142;:::o;17309:671::-;17348:3;17390:4;17372:16;17369:26;17366:2;;;17356:624;:::o;17366:2::-;17432;17426:9;-1:-1:-1;;17497:16:9;17493:25;;17490:1;17426:9;17469:50;17548:4;17542:11;17572:16;17607:18;17678:2;17671:4;17663:6;17659:17;17656:25;17651:2;17643:6;17640:14;17637:45;17634:2;;;17685:5;;;;;17356:624;:::o;17634:2::-;17722:6;17716:4;17712:17;17701:28;;17758:3;17752:10;17785:2;17777:6;17774:14;17771:2;;;17791:5;;;;;;17356:624;:::o;17771:2::-;17875;17856:16;17850:4;17846:27;17842:36;17835:4;17826:6;17821:3;17817:16;17813:27;17810:69;17807:2;;;17882:5;;;;;;17356:624;:::o;17807:2::-;17898:57;17949:4;17940:6;17932;17928:19;17924:30;17918:4;17898:57;:::i;:::-;-1:-1:-1;17971:3:9;;17356:624;-1:-1:-1;;;;;17356:624:9:o;17985:131::-;-1:-1:-1;;;;;;18059:32:9;;18049:43;;18039:2;;18106:1;18103;18096:12;18039:2;18029:87;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1114000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "1377",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "23308",
								"supportsInterface(bytes4)": "544",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_asSingletonArray(uint256)": "infinite",
								"_balanceOf(address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1183,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1191,
									"end": 1195,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1183,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1183,
									"end": 1196,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1183,
									"end": 1196,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1183,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1141,
									"end": 1203,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8473,
									"end": 8559,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8473,
									"end": 8559,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8539,
									"end": 8552,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8539,
									"end": 8552,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8539,
									"end": 8552,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8539,
									"end": 8552,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8539,
									"end": 8543,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8539,
									"end": 8543,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8539,
									"end": 8552,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8539,
									"end": 8552,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8539,
									"end": 8552,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8539,
									"end": 8552,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8539,
									"end": 8552,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 8539,
									"end": 8552,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8539,
									"end": 8552,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8539,
									"end": 8552,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8539,
									"end": 8552,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8473,
									"end": 8559,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8473,
									"end": 8559,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 1151,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 1151,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 94,
									"end": 100,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 127,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 168,
									"end": 170,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 156,
									"end": 165,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 147,
									"end": 154,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 143,
									"end": 166,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 139,
									"end": 171,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 136,
									"end": 138,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 136,
									"end": 138,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 136,
									"end": 138,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 189,
									"end": 195,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 181,
									"end": 187,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 174,
									"end": 196,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 136,
									"end": 138,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 136,
									"end": 138,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 221,
									"end": 237,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 221,
									"end": 237,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 286,
									"end": 300,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 286,
									"end": 300,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 286,
									"end": 300,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 283,
									"end": 285,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 283,
									"end": 285,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 283,
									"end": 285,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 318,
									"end": 324,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 310,
									"end": 316,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 303,
									"end": 325,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 283,
									"end": 285,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 283,
									"end": 285,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 361,
									"end": 367,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 350,
									"end": 359,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 346,
									"end": 368,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 336,
									"end": 368,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 336,
									"end": 368,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 406,
									"end": 413,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 399,
									"end": 403,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 395,
									"end": 397,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 391,
									"end": 404,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 387,
									"end": 414,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 377,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 377,
									"end": 379,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 433,
									"end": 439,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 425,
									"end": 431,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 418,
									"end": 440,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 377,
									"end": 379,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 377,
									"end": 379,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 467,
									"end": 469,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 461,
									"end": 470,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 489,
									"end": 491,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 485,
									"end": 487,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 482,
									"end": 492,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 479,
									"end": 481,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 495,
									"end": 513,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 495,
									"end": 513,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 495,
									"end": 513,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 495,
									"end": 513,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 495,
									"end": 513,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 570,
									"end": 572,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 564,
									"end": 573,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 538,
									"end": 540,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 624,
									"end": 637,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 624,
									"end": 637,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 620,
									"end": 642,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 620,
									"end": 642,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 620,
									"end": 642,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 644,
									"end": 646,
									"name": "PUSH",
									"source": 9,
									"value": "3F"
								},
								{
									"begin": 616,
									"end": 647,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 612,
									"end": 652,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 600,
									"end": 653,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 600,
									"end": 653,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 600,
									"end": 653,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 668,
									"end": 686,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 668,
									"end": 686,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 668,
									"end": 686,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 688,
									"end": 710,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 688,
									"end": 710,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 688,
									"end": 710,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 665,
									"end": 711,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 662,
									"end": 664,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 662,
									"end": 664,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 662,
									"end": 664,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 714,
									"end": 732,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 714,
									"end": 732,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 714,
									"end": 732,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 714,
									"end": 732,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 714,
									"end": 732,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 754,
									"end": 764,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 750,
									"end": 752,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 743,
									"end": 765,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 789,
									"end": 791,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 781,
									"end": 787,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 774,
									"end": 792,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 829,
									"end": 836,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 824,
									"end": 826,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 819,
									"end": 821,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 815,
									"end": 817,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 811,
									"end": 822,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 807,
									"end": 827,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 804,
									"end": 837,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 801,
									"end": 803,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 801,
									"end": 803,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 801,
									"end": 803,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 855,
									"end": 861,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 847,
									"end": 853,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 840,
									"end": 862,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 801,
									"end": 803,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 801,
									"end": 803,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 882,
									"end": 888,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 873,
									"end": 888,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 873,
									"end": 888,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 911,
									"end": 913,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 908,
									"end": 909,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 905,
									"end": 914,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 999,
									"end": 1009,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 999,
									"end": 1009,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 999,
									"end": 1009,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 995,
									"end": 1014,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 995,
									"end": 1014,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 989,
									"end": 1015,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 968,
									"end": 982,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 968,
									"end": 982,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 968,
									"end": 982,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 964,
									"end": 987,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 964,
									"end": 987,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 957,
									"end": 1016,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 922,
									"end": 932,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 922,
									"end": 932,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 922,
									"end": 932,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 922,
									"end": 932,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1044,
									"end": 1046,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1041,
									"end": 1042,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1038,
									"end": 1047,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1035,
									"end": 1037,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1035,
									"end": 1037,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1035,
									"end": 1037,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1103,
									"end": 1109,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1100,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1093,
									"end": 1095,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1085,
									"end": 1091,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1081,
									"end": 1096,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1101,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1070,
									"end": 1110,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1035,
									"end": 1037,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1035,
									"end": 1037,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1139,
									"end": 1145,
									"name": "SWAP9",
									"source": 9
								},
								{
									"begin": 105,
									"end": 1151,
									"name": "SWAP8",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 105,
									"end": 1151,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1156,
									"end": 1536,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 1156,
									"end": 1536,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1235,
									"end": 1236,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1231,
									"end": 1243,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1243,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1243,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1243,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1278,
									"end": 1290,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1278,
									"end": 1290,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1278,
									"end": 1290,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1299,
									"end": 1301,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1299,
									"end": 1301,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1353,
									"end": 1357,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 1345,
									"end": 1351,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1341,
									"end": 1358,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1331,
									"end": 1358,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1331,
									"end": 1358,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1299,
									"end": 1301,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1299,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1406,
									"end": 1408,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1395,
									"end": 1409,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1375,
									"end": 1393,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1372,
									"end": 1410,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1369,
									"end": 1371,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1369,
									"end": 1371,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1369,
									"end": 1371,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1452,
									"end": 1462,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 1447,
									"end": 1450,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1443,
									"end": 1463,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1440,
									"end": 1441,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1433,
									"end": 1464,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1487,
									"end": 1491,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1477,
									"end": 1492,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1515,
									"end": 1519,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1512,
									"end": 1513,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 1520,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1369,
									"end": 1371,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1369,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1369,
									"end": 1371,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1211,
									"end": 1536,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1211,
									"end": 1536,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1211,
									"end": 1536,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1211,
									"end": 1536,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1541,
									"end": 1668,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1541,
									"end": 1668,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1602,
									"end": 1612,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 1597,
									"end": 1600,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1593,
									"end": 1613,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1590,
									"end": 1591,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1583,
									"end": 1614,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1633,
									"end": 1637,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1630,
									"end": 1631,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1623,
									"end": 1638,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1661,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1654,
									"end": 1655,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1647,
									"end": 1662,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1573,
									"end": 1668,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1573,
									"end": 1668,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 604,
									"end": 17422,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c018ce7ecf67a6699bbc729cef52370062e4a42c0d3c81aee2807cca19928c0b64736f6c63430008040033",
									".code": [
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 17422,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14952,
											"end": 14977,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14952,
											"end": 14977,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14952,
											"end": 14977,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14940,
											"end": 14942,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14925,
											"end": 14943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10439,
											"end": 10453,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10439,
											"end": 10453,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10432,
											"end": 10454,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10414,
											"end": 10455,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10414,
											"end": 10455,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10402,
											"end": 10404,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10387,
											"end": 10405,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 10369,
											"end": 10461,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3447,
											"end": 3600,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3447,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3447,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3447,
											"end": 3600,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3600,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3447,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3447,
											"end": 3600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3447,
											"end": 3600,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3447,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3447,
											"end": 3600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3667,
											"end": 3833,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3667,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3667,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3667,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3667,
											"end": 3833,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3667,
											"end": 3833,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3667,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3667,
											"end": 3833,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3667,
											"end": 3833,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3667,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3789,
											"end": 3816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3816,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3766,
											"end": 3770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3789,
											"end": 3816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3807,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3789,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3789,
											"end": 3816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3789,
											"end": 3816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3816,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3816,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3826,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3826,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3826,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3826,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3826,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3826,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3789,
											"end": 3826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3667,
											"end": 3833,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3900,
											"end": 4289,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3900,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3900,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3900,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3900,
											"end": 4289,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3900,
											"end": 4289,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3900,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3900,
											"end": 4289,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3900,
											"end": 4289,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3900,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3900,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3900,
											"end": 4289,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2424,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2443,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2443,
											"end": 2519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2443,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2443,
											"end": 2519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2443,
											"end": 2519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12132,
											"end": 12134,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2443,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2443,
											"end": 2519,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2443,
											"end": 2519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12114,
											"end": 12135,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12171,
											"end": 12173,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 12151,
											"end": 12169,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12151,
											"end": 12169,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12151,
											"end": 12169,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12144,
											"end": 12174,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12210,
											"end": 12244,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2061646472657373207A65726F206973206E6F7420612076"
										},
										{
											"begin": 12190,
											"end": 12208,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 12190,
											"end": 12208,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12190,
											"end": 12208,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12183,
											"end": 12245,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12261,
											"end": 12279,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12261,
											"end": 12279,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12261,
											"end": 12279,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12254,
											"end": 12294,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12311,
											"end": 12330,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 12311,
											"end": 12330,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2443,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2443,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2443,
											"end": 2519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2443,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2443,
											"end": 2519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2443,
											"end": 2519,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2443,
											"end": 2519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2443,
											"end": 2519,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2443,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2443,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2690,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2677,
											"end": 2690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2690,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2690,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2677,
											"end": 2699,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2699,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2699,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2699,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2699,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2559,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2536,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2559,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2338,
											"end": 2566,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1407,
											"end": 1448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1407,
											"end": 1448,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1407,
											"end": 1516,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1464,
											"end": 1516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1464,
											"end": 1516,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1516,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1407,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1407,
											"end": 1568,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1532,
											"end": 1568,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1532,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1568,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1270,
											"end": 1575,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2050,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2123,
											"end": 2127,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2162,
											"end": 2164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2089,
											"end": 2179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2196,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4586,
											"end": 4606,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4586,
											"end": 4606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4606,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4586,
											"end": 4606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4586,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4586,
											"end": 4646,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3667,
											"end": 3833,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4610,
											"end": 4646,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4610,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4565,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4565,
											"end": 4722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4565,
											"end": 4722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4565,
											"end": 4722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4565,
											"end": 4722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4565,
											"end": 4722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12949,
											"end": 12951,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4565,
											"end": 4722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4565,
											"end": 4722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4565,
											"end": 4722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12952,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12988,
											"end": 12990,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 12968,
											"end": 12986,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12968,
											"end": 12986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12968,
											"end": 12986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12961,
											"end": 12991,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13027,
											"end": 13061,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 13007,
											"end": 13025,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 13007,
											"end": 13025,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13007,
											"end": 13025,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13000,
											"end": 13062,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13078,
											"end": 13096,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13078,
											"end": 13096,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13078,
											"end": 13096,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13071,
											"end": 13119,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13136,
											"end": 13155,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 13136,
											"end": 13155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12921,
											"end": 13161,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4722,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4565,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4732,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4755,
											"end": 4759,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4761,
											"end": 4763,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4768,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4777,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4779,
											"end": 4783,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4732,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4732,
											"end": 4784,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4732,
											"end": 4784,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4732,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4361,
											"end": 4791,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3073,
											"end": 3076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3062,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3046,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3046,
											"end": 3129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3046,
											"end": 3129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3046,
											"end": 3129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3046,
											"end": 3129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3046,
											"end": 3129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14189,
											"end": 14191,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3046,
											"end": 3129,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3046,
											"end": 3129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3046,
											"end": 3129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14171,
											"end": 14192,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14228,
											"end": 14230,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 14208,
											"end": 14226,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14208,
											"end": 14226,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14208,
											"end": 14226,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14201,
											"end": 14231,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14267,
											"end": 14301,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 14247,
											"end": 14265,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 14247,
											"end": 14265,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14247,
											"end": 14265,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14240,
											"end": 14302,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14318,
											"end": 14336,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 14318,
											"end": 14336,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14318,
											"end": 14336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14311,
											"end": 14350,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14367,
											"end": 14386,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 14367,
											"end": 14386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3046,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14161,
											"end": 14392,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3046,
											"end": 3129,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3046,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3148,
											"end": 3178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3203,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3148,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3148,
											"end": 3211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3342,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3222,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3246,
											"end": 3254,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3246,
											"end": 3261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3261,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3342,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3222,
											"end": 3342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3311,
											"end": 3319,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3311,
											"end": 3322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3311,
											"end": 3322,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3311,
											"end": 3322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3311,
											"end": 3322,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3311,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3311,
											"end": 3322,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3311,
											"end": 3322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3311,
											"end": 3322,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3311,
											"end": 3322,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3311,
											"end": 3322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3311,
											"end": 3322,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3311,
											"end": 3322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3322,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3311,
											"end": 3322,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3311,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3311,
											"end": 3322,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3311,
											"end": 3322,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3311,
											"end": 3322,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3311,
											"end": 3322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3311,
											"end": 3322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3311,
											"end": 3322,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3327,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3301,
											"end": 3331,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3301,
											"end": 3331,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3301,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3295,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3297,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3263,
											"end": 3266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3263,
											"end": 3266,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3263,
											"end": 3266,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3263,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3222,
											"end": 3342,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3342,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3222,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3359,
											"end": 3372,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2863,
											"end": 3379,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3447,
											"end": 3600,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3447,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3574,
											"end": 3582,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3592,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3541,
											"end": 3593,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3541,
											"end": 3593,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3541,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3600,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3900,
											"end": 4289,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3900,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4100,
											"end": 4120,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4100,
											"end": 4120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4100,
											"end": 4120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4100,
											"end": 4120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4100,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4100,
											"end": 4160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4124,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4141,
											"end": 4145,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3667,
											"end": 3833,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4124,
											"end": 4160,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4124,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4079,
											"end": 4227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4079,
											"end": 4227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4079,
											"end": 4227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11722,
											"end": 11724,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4227,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4079,
											"end": 4227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11704,
											"end": 11725,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11761,
											"end": 11763,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 11741,
											"end": 11759,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11741,
											"end": 11759,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11741,
											"end": 11759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11734,
											"end": 11764,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11800,
											"end": 11834,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 11780,
											"end": 11798,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11780,
											"end": 11798,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11780,
											"end": 11798,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11773,
											"end": 11835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11851,
											"end": 11869,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11851,
											"end": 11869,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11851,
											"end": 11869,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11844,
											"end": 11883,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11900,
											"end": 11919,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 11900,
											"end": 11919,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11694,
											"end": 11925,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4227,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4079,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4255,
											"end": 4259,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4261,
											"end": 4263,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4267,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4275,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4281,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4237,
											"end": 4282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 384,
											"end": 397,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 601,
											"end": 611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 657,
											"end": 669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 718,
											"end": 727,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 718,
											"end": 727,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 743,
											"end": 751,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 773,
											"end": 775,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 765,
											"end": 775,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 795,
											"end": 814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 795,
											"end": 834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 795,
											"end": 834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 844,
											"end": 994,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 851,
											"end": 861,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 851,
											"end": 861,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 945,
											"end": 950,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 919,
											"end": 958,
											"name": "PUSH",
											"source": 6,
											"value": "F8"
										},
										{
											"begin": 919,
											"end": 958,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 902,
											"end": 908,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 902,
											"end": 958,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 958,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 981,
											"end": 983,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 972,
											"end": 983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 844,
											"end": 994,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 1023,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6535,
											"end": 7650,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6535,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6755,
											"end": 6762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6755,
											"end": 6769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6741,
											"end": 6744,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6741,
											"end": 6751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6741,
											"end": 6769,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6733,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6733,
											"end": 6814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6733,
											"end": 6814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6733,
											"end": 6814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6733,
											"end": 6814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6733,
											"end": 6814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14599,
											"end": 14601,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6733,
											"end": 6814,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6733,
											"end": 6814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6733,
											"end": 6814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14581,
											"end": 14602,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14638,
											"end": 14640,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 14618,
											"end": 14636,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14618,
											"end": 14636,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14618,
											"end": 14636,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14611,
											"end": 14641,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14677,
											"end": 14711,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 14657,
											"end": 14675,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 14657,
											"end": 14675,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14657,
											"end": 14675,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14650,
											"end": 14712,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14728,
											"end": 14746,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 14728,
											"end": 14746,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14728,
											"end": 14746,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14721,
											"end": 14759,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14776,
											"end": 14795,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 14776,
											"end": 14795,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14571,
											"end": 14801,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6814,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6733,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6832,
											"end": 6848,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6832,
											"end": 6848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6824,
											"end": 6890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6824,
											"end": 6890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6824,
											"end": 6890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6890,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6824,
											"end": 6890,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6824,
											"end": 6890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 6824,
											"end": 6890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6824,
											"end": 6890,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6824,
											"end": 6890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6901,
											"end": 6917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7014,
											"end": 7425,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 7014,
											"end": 7425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7041,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7048,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7034,
											"end": 7035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7034,
											"end": 7048,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7014,
											"end": 7425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7014,
											"end": 7425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 7014,
											"end": 7425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7069,
											"end": 7079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7082,
											"end": 7085,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7069,
											"end": 7088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7069,
											"end": 7088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7102,
											"end": 7116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7119,
											"end": 7126,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7127,
											"end": 7128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7179,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7179,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7166,
											"end": 7179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7179,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7179,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7166,
											"end": 7185,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7185,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7185,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7185,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7185,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7207,
											"end": 7228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7207,
											"end": 7228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7207,
											"end": 7228,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7207,
											"end": 7228,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7199,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 7199,
											"end": 7275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7199,
											"end": 7275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7199,
											"end": 7275,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7199,
											"end": 7275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7199,
											"end": 7275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7199,
											"end": 7275,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7199,
											"end": 7275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7199,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7199,
											"end": 7275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7199,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 7199,
											"end": 7275,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7199,
											"end": 7275,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 7199,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7317,
											"end": 7330,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7330,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7330,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7317,
											"end": 7330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7330,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7330,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7317,
											"end": 7330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7330,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7330,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7317,
											"end": 7336,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7336,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7336,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7336,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7336,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7339,
											"end": 7359,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7339,
											"end": 7359,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7339,
											"end": 7359,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7359,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7387,
											"end": 7404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7387,
											"end": 7404,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 7387,
											"end": 7404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7387,
											"end": 7404,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7387,
											"end": 7404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7387,
											"end": 7404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7387,
											"end": 7404,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7387,
											"end": 7414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7387,
											"end": 7414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7339,
											"end": 7359,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7339,
											"end": 7359,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7317,
											"end": 7326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7387,
											"end": 7414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 7387,
											"end": 7414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7339,
											"end": 7359,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7339,
											"end": 7359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7387,
											"end": 7414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7387,
											"end": 7414,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7387,
											"end": 7414,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 7387,
											"end": 7414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7387,
											"end": 7414,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7387,
											"end": 7414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7387,
											"end": 7414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7387,
											"end": 7414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7387,
											"end": 7414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7387,
											"end": 7414,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7387,
											"end": 7414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7014,
											"end": 7425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7014,
											"end": 7425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7014,
											"end": 7425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 7050,
											"end": 7053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 7050,
											"end": 7053,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7050,
											"end": 7053,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 7050,
											"end": 7053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7014,
											"end": 7425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 7014,
											"end": 7425,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7014,
											"end": 7425,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 7014,
											"end": 7425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7014,
											"end": 7425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7472,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7440,
											"end": 7487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7468,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7440,
											"end": 7487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7462,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7440,
											"end": 7487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7487,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7474,
											"end": 7477,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7479,
											"end": 7486,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7487,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7440,
											"end": 7487,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 7440,
											"end": 7487,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 7440,
											"end": 7487,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7440,
											"end": 7487,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 7440,
											"end": 7487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7487,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7440,
											"end": 7487,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7487,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7568,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7604,
											"end": 7612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7614,
											"end": 7618,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7622,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7624,
											"end": 7627,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7629,
											"end": 7636,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7638,
											"end": 7642,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7568,
											"end": 7603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7568,
											"end": 7643,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7568,
											"end": 7643,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7568,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6535,
											"end": 7650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6535,
											"end": 7650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6535,
											"end": 7650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6535,
											"end": 7650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6535,
											"end": 7650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6535,
											"end": 7650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6535,
											"end": 7650,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13075,
											"end": 13398,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 13075,
											"end": 13398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13225,
											"end": 13233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13216,
											"end": 13221,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13208,
											"end": 13279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 13208,
											"end": 13279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13208,
											"end": 13279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13208,
											"end": 13279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13208,
											"end": 13279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13208,
											"end": 13279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13779,
											"end": 13781,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13208,
											"end": 13279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13208,
											"end": 13279,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13208,
											"end": 13279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13761,
											"end": 13782,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13818,
											"end": 13820,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 13798,
											"end": 13816,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13798,
											"end": 13816,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13798,
											"end": 13816,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13791,
											"end": 13821,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13891,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 13837,
											"end": 13855,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 13837,
											"end": 13855,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13837,
											"end": 13855,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13830,
											"end": 13892,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13908,
											"end": 13926,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13908,
											"end": 13926,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13908,
											"end": 13926,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13901,
											"end": 13940,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13957,
											"end": 13976,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 13957,
											"end": 13976,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13208,
											"end": 13279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13751,
											"end": 13982,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13208,
											"end": 13279,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 13208,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13289,
											"end": 13314,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13289,
											"end": 13314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13307,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13289,
											"end": 13314,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13289,
											"end": 13314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13289,
											"end": 13314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13314,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13314,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13324,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13324,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13324,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13324,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13324,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13324,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13324,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13289,
											"end": 13335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13335,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13335,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13335,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10414,
											"end": 10455,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10414,
											"end": 10455,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10414,
											"end": 10455,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13350,
											"end": 13391,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13350,
											"end": 13391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10387,
											"end": 10405,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13350,
											"end": 13391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13350,
											"end": 13391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13391,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13350,
											"end": 13391,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13398,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5242,
											"end": 6189,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5242,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5423,
											"end": 5439,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5439,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5415,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5415,
											"end": 5481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5415,
											"end": 5481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5415,
											"end": 5481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5415,
											"end": 5481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5415,
											"end": 5481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5415,
											"end": 5481,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5415,
											"end": 5481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5415,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5415,
											"end": 5481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5415,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5415,
											"end": 5481,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5415,
											"end": 5481,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5415,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5492,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5574,
											"end": 5576,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5533,
											"end": 5577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5533,
											"end": 5577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5614,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 5632,
											"end": 5638,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5614,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5614,
											"end": 5639,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5614,
											"end": 5639,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 5614,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5743,
											"end": 5756,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5743,
											"end": 5756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5743,
											"end": 5756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5743,
											"end": 5756,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5743,
											"end": 5756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5743,
											"end": 5756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5743,
											"end": 5756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5743,
											"end": 5756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5743,
											"end": 5756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5743,
											"end": 5756,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5743,
											"end": 5756,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5743,
											"end": 5762,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 5743,
											"end": 5762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5743,
											"end": 5762,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5743,
											"end": 5762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5743,
											"end": 5762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5743,
											"end": 5762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5743,
											"end": 5762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5743,
											"end": 5762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5743,
											"end": 5762,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5743,
											"end": 5762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5780,
											"end": 5801,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5780,
											"end": 5801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5780,
											"end": 5801,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5780,
											"end": 5801,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5772,
											"end": 5848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5772,
											"end": 5848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5772,
											"end": 5848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5848,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5772,
											"end": 5848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5772,
											"end": 5848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5772,
											"end": 5848,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5772,
											"end": 5848,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5772,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5882,
											"end": 5895,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5882,
											"end": 5895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5882,
											"end": 5895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5882,
											"end": 5901,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5901,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5901,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5901,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5901,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5924,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5924,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5924,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5924,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 5961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 5961,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 5961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 5961,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 5961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 5961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 5961,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 5971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 5971,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5924,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5924,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5944,
											"end": 5971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5924,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5944,
											"end": 5971,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5944,
											"end": 5971,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5944,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 5971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 5971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 5971,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15162,
											"end": 15187,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 15162,
											"end": 15187,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15162,
											"end": 15187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15218,
											"end": 15220,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15203,
											"end": 15221,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15203,
											"end": 15221,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15196,
											"end": 15230,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 15196,
											"end": 15230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15196,
											"end": 15230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15135,
											"end": 15153,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6033,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 6145,
											"end": 6153,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6159,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6161,
											"end": 6163,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6165,
											"end": 6167,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6169,
											"end": 6175,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6177,
											"end": 6181,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6114,
											"end": 6182,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6114,
											"end": 6182,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 6114,
											"end": 6182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5242,
											"end": 6189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5242,
											"end": 6189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5242,
											"end": 6189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5242,
											"end": 6189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5242,
											"end": 6189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5242,
											"end": 6189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5242,
											"end": 6189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5242,
											"end": 6189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5242,
											"end": 6189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5242,
											"end": 6189,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16429,
											"end": 17221,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 16429,
											"end": 17221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16661,
											"end": 16674,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16657,
											"end": 17215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 16657,
											"end": 17215,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16696,
											"end": 16739,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16739,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16739,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 16696,
											"end": 16739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16740,
											"end": 16748,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16740,
											"end": 16748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16750,
											"end": 16754,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16750,
											"end": 16754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16756,
											"end": 16759,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16756,
											"end": 16759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16768,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16770,
											"end": 16774,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16770,
											"end": 16774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 16696,
											"end": 16775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17081,
											"end": 17087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17074,
											"end": 17088,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17074,
											"end": 17088,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17074,
											"end": 17088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17074,
											"end": 17088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17074,
											"end": 17088,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17074,
											"end": 17088,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17074,
											"end": 17088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 17074,
											"end": 17088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17074,
											"end": 17088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17074,
											"end": 17088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 17074,
											"end": 17088,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17128,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17128,
											"end": 17190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17128,
											"end": 17190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17128,
											"end": 17190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10892,
											"end": 10894,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17128,
											"end": 17190,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17128,
											"end": 17190,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17128,
											"end": 17190,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10874,
											"end": 10895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10931,
											"end": 10933,
											"name": "PUSH",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 10911,
											"end": 10929,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10911,
											"end": 10929,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10911,
											"end": 10929,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 10934,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10970,
											"end": 11004,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 10950,
											"end": 10968,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10950,
											"end": 10968,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10950,
											"end": 10968,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10943,
											"end": 11005,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11021,
											"end": 11039,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11021,
											"end": 11039,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11021,
											"end": 11039,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11014,
											"end": 11064,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11081,
											"end": 11100,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 11081,
											"end": 11100,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17128,
											"end": 17190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 10864,
											"end": 11106,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 16692,
											"end": 17205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16854,
											"end": 16914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16854,
											"end": 16914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16854,
											"end": 16914,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16850,
											"end": 17007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 16850,
											"end": 17007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16938,
											"end": 16988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16938,
											"end": 16988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16938,
											"end": 16988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16938,
											"end": 16988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16938,
											"end": 16988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16938,
											"end": 16988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16938,
											"end": 16988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 16938,
											"end": 16988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16938,
											"end": 16988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 16938,
											"end": 16988,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16850,
											"end": 17007,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 16850,
											"end": 17007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16776,
											"end": 17021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 17221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 17221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 17221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 17221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 17221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 17221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 17221,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17227,
											"end": 17420,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 17227,
											"end": 17420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17360,
											"end": 17361,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17293,
											"end": 17309,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17293,
											"end": 17309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17321,
											"end": 17343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17346,
											"end": 17362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17383,
											"end": 17390,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17378,
											"end": 17379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17372,
											"end": 17390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17408,
											"end": 17413,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17227,
											"end": 17420,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15698,
											"end": 16423,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 15698,
											"end": 16423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15905,
											"end": 15918,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15905,
											"end": 15918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15901,
											"end": 16417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 15901,
											"end": 16417,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15940,
											"end": 15978,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 15978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 15978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 15978,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 15940,
											"end": 15978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15979,
											"end": 15987,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 15979,
											"end": 15987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15989,
											"end": 15993,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 15989,
											"end": 15993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15995,
											"end": 15997,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15995,
											"end": 15997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16005,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15999,
											"end": 16005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16007,
											"end": 16011,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16007,
											"end": 16011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 15940,
											"end": 16012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15936,
											"end": 16407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 15936,
											"end": 16407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15936,
											"end": 16407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 15936,
											"end": 16407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 15936,
											"end": 16407,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15936,
											"end": 16407,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 15936,
											"end": 16407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16061,
											"end": 16116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16061,
											"end": 16116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16061,
											"end": 16116,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16057,
											"end": 16209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 16057,
											"end": 16209,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16140,
											"end": 16190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16140,
											"end": 16190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16140,
											"end": 16190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16140,
											"end": 16190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16140,
											"end": 16190,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16140,
											"end": 16190,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16140,
											"end": 16190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 16140,
											"end": 16190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16140,
											"end": 16190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 16140,
											"end": 16190,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 111,
											"end": 113,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 63,
											"end": 187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 63,
											"end": 187,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 947,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 192,
											"end": 947,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 246,
											"end": 251,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 292,
											"end": 296,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 280,
											"end": 297,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 276,
											"end": 303,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 266,
											"end": 268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 266,
											"end": 268,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 321,
											"end": 326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 314,
											"end": 319,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 307,
											"end": 327,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 266,
											"end": 268,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 266,
											"end": 268,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 361,
											"end": 367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 348,
											"end": 368,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 387,
											"end": 391,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 410,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 450,
											"end": 452,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 410,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 410,
											"end": 453,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 410,
											"end": 453,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 410,
											"end": 453,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 482,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 476,
											"end": 485,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 494,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 522,
											"end": 524,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 514,
											"end": 520,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 494,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 494,
											"end": 525,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 494,
											"end": 525,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 494,
											"end": 525,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 560,
											"end": 578,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 560,
											"end": 578,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 560,
											"end": 578,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 594,
											"end": 609,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 594,
											"end": 609,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 594,
											"end": 609,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 594,
											"end": 609,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 629,
											"end": 644,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 629,
											"end": 644,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 629,
											"end": 644,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 679,
											"end": 680,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 675,
											"end": 685,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 675,
											"end": 685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 675,
											"end": 685,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 663,
											"end": 686,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 663,
											"end": 686,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 659,
											"end": 691,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 659,
											"end": 691,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 656,
											"end": 697,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 653,
											"end": 655,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 653,
											"end": 655,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 714,
											"end": 719,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 707,
											"end": 712,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 700,
											"end": 720,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 653,
											"end": 655,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 653,
											"end": 655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 754,
											"end": 917,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 754,
											"end": 917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 768,
											"end": 770,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 765,
											"end": 766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 762,
											"end": 771,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 754,
											"end": 917,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 754,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 754,
											"end": 917,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 825,
											"end": 842,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 825,
											"end": 842,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 813,
											"end": 843,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 813,
											"end": 843,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 863,
											"end": 875,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 863,
											"end": 875,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 863,
											"end": 875,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 863,
											"end": 875,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 895,
											"end": 907,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 895,
											"end": 907,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 895,
											"end": 907,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 895,
											"end": 907,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 786,
											"end": 787,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 779,
											"end": 788,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 754,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 754,
											"end": 917,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 754,
											"end": 917,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 754,
											"end": 917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 935,
											"end": 941,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 935,
											"end": 941,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 256,
											"end": 947,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 256,
											"end": 947,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 952,
											"end": 1527,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 952,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 994,
											"end": 999,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1050,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1040,
											"end": 1044,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1032,
											"end": 1038,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1028,
											"end": 1045,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 1014,
											"end": 1016,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1075,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1016,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 1014,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1115,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1096,
											"end": 1116,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1153,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1125,
											"end": 1127,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1125,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 1125,
											"end": 1127,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1206,
											"end": 1208,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1200,
											"end": 1209,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 1273,
											"end": 1275,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1254,
											"end": 1267,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1267,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1250,
											"end": 1277,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1283,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1246,
											"end": 1284,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1200,
											"end": 1209,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 1218,
											"end": 1285,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1285,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 1218,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1309,
											"end": 1311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1358,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1352,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1345,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1324,
											"end": 1359,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1321,
											"end": 1323,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1321,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 1321,
											"end": 1323,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1376,
											"end": 1381,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1369,
											"end": 1374,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1382,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1321,
											"end": 1323,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 1321,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1441,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1429,
											"end": 1435,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1418,
											"end": 1422,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1410,
											"end": 1416,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1406,
											"end": 1423,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1393,
											"end": 1447,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1482,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1482,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1482,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1488,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1463,
											"end": 1489,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1497,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1497,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1497,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1497,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1004,
											"end": 1527,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1004,
											"end": 1527,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1532,
											"end": 1802,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1532,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1606,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1614,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1661,
											"end": 1663,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1647,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1636,
											"end": 1659,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1664,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1674,
											"end": 1680,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1667,
											"end": 1689,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1700,
											"end": 1739,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1700,
											"end": 1739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 1792,
											"end": 1794,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1790,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1796,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1802,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1802,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1802,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1807,
											"end": 2790,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1807,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1967,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1975,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1983,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 1991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2049,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 2034,
											"end": 2043,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2032,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2021,
											"end": 2044,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2017,
											"end": 2050,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2060,
											"end": 2066,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2053,
											"end": 2075,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 2115,
											"end": 2124,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2096,
											"end": 2125,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2096,
											"end": 2125,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 2096,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 2178,
											"end": 2180,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2176,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2144,
											"end": 2182,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2144,
											"end": 2182,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 2144,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2182,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2233,
											"end": 2235,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2222,
											"end": 2231,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2218,
											"end": 2236,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2205,
											"end": 2237,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2256,
											"end": 2274,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2289,
											"end": 2295,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2300,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2318,
											"end": 2324,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2325,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2346,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2399,
											"end": 2406,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2396,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 2375,
											"end": 2397,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2346,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 2346,
											"end": 2407,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2346,
											"end": 2407,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2346,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2407,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2407,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2462,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2449,
											"end": 2458,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2445,
											"end": 2463,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2464,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2416,
											"end": 2464,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2416,
											"end": 2464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2489,
											"end": 2491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2479,
											"end": 2487,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2476,
											"end": 2492,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2473,
											"end": 2475,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2473,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 2473,
											"end": 2475,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2510,
											"end": 2516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2502,
											"end": 2508,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2495,
											"end": 2517,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2473,
											"end": 2475,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 2473,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2538,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 2593,
											"end": 2600,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2582,
											"end": 2590,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2571,
											"end": 2580,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2538,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 2538,
											"end": 2601,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2538,
											"end": 2601,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 2538,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2601,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2601,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2657,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2643,
											"end": 2652,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2626,
											"end": 2659,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2684,
											"end": 2686,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 2682,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2671,
											"end": 2687,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2711,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2703,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 2776,
											"end": 2783,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2765,
											"end": 2773,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2750,
											"end": 2774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 2733,
											"end": 2784,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2733,
											"end": 2784,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 2733,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 2784,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 2784,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 2784,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2795,
											"end": 3421,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 2795,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2913,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 2921,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2929,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2931,
											"end": 2937,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 2987,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2963,
											"end": 2970,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 2982,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2955,
											"end": 2988,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 2954,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 2952,
											"end": 2954,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3012,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2998,
											"end": 3004,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3013,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 2954,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 2952,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 3053,
											"end": 3062,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3034,
											"end": 3063,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3034,
											"end": 3063,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 3034,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3063,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 3116,
											"end": 3118,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3082,
											"end": 3120,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3082,
											"end": 3120,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 3082,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3120,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3120,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3169,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3156,
											"end": 3165,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3152,
											"end": 3170,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3139,
											"end": 3171,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3171,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3171,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3218,
											"end": 3220,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3207,
											"end": 3216,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3190,
											"end": 3222,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3222,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3222,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 3276,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3262,
											"end": 3271,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3258,
											"end": 3277,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 3278,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3301,
											"end": 3319,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3293,
											"end": 3299,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3290,
											"end": 3320,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3289,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 3287,
											"end": 3289,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3338,
											"end": 3344,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3336,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3323,
											"end": 3345,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3289,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 3287,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3387,
											"end": 3396,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3405,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 3366,
											"end": 3415,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3426,
											"end": 3793,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3426,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3491,
											"end": 3497,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3505,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3554,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3540,
											"end": 3549,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3531,
											"end": 3538,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3550,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3555,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3573,
											"end": 3579,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3565,
											"end": 3571,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3558,
											"end": 3580,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3601,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 3620,
											"end": 3629,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3601,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3601,
											"end": 3630,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3601,
											"end": 3630,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 3601,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3630,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3630,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3680,
											"end": 3682,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3678,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3684,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 3732,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3720,
											"end": 3733,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3713,
											"end": 3734,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3706,
											"end": 3711,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3703,
											"end": 3735,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 3693,
											"end": 3695,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3754,
											"end": 3760,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3761,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3695,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 3693,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3782,
											"end": 3787,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3793,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3793,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3793,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3793,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3798,
											"end": 4062,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 3798,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3866,
											"end": 3872,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3927,
											"end": 3929,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3915,
											"end": 3924,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 3913,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3902,
											"end": 3925,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3898,
											"end": 3930,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 3897,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 3895,
											"end": 3897,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3940,
											"end": 3946,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3933,
											"end": 3955,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 3897,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 3895,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3976,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 3995,
											"end": 4004,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3976,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3976,
											"end": 4005,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4005,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 3976,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3966,
											"end": 4005,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4052,
											"end": 4054,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4037,
											"end": 4055,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4037,
											"end": 4055,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4037,
											"end": 4055,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4037,
											"end": 4055,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4056,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4056,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3885,
											"end": 4062,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4067,
											"end": 5341,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 4067,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4191,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4193,
											"end": 4199,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4246,
											"end": 4248,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4234,
											"end": 4243,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4232,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4221,
											"end": 4244,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4267,
											"end": 4273,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4259,
											"end": 4265,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4274,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4312,
											"end": 4321,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4322,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4341,
											"end": 4359,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4382,
											"end": 4384,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4374,
											"end": 4380,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4371,
											"end": 4385,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4403,
											"end": 4409,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4395,
											"end": 4401,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4410,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4446,
											"end": 4452,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4435,
											"end": 4444,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4453,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4421,
											"end": 4453,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4421,
											"end": 4453,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4498,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4484,
											"end": 4488,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4480,
											"end": 4482,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4489,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4499,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4462,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 4462,
											"end": 4464,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4518,
											"end": 4524,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4516,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4525,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4462,
											"end": 4464,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 4462,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4559,
											"end": 4561,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4546,
											"end": 4562,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4581,
											"end": 4585,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4604,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 4644,
											"end": 4646,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4604,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4604,
											"end": 4647,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4604,
											"end": 4647,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 4604,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4676,
											"end": 4678,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4670,
											"end": 4679,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4688,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 4716,
											"end": 4718,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4714,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4688,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 4688,
											"end": 4719,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4688,
											"end": 4719,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 4688,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4754,
											"end": 4772,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4754,
											"end": 4772,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4754,
											"end": 4772,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 4803,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 4803,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 4803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 4803,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4823,
											"end": 4834,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4823,
											"end": 4834,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4823,
											"end": 4834,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4865,
											"end": 4866,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4861,
											"end": 4871,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 4871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 4871,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4872,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4872,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4849,
											"end": 4877,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4849,
											"end": 4877,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4887,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4897,
											"end": 4903,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4932,
											"end": 4938,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4938,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4938,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4958,
											"end": 4959,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4955,
											"end": 4964,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5018,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 5037,
											"end": 5040,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5018,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 5018,
											"end": 5041,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5018,
											"end": 5041,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 5018,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5006,
											"end": 5042,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5006,
											"end": 5042,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4979,
											"end": 4980,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4972,
											"end": 4981,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 4972,
											"end": 4981,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4972,
											"end": 4981,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 4972,
											"end": 4981,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4972,
											"end": 4981,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5135,
											"end": 5141,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5179,
											"end": 5197,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5179,
											"end": 5197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5166,
											"end": 5198,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5166,
											"end": 5198,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5210,
											"end": 5226,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5210,
											"end": 5226,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5210,
											"end": 5226,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5244,
											"end": 5250,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5236,
											"end": 5242,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5229,
											"end": 5251,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 5327,
											"end": 5334,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5316,
											"end": 5324,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5305,
											"end": 5314,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 5272,
											"end": 5335,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5272,
											"end": 5335,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 5272,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5262,
											"end": 5335,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5262,
											"end": 5335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5262,
											"end": 5335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 5341,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 5341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 5341,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 5341,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 5341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 5341,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5346,
											"end": 5601,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5459,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5445,
											"end": 5454,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5436,
											"end": 5443,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5432,
											"end": 5455,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5428,
											"end": 5460,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5427,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 5425,
											"end": 5427,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5484,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5427,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 5425,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5531,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 5565,
											"end": 5570,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 5541,
											"end": 5571,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5606,
											"end": 5865,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 5606,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5728,
											"end": 5730,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5716,
											"end": 5725,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5707,
											"end": 5714,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5703,
											"end": 5726,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5699,
											"end": 5731,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5696,
											"end": 5698,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5696,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 5696,
											"end": 5698,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5755,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5741,
											"end": 5747,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5734,
											"end": 5756,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5696,
											"end": 5698,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 5696,
											"end": 5698,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5786,
											"end": 5795,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5780,
											"end": 5796,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5805,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 5829,
											"end": 5834,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5805,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 5805,
											"end": 5835,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5870,
											"end": 6060,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5870,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5935,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5982,
											"end": 5984,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5970,
											"end": 5979,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5961,
											"end": 5968,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5957,
											"end": 5980,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5953,
											"end": 5985,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5950,
											"end": 5952,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5950,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 5950,
											"end": 5952,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6009,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5995,
											"end": 6001,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5988,
											"end": 6010,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5950,
											"end": 5952,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 5950,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6031,
											"end": 6054,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6031,
											"end": 6054,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 6060,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5940,
											"end": 6060,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6065,
											"end": 6502,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 6065,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6121,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6156,
											"end": 6161,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6162,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6183,
											"end": 6189,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6181,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6171,
											"end": 6190,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6213,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6238,
											"end": 6240,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6236,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6229,
											"end": 6241,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6241,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6275,
											"end": 6277,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6268,
											"end": 6273,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6264,
											"end": 6278,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6296,
											"end": 6299,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6322,
											"end": 6328,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6319,
											"end": 6320,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6316,
											"end": 6329,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6383,
											"end": 6396,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6383,
											"end": 6396,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6371,
											"end": 6397,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6371,
											"end": 6397,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6429,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6429,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6429,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6429,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6345,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6337,
											"end": 6346,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6493,
											"end": 6496,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6493,
											"end": 6496,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6502,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6126,
											"end": 6502,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6507,
											"end": 6764,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 6507,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6551,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6586,
											"end": 6591,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6580,
											"end": 6592,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6613,
											"end": 6619,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6608,
											"end": 6611,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6620,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 6685,
											"end": 6691,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6678,
											"end": 6682,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6673,
											"end": 6676,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6683,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6662,
											"end": 6666,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6655,
											"end": 6660,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6651,
											"end": 6667,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 6629,
											"end": 6692,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6629,
											"end": 6692,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 6629,
											"end": 6692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6748,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6725,
											"end": 6740,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6721,
											"end": 6750,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6712,
											"end": 6751,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6712,
											"end": 6751,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6712,
											"end": 6751,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6712,
											"end": 6751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6753,
											"end": 6757,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6708,
											"end": 6758,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6708,
											"end": 6758,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6556,
											"end": 6764,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6556,
											"end": 6764,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6769,
											"end": 6954,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 6769,
											"end": 6954,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6811,
											"end": 6814,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6849,
											"end": 6854,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6843,
											"end": 6855,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6864,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 6909,
											"end": 6915,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6904,
											"end": 6907,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6897,
											"end": 6901,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6890,
											"end": 6895,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6886,
											"end": 6902,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6864,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 6864,
											"end": 6916,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6864,
											"end": 6916,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 6864,
											"end": 6916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6932,
											"end": 6948,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6932,
											"end": 6948,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6932,
											"end": 6948,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6932,
											"end": 6948,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6932,
											"end": 6948,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6819,
											"end": 6954,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6819,
											"end": 6954,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6959,
											"end": 8137,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 6959,
											"end": 8137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7135,
											"end": 7138,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7164,
											"end": 7167,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7199,
											"end": 7205,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7193,
											"end": 7206,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7229,
											"end": 7232,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7251,
											"end": 7252,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7279,
											"end": 7288,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7275,
											"end": 7277,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7271,
											"end": 7289,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7289,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7289,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7341,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7328,
											"end": 7337,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7324,
											"end": 7342,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7361,
											"end": 7379,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7351,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 7351,
											"end": 7353,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7405,
											"end": 7409,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 7397,
											"end": 7403,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7393,
											"end": 7410,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7383,
											"end": 7410,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7383,
											"end": 7410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7351,
											"end": 7353,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 7351,
											"end": 7353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7431,
											"end": 7433,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7479,
											"end": 7481,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7471,
											"end": 7477,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7468,
											"end": 7482,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7448,
											"end": 7466,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7445,
											"end": 7483,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7442,
											"end": 7444,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7442,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 7442,
											"end": 7444,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7506,
											"end": 7539,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7506,
											"end": 7539,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7562,
											"end": 7566,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 7559,
											"end": 7560,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7552,
											"end": 7567,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7592,
											"end": 7596,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7513,
											"end": 7516,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7580,
											"end": 7597,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7442,
											"end": 7444,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 7442,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7623,
											"end": 7641,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7650,
											"end": 7754,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7650,
											"end": 7754,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7650,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 7650,
											"end": 7754,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7768,
											"end": 7769,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7763,
											"end": 8085,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7763,
											"end": 8085,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7763,
											"end": 8085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 7763,
											"end": 8085,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7616,
											"end": 8085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 7616,
											"end": 8085,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7650,
											"end": 7754,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 7650,
											"end": 7754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7683,
											"end": 7707,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7683,
											"end": 7707,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7708,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7708,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7728,
											"end": 7744,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7728,
											"end": 7744,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 7728,
											"end": 7744,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7728,
											"end": 7744,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7650,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 7650,
											"end": 7754,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7763,
											"end": 8085,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 7763,
											"end": 8085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15476,
											"end": 15480,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15495,
											"end": 15512,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 15495,
											"end": 15512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15495,
											"end": 15512,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15545,
											"end": 15549,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15529,
											"end": 15550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15550,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7858,
											"end": 7861,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7874,
											"end": 8039,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 7874,
											"end": 8039,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7888,
											"end": 7894,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7885,
											"end": 7886,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7882,
											"end": 7895,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7874,
											"end": 8039,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7874,
											"end": 8039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 7874,
											"end": 8039,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7966,
											"end": 7980,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7966,
											"end": 7980,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7953,
											"end": 7964,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 7953,
											"end": 7964,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7953,
											"end": 7964,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7946,
											"end": 7981,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8025,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8025,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8025,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8009,
											"end": 8025,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7903,
											"end": 7913,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7903,
											"end": 7913,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7874,
											"end": 8039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 7874,
											"end": 8039,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7874,
											"end": 8039,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 7874,
											"end": 8039,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7878,
											"end": 7881,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7878,
											"end": 7881,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8068,
											"end": 8074,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8063,
											"end": 8066,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 8059,
											"end": 8075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8052,
											"end": 8075,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 8052,
											"end": 8075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7616,
											"end": 8085,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 7616,
											"end": 8085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7616,
											"end": 8085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7616,
											"end": 8085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7616,
											"end": 8085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7616,
											"end": 8085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7616,
											"end": 8085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7616,
											"end": 8085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8101,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 8127,
											"end": 8130,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8119,
											"end": 8125,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8101,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 8101,
											"end": 8131,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8101,
											"end": 8131,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 8101,
											"end": 8131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8094,
											"end": 8131,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 8137,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7143,
											"end": 8137,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8142,
											"end": 8968,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 8142,
											"end": 8968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8539,
											"end": 8554,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8539,
											"end": 8554,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8539,
											"end": 8554,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8521,
											"end": 8555,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8521,
											"end": 8555,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8591,
											"end": 8606,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8591,
											"end": 8606,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8586,
											"end": 8588,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8564,
											"end": 8607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8504,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 8638,
											"end": 8640,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8623,
											"end": 8641,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8623,
											"end": 8641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8616,
											"end": 8647,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8616,
											"end": 8647,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8616,
											"end": 8647,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8468,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8464,
											"end": 8468,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8670,
											"end": 8727,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 8670,
											"end": 8727,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8707,
											"end": 8726,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8707,
											"end": 8726,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8699,
											"end": 8705,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8670,
											"end": 8727,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 8670,
											"end": 8727,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8670,
											"end": 8727,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 8670,
											"end": 8727,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8775,
											"end": 8784,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8767,
											"end": 8773,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8763,
											"end": 8785,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8758,
											"end": 8760,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8747,
											"end": 8756,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8743,
											"end": 8761,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8736,
											"end": 8786,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8809,
											"end": 8853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 8846,
											"end": 8852,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8838,
											"end": 8844,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8809,
											"end": 8853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 8809,
											"end": 8853,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8809,
											"end": 8853,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 8809,
											"end": 8853,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8795,
											"end": 8853,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8795,
											"end": 8853,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8902,
											"end": 8911,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8894,
											"end": 8900,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8890,
											"end": 8912,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 8887,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8873,
											"end": 8882,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8869,
											"end": 8888,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8862,
											"end": 8913,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8930,
											"end": 8962,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 8955,
											"end": 8961,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8947,
											"end": 8953,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8930,
											"end": 8962,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 8930,
											"end": 8962,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8930,
											"end": 8962,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 8930,
											"end": 8962,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8962,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 8473,
											"end": 8968,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8473,
											"end": 8968,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8973,
											"end": 9533,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 8973,
											"end": 9533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9270,
											"end": 9285,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9285,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9285,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9252,
											"end": 9286,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9252,
											"end": 9286,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9322,
											"end": 9337,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9322,
											"end": 9337,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9317,
											"end": 9319,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9302,
											"end": 9320,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9320,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9295,
											"end": 9338,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9369,
											"end": 9371,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9347,
											"end": 9381,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9347,
											"end": 9381,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9347,
											"end": 9381,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9412,
											"end": 9414,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9397,
											"end": 9415,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9397,
											"end": 9415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9390,
											"end": 9424,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9390,
											"end": 9424,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9390,
											"end": 9424,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9232,
											"end": 9235,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 9455,
											"end": 9458,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 9440,
											"end": 9459,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9440,
											"end": 9459,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9433,
											"end": 9465,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9433,
											"end": 9465,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9433,
											"end": 9465,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9195,
											"end": 9199,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9195,
											"end": 9199,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9482,
											"end": 9527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 9482,
											"end": 9527,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9507,
											"end": 9526,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9507,
											"end": 9526,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9499,
											"end": 9505,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9482,
											"end": 9527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 9482,
											"end": 9527,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9482,
											"end": 9527,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 9482,
											"end": 9527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9474,
											"end": 9527,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 9204,
											"end": 9533,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9204,
											"end": 9533,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9538,
											"end": 9799,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 9538,
											"end": 9799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9717,
											"end": 9719,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9706,
											"end": 9715,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9699,
											"end": 9720,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9680,
											"end": 9684,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9737,
											"end": 9793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 9789,
											"end": 9791,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9778,
											"end": 9787,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9774,
											"end": 9792,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9766,
											"end": 9772,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9737,
											"end": 9793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 9737,
											"end": 9793,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9804,
											"end": 10269,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 9804,
											"end": 10269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10061,
											"end": 10063,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10050,
											"end": 10059,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10043,
											"end": 10064,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10024,
											"end": 10028,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10087,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 10139,
											"end": 10141,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10128,
											"end": 10137,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10124,
											"end": 10142,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10116,
											"end": 10122,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10087,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 10087,
											"end": 10143,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10087,
											"end": 10143,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 10087,
											"end": 10143,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10183,
											"end": 10189,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10179,
											"end": 10201,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10174,
											"end": 10176,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10163,
											"end": 10172,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10159,
											"end": 10177,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10152,
											"end": 10202,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10219,
											"end": 10263,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 10256,
											"end": 10262,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10248,
											"end": 10254,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10219,
											"end": 10263,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 10219,
											"end": 10263,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10466,
											"end": 10685,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 10466,
											"end": 10685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10615,
											"end": 10617,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10604,
											"end": 10613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10597,
											"end": 10618,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10578,
											"end": 10582,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 10675,
											"end": 10677,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10664,
											"end": 10673,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10660,
											"end": 10678,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10652,
											"end": 10658,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11111,
											"end": 11515,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 11111,
											"end": 11515,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11313,
											"end": 11315,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11295,
											"end": 11316,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11295,
											"end": 11316,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11295,
											"end": 11316,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11352,
											"end": 11354,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 11332,
											"end": 11350,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11332,
											"end": 11350,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11332,
											"end": 11350,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11325,
											"end": 11355,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11391,
											"end": 11425,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 11386,
											"end": 11388,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11371,
											"end": 11389,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11364,
											"end": 11426,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11457,
											"end": 11459,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 11442,
											"end": 11460,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11442,
											"end": 11460,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11435,
											"end": 11473,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11505,
											"end": 11508,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 11490,
											"end": 11509,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11490,
											"end": 11509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11285,
											"end": 11515,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12341,
											"end": 12742,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 12341,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12543,
											"end": 12545,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12525,
											"end": 12546,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12525,
											"end": 12546,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12525,
											"end": 12546,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12582,
											"end": 12584,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 12562,
											"end": 12580,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12562,
											"end": 12580,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12562,
											"end": 12580,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12555,
											"end": 12585,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12621,
											"end": 12655,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 12616,
											"end": 12618,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12601,
											"end": 12619,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12601,
											"end": 12619,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12594,
											"end": 12656,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12687,
											"end": 12689,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 12672,
											"end": 12690,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12672,
											"end": 12690,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12700,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12732,
											"end": 12735,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 12717,
											"end": 12736,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12515,
											"end": 12742,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13166,
											"end": 13572,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 13166,
											"end": 13572,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13368,
											"end": 13370,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13350,
											"end": 13371,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13350,
											"end": 13371,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13350,
											"end": 13371,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13407,
											"end": 13409,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 13387,
											"end": 13405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13387,
											"end": 13405,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13387,
											"end": 13405,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13380,
											"end": 13410,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13446,
											"end": 13480,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 13441,
											"end": 13443,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13426,
											"end": 13444,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13426,
											"end": 13444,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13419,
											"end": 13481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13512,
											"end": 13514,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 13497,
											"end": 13515,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13497,
											"end": 13515,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13490,
											"end": 13530,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13562,
											"end": 13565,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 13547,
											"end": 13566,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13340,
											"end": 13572,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15241,
											"end": 15424,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 15241,
											"end": 15424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15301,
											"end": 15305,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15334,
											"end": 15352,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15326,
											"end": 15332,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15323,
											"end": 15353,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 15320,
											"end": 15322,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15320,
											"end": 15322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 15320,
											"end": 15322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15356,
											"end": 15374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 15356,
											"end": 15374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 15356,
											"end": 15374,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15356,
											"end": 15374,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 15356,
											"end": 15374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15401,
											"end": 15402,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 15397,
											"end": 15411,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 15413,
											"end": 15417,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15393,
											"end": 15418,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15393,
											"end": 15418,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15310,
											"end": 15424,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15561,
											"end": 15689,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 15561,
											"end": 15689,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15601,
											"end": 15604,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15632,
											"end": 15633,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15628,
											"end": 15634,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 15625,
											"end": 15626,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15622,
											"end": 15635,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 15619,
											"end": 15621,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15619,
											"end": 15621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 15619,
											"end": 15621,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15638,
											"end": 15656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 15638,
											"end": 15656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 15638,
											"end": 15656,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15638,
											"end": 15656,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 15638,
											"end": 15656,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15674,
											"end": 15683,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15674,
											"end": 15683,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15609,
											"end": 15689,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15694,
											"end": 15814,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 15694,
											"end": 15814,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15734,
											"end": 15735,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15760,
											"end": 15761,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15750,
											"end": 15752,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 15750,
											"end": 15752,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15765,
											"end": 15783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 15765,
											"end": 15783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 15765,
											"end": 15783,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15765,
											"end": 15783,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 15765,
											"end": 15783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15799,
											"end": 15808,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 15799,
											"end": 15808,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15740,
											"end": 15814,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15819,
											"end": 15944,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 15819,
											"end": 15944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15859,
											"end": 15863,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15887,
											"end": 15888,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15884,
											"end": 15885,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15881,
											"end": 15889,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 15878,
											"end": 15880,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15878,
											"end": 15880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 15878,
											"end": 15880,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15892,
											"end": 15910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 15892,
											"end": 15910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 15892,
											"end": 15910,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15892,
											"end": 15910,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 15892,
											"end": 15910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15929,
											"end": 15938,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15929,
											"end": 15938,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15868,
											"end": 15944,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15949,
											"end": 16207,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 15949,
											"end": 16207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16021,
											"end": 16022,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16031,
											"end": 16144,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 16031,
											"end": 16144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16045,
											"end": 16051,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16042,
											"end": 16043,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16039,
											"end": 16052,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 16031,
											"end": 16144,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16031,
											"end": 16144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 16031,
											"end": 16144,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16121,
											"end": 16132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16121,
											"end": 16132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16121,
											"end": 16132,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16115,
											"end": 16133,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16102,
											"end": 16113,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16102,
											"end": 16113,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16102,
											"end": 16113,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16095,
											"end": 16134,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16067,
											"end": 16069,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16060,
											"end": 16070,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16031,
											"end": 16144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 16031,
											"end": 16144,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16031,
											"end": 16144,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 16031,
											"end": 16144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16162,
											"end": 16168,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16159,
											"end": 16160,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16156,
											"end": 16169,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16153,
											"end": 16155,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16153,
											"end": 16155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 16153,
											"end": 16155,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16197,
											"end": 16198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16188,
											"end": 16194,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16183,
											"end": 16186,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16179,
											"end": 16195,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16172,
											"end": 16199,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16153,
											"end": 16155,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 16153,
											"end": 16155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16153,
											"end": 16155,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16002,
											"end": 16207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16002,
											"end": 16207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16002,
											"end": 16207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16002,
											"end": 16207,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16212,
											"end": 16461,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 16212,
											"end": 16461,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16322,
											"end": 16324,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 16303,
											"end": 16316,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16316,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16299,
											"end": 16326,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16287,
											"end": 16327,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16287,
											"end": 16327,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16342,
											"end": 16376,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16342,
											"end": 16376,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16378,
											"end": 16400,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16378,
											"end": 16400,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16378,
											"end": 16400,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 16339,
											"end": 16401,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 16336,
											"end": 16338,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16336,
											"end": 16338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 16336,
											"end": 16338,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16404,
											"end": 16422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 16404,
											"end": 16422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 16404,
											"end": 16422,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16404,
											"end": 16422,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 16404,
											"end": 16422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16440,
											"end": 16442,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16433,
											"end": 16455,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16259,
											"end": 16461,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16466,
											"end": 16601,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 16466,
											"end": 16601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16505,
											"end": 16508,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16526,
											"end": 16543,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16526,
											"end": 16543,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 16523,
											"end": 16525,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16523,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 16523,
											"end": 16525,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16546,
											"end": 16564,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 16546,
											"end": 16564,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 16546,
											"end": 16564,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16546,
											"end": 16564,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 16546,
											"end": 16564,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16593,
											"end": 16594,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 16582,
											"end": 16595,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16582,
											"end": 16595,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16513,
											"end": 16601,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16606,
											"end": 16718,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 16606,
											"end": 16718,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16638,
											"end": 16639,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16664,
											"end": 16665,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16654,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 16654,
											"end": 16656,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16669,
											"end": 16687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 16669,
											"end": 16687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 16669,
											"end": 16687,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16669,
											"end": 16687,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 16669,
											"end": 16687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16703,
											"end": 16712,
											"name": "MOD",
											"source": 9
										},
										{
											"begin": 16703,
											"end": 16712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16644,
											"end": 16718,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16723,
											"end": 16850,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 16723,
											"end": 16850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16784,
											"end": 16794,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 16779,
											"end": 16782,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 16775,
											"end": 16795,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 16772,
											"end": 16773,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16765,
											"end": 16796,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16819,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 16812,
											"end": 16813,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 16805,
											"end": 16820,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16839,
											"end": 16843,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 16836,
											"end": 16837,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16829,
											"end": 16844,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16855,
											"end": 16982,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 16855,
											"end": 16982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16916,
											"end": 16926,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 16911,
											"end": 16914,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 16907,
											"end": 16927,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 16904,
											"end": 16905,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16897,
											"end": 16928,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16947,
											"end": 16951,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 16944,
											"end": 16945,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 16937,
											"end": 16952,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16971,
											"end": 16975,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 16968,
											"end": 16969,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16961,
											"end": 16976,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16987,
											"end": 17114,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 16987,
											"end": 17114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17048,
											"end": 17058,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 17043,
											"end": 17046,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 17039,
											"end": 17059,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 17036,
											"end": 17037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17029,
											"end": 17060,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17079,
											"end": 17083,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 17076,
											"end": 17077,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 17069,
											"end": 17084,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17103,
											"end": 17107,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 17100,
											"end": 17101,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17093,
											"end": 17108,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 17119,
											"end": 17304,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 17119,
											"end": 17304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17154,
											"end": 17157,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17196,
											"end": 17197,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 17178,
											"end": 17194,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 17175,
											"end": 17198,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 17172,
											"end": 17174,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17172,
											"end": 17174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 17172,
											"end": 17174,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17246,
											"end": 17247,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 17241,
											"end": 17244,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17236,
											"end": 17239,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17221,
											"end": 17248,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 17277,
											"end": 17287,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17272,
											"end": 17275,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 17268,
											"end": 17288,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 17172,
											"end": 17174,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 17172,
											"end": 17174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17162,
											"end": 17304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17162,
											"end": 17304,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17309,
											"end": 17980,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 17309,
											"end": 17980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17348,
											"end": 17351,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17390,
											"end": 17394,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 17372,
											"end": 17388,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 17369,
											"end": 17395,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 17366,
											"end": 17368,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17366,
											"end": 17368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 17366,
											"end": 17368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17356,
											"end": 17980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17356,
											"end": 17980,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17366,
											"end": 17368,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 17366,
											"end": 17368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17432,
											"end": 17434,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17426,
											"end": 17435,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17497,
											"end": 17513,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 17493,
											"end": 17518,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17493,
											"end": 17518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17490,
											"end": 17491,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 17426,
											"end": 17435,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17469,
											"end": 17519,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 17548,
											"end": 17552,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17542,
											"end": 17553,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17572,
											"end": 17588,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 17607,
											"end": 17625,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17678,
											"end": 17680,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17671,
											"end": 17675,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 17663,
											"end": 17669,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17659,
											"end": 17676,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17656,
											"end": 17681,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 17651,
											"end": 17653,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17643,
											"end": 17649,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17640,
											"end": 17654,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 17637,
											"end": 17682,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 17634,
											"end": 17636,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17634,
											"end": 17636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 17634,
											"end": 17636,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17685,
											"end": 17690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17685,
											"end": 17690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17685,
											"end": 17690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17685,
											"end": 17690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17685,
											"end": 17690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17356,
											"end": 17980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17356,
											"end": 17980,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17634,
											"end": 17636,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 17634,
											"end": 17636,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17722,
											"end": 17728,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17716,
											"end": 17720,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17712,
											"end": 17729,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17701,
											"end": 17729,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17701,
											"end": 17729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17758,
											"end": 17761,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17752,
											"end": 17762,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17785,
											"end": 17787,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17777,
											"end": 17783,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17774,
											"end": 17788,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 17771,
											"end": 17773,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17771,
											"end": 17773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 17771,
											"end": 17773,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17791,
											"end": 17796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17791,
											"end": 17796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17791,
											"end": 17796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17791,
											"end": 17796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17791,
											"end": 17796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17791,
											"end": 17796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17356,
											"end": 17980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17356,
											"end": 17980,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17771,
											"end": 17773,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 17771,
											"end": 17773,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17875,
											"end": 17877,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17856,
											"end": 17872,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 17850,
											"end": 17854,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 17846,
											"end": 17873,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17842,
											"end": 17878,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17835,
											"end": 17839,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17826,
											"end": 17832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17821,
											"end": 17824,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17817,
											"end": 17833,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17813,
											"end": 17840,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17810,
											"end": 17879,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 17807,
											"end": 17809,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17807,
											"end": 17809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 17807,
											"end": 17809,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17882,
											"end": 17887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17882,
											"end": 17887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17882,
											"end": 17887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17882,
											"end": 17887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17882,
											"end": 17887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17882,
											"end": 17887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17356,
											"end": 17980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17356,
											"end": 17980,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17807,
											"end": 17809,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 17807,
											"end": 17809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17898,
											"end": 17955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 17949,
											"end": 17953,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17940,
											"end": 17946,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17932,
											"end": 17938,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 17928,
											"end": 17947,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17924,
											"end": 17954,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17918,
											"end": 17922,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 17898,
											"end": 17955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 17898,
											"end": 17955,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17898,
											"end": 17955,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 17898,
											"end": 17955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17971,
											"end": 17974,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17971,
											"end": 17974,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 17356,
											"end": 17980,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17356,
											"end": 17980,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17985,
											"end": 18116,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 17985,
											"end": 18116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18059,
											"end": 18091,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18059,
											"end": 18091,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18049,
											"end": 18092,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18049,
											"end": 18092,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 18039,
											"end": 18041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 18039,
											"end": 18041,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18106,
											"end": 18107,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18103,
											"end": 18104,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18096,
											"end": 18108,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 18039,
											"end": 18041,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 18039,
											"end": 18041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18029,
											"end": 18116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18029,
											"end": 18116,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xa286fa74757b4a848308ad75cac8bcb06df54e15703ccfb4da436e881900947c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f466ca1d82de05cb9863c2d8e68292a19741e816e8a4ec710501b56e6484fcc3\",\"dweb:/ipfs/QmeRrgdfsSwjaW1tnTHMwjZvtSj6RRyEnDXdA1cmCBoze8\"]},\"contracts/OZ_contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"contracts/OZ_contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"contracts/OZ_contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/OZ_contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"contracts/OZ_contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "contracts/OZ_contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 32,
								"contract": "contracts/OZ_contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 34,
								"contract": "contracts/OZ_contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/OZ_contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/OZ_contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209004d7afd0ad6c4366e33d6513e33b5d958ea7568ec8fa5a706607d9bdb9790664736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209004d7afd0ad6c4366e33d6513e33b5d958ea7568ec8fa5a706607d9bdb9790664736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 DIV 0xD7 0xAF 0xD0 0xAD PUSH13 0x4366E33D6513E33B5D958EA756 DUP15 0xC8 STATICCALL GAS PUSH17 0x6607D9BDB9790664736F6C634300080400 CALLER ",
							"sourceMap": "194:8061:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8061:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209004d7afd0ad6c4366e33d6513e33b5d958ea7568ec8fa5a706607d9bdb9790664736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 DIV 0xD7 0xAF 0xD0 0xAD PUSH13 0x4366E33D6513E33B5D958EA756 DUP15 0xC8 STATICCALL GAS PUSH17 0x6607D9BDB9790664736F6C634300080400 CALLER ",
							"sourceMap": "194:8061:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209004d7afd0ad6c4366e33d6513e33b5d958ea7568ec8fa5a706607d9bdb9790664736f6c63430008040033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/OZ_contracts/utils/Strings.sol\":146:2031  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/OZ_contracts/utils/Strings.sol\":146:2031  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e8217f0d813698f8c024e0801dc28112168efaa1ec6778686b08fe5c6e7459f564736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e8217f0d813698f8c024e0801dc28112168efaa1ec6778686b08fe5c6e7459f564736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0x21 PUSH32 0xD813698F8C024E0801DC28112168EFAA1EC6778686B08FE5C6E7459F564736F PUSH13 0x63430008040033000000000000 ",
							"sourceMap": "146:1885:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;146:1885:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e8217f0d813698f8c024e0801dc28112168efaa1ec6778686b08fe5c6e7459f564736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0x21 PUSH32 0xD813698F8C024E0801DC28112168EFAA1EC6778686B08FE5C6E7459F564736F PUSH13 0x63430008040033000000000000 ",
							"sourceMap": "146:1885:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e8217f0d813698f8c024e0801dc28112168efaa1ec6778686b08fe5c6e7459f564736f6c63430008040033",
									".code": [
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OZ_contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OZ_contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/OZ_contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1721
						],
						"Context": [
							1743
						],
						"ERC1155": [
							1248
						],
						"ERC165": [
							1970
						],
						"IERC1155": [
							1370
						],
						"IERC1155MetadataURI": [
							1426
						],
						"IERC1155Receiver": [
							1411
						],
						"IERC165": [
							1982
						],
						"Strings": [
							1946
						]
					},
					"id": 1249,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:0"
						},
						{
							"absolutePath": "contracts/OZ_contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1249,
							"sourceUnit": 1371,
							"src": "134:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1249,
							"sourceUnit": 1412,
							"src": "159:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1249,
							"sourceUnit": 1427,
							"src": "192:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1249,
							"sourceUnit": 1722,
							"src": "239:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1249,
							"sourceUnit": 1744,
							"src": "273:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1249,
							"sourceUnit": 1971,
							"src": "307:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1249,
							"sourceUnit": 1947,
							"src": "354:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1743,
										"src": "624:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "624:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1970,
										"src": "633:6:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "633:6:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1370,
										"src": "641:8:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "641:8:0"
								},
								{
									"baseName": {
										"id": 16,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1426,
										"src": "651:19:0"
									},
									"id": 17,
									"nodeType": "InheritanceSpecifier",
									"src": "651:19:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "389:214:0",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1248,
							"linearizedBaseContracts": [
								1248,
								1426,
								1370,
								1970,
								1982,
								1743
							],
							"name": "ERC1155",
							"nameLocation": "613:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 20,
									"libraryName": {
										"id": 18,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1721,
										"src": "683:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "677:26:0",
									"typeName": {
										"id": 19,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "695:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "814:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1248,
									"src": "758:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 25,
										"keyType": {
											"id": 21,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "766:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "758:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 24,
											"keyType": {
												"id": 22,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "785:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "777:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 23,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "796:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "933:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1248,
									"src": "880:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 31,
										"keyType": {
											"id": 27,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "888:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "880:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 30,
											"keyType": {
												"id": 28,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "907:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "899:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 29,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "918:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 34,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1087:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1248,
									"src": "1072:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 33,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1072:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1173:30:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 41,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "1191:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 40,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "1183:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1183:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1183:13:0"
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1098:38:0",
										"text": " @dev See {_setURI}."
									},
									"id": 45,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1167:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1153:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 36,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1153:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1152:20:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1173:0:0"
									},
									"scope": 1248,
									"src": "1141:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1969,
										1981
									],
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "1378:197:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 56,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "1407:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 58,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1370,
																			"src": "1427:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1370_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1370_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 57,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1422:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1422:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1370",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1422:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1407:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 62,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "1464:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 64,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1426,
																			"src": "1484:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1426_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1426_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 63,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1479:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 65,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1479:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1426",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1479:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1464:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1407:109:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 71,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "1556:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 69,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1532:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1248_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1969,
															"src": "1532:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1532:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1407:161:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 55,
												"id": 74,
												"nodeType": "Return",
												"src": "1388:180:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1209:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1279:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 52,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 50,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1970,
												"src": "1346:6:0"
											},
											{
												"id": 51,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1982,
												"src": "1354:7:0"
											}
										],
										"src": "1337:25:0"
									},
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1304:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1297:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 47,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1297:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:20:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1372:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 53,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1372:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1371:6:0"
									},
									"scope": 1248,
									"src": "1270:305:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1425
									],
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2052:144:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 89,
																	"name": "_uri",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "2123:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 92,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 79,
																			"src": "2162:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 90,
																			"name": "Strings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1946,
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Strings_$1946_$",
																				"typeString": "type(library Strings)"
																			}
																		},
																		"id": 91,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1828,
																		"src": "2145:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2145:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 87,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2089:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2089:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2089:90:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2069:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 85,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2069:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2069:120:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 84,
												"id": 96,
												"nodeType": "Return",
												"src": "2062:127:0"
											}
										]
									},
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "1581:388:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1983:3:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 81,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2019:8:0"
									},
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1995:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1987:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1986:12:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2037:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 82,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2037:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2036:15:0"
									},
									"scope": 1248,
									"src": "1974:222:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1308
									],
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "2433:133:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 110,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "2451:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2470:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2462:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 111,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2462:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2462:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2451:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2474:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															},
															"value": "ERC1155: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															}
														],
														"id": 109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2443:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2443:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "2443:76:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 120,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2547:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 121,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "2556:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 119,
														"name": "_balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "2536:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2536:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 108,
												"id": 123,
												"nodeType": "Return",
												"src": "2529:30:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2202:131:0",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2347:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2406:8:0"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2365:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2357:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2382:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2374:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2374:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2356:29:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2424:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2423:9:0"
									},
									"scope": 1248,
									"src": "2338:228:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "2660:46:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 134,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "2677:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "2687:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2677:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 138,
													"indexExpression": {
														"id": 137,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "2691:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2677:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "2670:29:0"
											}
										]
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_balanceOf",
									"nameLocation": "2581:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2600:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2592:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2592:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2617:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2609:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2609:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:29:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2651:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2650:9:0"
									},
									"scope": 1248,
									"src": "2572:134:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1321
									],
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3036:343:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 156,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "3054:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3054:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 158,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "3073:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3073:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3054:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3085:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3046:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3046:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "3046:83:0"
											},
											{
												"assignments": [
													168
												],
												"declarations": [
													{
														"constant": false,
														"id": 168,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "3165:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 204,
														"src": "3148:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 166,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3148:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 167,
															"nodeType": "ArrayTypeName",
															"src": "3148:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 172,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "3195:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3195:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3181:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 169,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3185:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 170,
															"nodeType": "ArrayTypeName",
															"src": "3185:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3181:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3148:63:0"
											},
											{
												"body": {
													"id": 200,
													"nodeType": "Block",
													"src": "3268:74:0",
													"statements": [
														{
															"expression": {
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 187,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 168,
																		"src": "3282:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 189,
																	"indexExpression": {
																		"id": 188,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 177,
																		"src": "3296:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3282:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 191,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 145,
																				"src": "3311:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 193,
																			"indexExpression": {
																				"id": 192,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 177,
																				"src": "3320:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3311:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 194,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 148,
																				"src": "3324:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 196,
																			"indexExpression": {
																				"id": 195,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 177,
																				"src": "3328:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3324:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 190,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 125,
																		"src": "3301:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3301:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3282:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 199,
															"nodeType": "ExpressionStatement",
															"src": "3282:49:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 180,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "3242:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 181,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "3246:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3246:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3242:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 201,
												"initializationExpression": {
													"assignments": [
														177
													],
													"declarations": [
														{
															"constant": false,
															"id": 177,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3235:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 201,
															"src": "3227:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 176,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3227:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 179,
													"initialValue": {
														"hexValue": "30",
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3239:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3227:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3263:3:0",
														"subExpression": {
															"id": 184,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3265:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 186,
													"nodeType": "ExpressionStatement",
													"src": "3263:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3222:120:0"
											},
											{
												"expression": {
													"id": 202,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 168,
													"src": "3359:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 154,
												"id": 203,
												"nodeType": "Return",
												"src": "3352:20:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "2712:146:0",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2872:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 150,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2988:8:0"
									},
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2904:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "2887:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 143,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2887:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 144,
													"nodeType": "ArrayTypeName",
													"src": "2887:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2931:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "2914:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 146,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2914:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 147,
													"nodeType": "ArrayTypeName",
													"src": "2914:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2886:49:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3014:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 151,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3014:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 152,
													"nodeType": "ArrayTypeName",
													"src": "3014:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3013:18:0"
									},
									"scope": 1248,
									"src": "2863:516:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1329
									],
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "3531:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 215,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1733,
																"src": "3560:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3560:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 217,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3574:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 218,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "3584:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 214,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "3541:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3541:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "3541:52:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3385:57:0",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3456:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 212,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3522:8:0"
									},
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3482:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "3474:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3497:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "3492:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3492:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:33:0"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3531:0:0"
									},
									"scope": 1248,
									"src": "3447:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1339
									],
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "3772:61:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 233,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "3789:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 235,
														"indexExpression": {
															"id": 234,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3808:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3789:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 237,
													"indexExpression": {
														"id": 236,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3817:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3789:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 232,
												"id": 238,
												"nodeType": "Return",
												"src": "3782:44:0"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "3606:56:0",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3676:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 229,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3748:8:0"
									},
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3701:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "3693:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3718:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "3710:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3692:35:0"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "3766:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3766:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3765:6:0"
									},
									"scope": 1248,
									"src": "3667:166:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1353
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "4069:220:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 256,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 243,
																	"src": "4100:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 257,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1733,
																		"src": "4108:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4108:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4100:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 261,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 243,
																		"src": "4141:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 262,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1733,
																			"src": "4147:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4147:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 260,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "4124:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4124:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4100:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4174:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4079:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4079:148:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "4079:148:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 270,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "4255:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 271,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "4261:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 272,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "4265:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 273,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "4269:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 274,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "4277:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 269,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "4237:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4237:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "4237:45:0"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "3839:56:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3909:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 253,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4060:8:0"
									},
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3943:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3935:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3935:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3965:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3957:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3985:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3977:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3977:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4005:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3997:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4034:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4021:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 250,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4021:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:119:0"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4069:0:0"
									},
									"scope": 1248,
									"src": "3900:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1369
									],
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "4555:236:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 296,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "4586:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 297,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1733,
																		"src": "4594:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4594:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4586:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 301,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "4627:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 302,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1733,
																			"src": "4633:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4633:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 300,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "4610:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4610:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4586:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4660:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4565:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4565:157:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "4565:157:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 310,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4755:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 311,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4761:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 312,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "4765:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 313,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4770:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 314,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "4779:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 309,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "4732:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4732:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "4732:52:0"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "4295:61:0",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4370:21:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 293,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4546:8:0"
									},
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "4401:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4401:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4431:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "4423:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4460:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "4443:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 284,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4443:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 285,
													"nodeType": "ArrayTypeName",
													"src": "4443:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4490:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "4473:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 287,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4473:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 288,
													"nodeType": "ArrayTypeName",
													"src": "4473:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4520:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "4507:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 290,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4507:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4391:139:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4555:0:0"
									},
									"scope": 1248,
									"src": "4361:430:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "5405:784:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 333,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 323,
																"src": "5423:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5437:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5429:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 334,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5429:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5429:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5423:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5441:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 332,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5415:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5415:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "5415:66:0"
											},
											{
												"assignments": [
													343
												],
												"declarations": [
													{
														"constant": false,
														"id": 343,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5500:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 434,
														"src": "5492:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 342,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5492:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 346,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 344,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "5511:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5511:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5492:31:0"
											},
											{
												"assignments": [
													351
												],
												"declarations": [
													{
														"constant": false,
														"id": 351,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "5550:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 434,
														"src": "5533:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 349,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5533:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 350,
															"nodeType": "ArrayTypeName",
															"src": "5533:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"arguments": [
														{
															"id": 353,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "5574:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 352,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "5556:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5556:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5533:44:0"
											},
											{
												"assignments": [
													360
												],
												"declarations": [
													{
														"constant": false,
														"id": 360,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "5604:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 434,
														"src": "5587:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 358,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5587:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 359,
															"nodeType": "ArrayTypeName",
															"src": "5587:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 364,
												"initialValue": {
													"arguments": [
														{
															"id": 362,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "5632:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 361,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "5614:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5614:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5587:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 366,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "5671:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 367,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "5681:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 368,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "5687:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "5691:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 370,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "5696:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 371,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "5705:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 365,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "5650:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5650:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "5650:60:0"
											},
											{
												"assignments": [
													375
												],
												"declarations": [
													{
														"constant": false,
														"id": 375,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5729:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 434,
														"src": "5721:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 374,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5721:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 381,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 376,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "5743:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 378,
														"indexExpression": {
															"id": 377,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "5753:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5743:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 380,
													"indexExpression": {
														"id": 379,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "5757:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5743:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5721:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 383,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "5780:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 384,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "5795:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5780:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5803:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 382,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5772:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5772:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "5772:76:0"
											},
											{
												"id": 399,
												"nodeType": "UncheckedBlock",
												"src": "5858:77:0",
												"statements": [
													{
														"expression": {
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 389,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 26,
																		"src": "5882:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 392,
																	"indexExpression": {
																		"id": 390,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 325,
																		"src": "5892:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5882:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 393,
																"indexExpression": {
																	"id": 391,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "5896:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5882:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 394,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "5904:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 395,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "5918:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5904:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 398,
														"nodeType": "ExpressionStatement",
														"src": "5882:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 400,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5944:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 403,
															"indexExpression": {
																"id": 401,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 325,
																"src": "5954:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5944:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 404,
														"indexExpression": {
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "5958:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5944:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 405,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "5965:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5944:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "5944:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 409,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "6002:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 410,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "6012:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 411,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "6018:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 412,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "6022:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 413,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "6026:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 408,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "5987:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5987:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 415,
												"nodeType": "EmitStatement",
												"src": "5982:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 417,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "6064:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 418,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "6074:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 419,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "6080:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 420,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "6084:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 421,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "6089:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 422,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "6098:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 416,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "6044:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6044:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "6044:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 426,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "6145:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 427,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "6155:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 428,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "6161:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 429,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "6165:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 430,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "6169:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 431,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "6177:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 425,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "6114:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6114:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "6114:68:0"
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "4798:439:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "5251:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5286:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "5278:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5278:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5308:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "5300:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5300:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5328:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "5320:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5348:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "5340:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5377:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "5364:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 328,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5364:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5268:119:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5405:0:0"
									},
									"scope": 1248,
									"src": "5242:947:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "6723:927:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 452,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 443,
																	"src": "6741:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6741:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 454,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "6755:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6755:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6741:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6771:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6733:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6733:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "6733:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 461,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "6832:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6846:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6838:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 462,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6838:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6838:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6832:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6850:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 460,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6824:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6824:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "6824:66:0"
											},
											{
												"assignments": [
													471
												],
												"declarations": [
													{
														"constant": false,
														"id": 471,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6909:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 569,
														"src": "6901:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 470,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6901:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 474,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 472,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "6920:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6920:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6901:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 476,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "6964:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 477,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "6974:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 478,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "6980:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "6984:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 480,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "6989:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 481,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "6998:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 475,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "6943:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6943:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "6943:60:0"
											},
											{
												"body": {
													"id": 541,
													"nodeType": "Block",
													"src": "7055:370:0",
													"statements": [
														{
															"assignments": [
																496
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 496,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "7077:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 541,
																	"src": "7069:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 495,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7069:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 500,
															"initialValue": {
																"baseExpression": {
																	"id": 497,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 443,
																	"src": "7082:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 499,
																"indexExpression": {
																	"id": 498,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "7086:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7082:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7069:19:0"
														},
														{
															"assignments": [
																502
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 502,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "7110:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 541,
																	"src": "7102:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 501,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7102:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 506,
															"initialValue": {
																"baseExpression": {
																	"id": 503,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "7119:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 505,
																"indexExpression": {
																	"id": 504,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "7127:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7119:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7102:27:0"
														},
														{
															"assignments": [
																508
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 508,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7152:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 541,
																	"src": "7144:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 507,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7144:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 514,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 509,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 26,
																		"src": "7166:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 511,
																	"indexExpression": {
																		"id": 510,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 496,
																		"src": "7176:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7166:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 513,
																"indexExpression": {
																	"id": 512,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "7180:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7166:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7144:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 516,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "7207:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 517,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 502,
																			"src": "7222:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7207:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7230:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 515,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7199:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7199:76:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 521,
															"nodeType": "ExpressionStatement",
															"src": "7199:76:0"
														},
														{
															"id": 532,
															"nodeType": "UncheckedBlock",
															"src": "7289:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 522,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 26,
																					"src": "7317:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 525,
																				"indexExpression": {
																					"id": 523,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 496,
																					"src": "7327:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7317:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 526,
																			"indexExpression": {
																				"id": 524,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 438,
																				"src": "7331:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7317:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 527,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "7339:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 528,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 502,
																				"src": "7353:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7339:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7317:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 531,
																	"nodeType": "ExpressionStatement",
																	"src": "7317:42:0"
																}
															]
														},
														{
															"expression": {
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 533,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 26,
																			"src": "7387:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 536,
																		"indexExpression": {
																			"id": 534,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 496,
																			"src": "7397:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7387:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 537,
																	"indexExpression": {
																		"id": 535,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 440,
																		"src": "7401:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7387:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 538,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "7408:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7387:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 540,
															"nodeType": "ExpressionStatement",
															"src": "7387:27:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 488,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "7034:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 489,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "7038:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7038:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7034:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 542,
												"initializationExpression": {
													"assignments": [
														485
													],
													"declarations": [
														{
															"constant": false,
															"id": 485,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7027:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 542,
															"src": "7019:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 484,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7019:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 487,
													"initialValue": {
														"hexValue": "30",
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7031:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7019:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "7050:3:0",
														"subExpression": {
															"id": 492,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "7052:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 494,
													"nodeType": "ExpressionStatement",
													"src": "7050:3:0"
												},
												"nodeType": "ForStatement",
												"src": "7014:411:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 544,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "7454:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7464:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 546,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "7470:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 547,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "7474:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 548,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "7479:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 543,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "7440:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7440:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 550,
												"nodeType": "EmitStatement",
												"src": "7435:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 552,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "7518:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 553,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7528:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 554,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "7534:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 555,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "7538:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 556,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "7543:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 557,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "7552:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 551,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "7498:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7498:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "7498:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 561,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "7604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 562,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7614:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 563,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "7620:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 564,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "7624:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 565,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "7629:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 566,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "7638:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 560,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "7568:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7568:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "7568:75:0"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "6195:335:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6544:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6584:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6576:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6606:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6598:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6635:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6618:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 441,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6618:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 442,
													"nodeType": "ArrayTypeName",
													"src": "6618:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6665:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6648:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 444,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6648:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 445,
													"nodeType": "ArrayTypeName",
													"src": "6648:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6695:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6682:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 447,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6682:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6566:139:0"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6723:0:0"
									},
									"scope": 1248,
									"src": "6535:1115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "8529:30:0",
										"statements": [
											{
												"expression": {
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 576,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "8539:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 577,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "8546:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8539:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "8539:13:0"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "7656:812:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "8482:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "8504:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "8490:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 572,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8490:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8489:22:0"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8529:0:0"
									},
									"scope": 1248,
									"src": "8473:86:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "9061:580:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 594,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "9079:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9093:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9085:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 595,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9085:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9085:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9079:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9097:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 593,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9071:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9071:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "9071:62:0"
											},
											{
												"assignments": [
													604
												],
												"declarations": [
													{
														"constant": false,
														"id": 604,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "9152:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 681,
														"src": "9144:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 603,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9144:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 607,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 605,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "9163:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9163:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9144:31:0"
											},
											{
												"assignments": [
													612
												],
												"declarations": [
													{
														"constant": false,
														"id": 612,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "9202:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 681,
														"src": "9185:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 610,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9185:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 611,
															"nodeType": "ArrayTypeName",
															"src": "9185:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 616,
												"initialValue": {
													"arguments": [
														{
															"id": 614,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "9226:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 613,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "9208:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9208:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9185:44:0"
											},
											{
												"assignments": [
													621
												],
												"declarations": [
													{
														"constant": false,
														"id": 621,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "9256:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 681,
														"src": "9239:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 619,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9239:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 620,
															"nodeType": "ArrayTypeName",
															"src": "9239:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 625,
												"initialValue": {
													"arguments": [
														{
															"id": 623,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "9284:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 622,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "9266:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9266:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9239:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 627,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "9323:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9341:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9333:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 628,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9333:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9333:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "9345:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "9349:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 634,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "9354:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 635,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "9363:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 626,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "9302:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9302:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "9302:66:0"
											},
											{
												"expression": {
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 638,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "9379:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 641,
															"indexExpression": {
																"id": 639,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "9389:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9379:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 642,
														"indexExpression": {
															"id": 640,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "9393:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9379:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 643,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "9400:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9379:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "9379:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 647,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "9436:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9454:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9446:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 648,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9446:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9446:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 652,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "9458:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 653,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "9462:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 654,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "9466:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "9421:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9421:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "EmitStatement",
												"src": "9416:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 658,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "9504:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9522:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9514:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 659,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9514:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9514:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 663,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "9526:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 664,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "9530:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 665,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "9535:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 666,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "9544:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 657,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "9484:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9484:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "9484:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "9591:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9609:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9601:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 671,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9601:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9601:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "9613:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 676,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "9617:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 677,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "9621:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 678,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "9629:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 669,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "9560:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9560:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "9560:74:0"
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "8565:362:0",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8941:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8964:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "8956:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8984:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "8976:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "8996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8996:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9033:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "9020:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9020:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8946:97:0"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9061:0:0"
									},
									"scope": 1248,
									"src": "8932:709:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "10140:637:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 697,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "10158:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10164:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 698,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10164:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10164:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10158:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10176:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 696,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10150:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10150:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "10150:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 707,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 688,
																	"src": "10230:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10230:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 709,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 691,
																	"src": "10244:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10244:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10230:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10260:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 706,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10222:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10222:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "10222:81:0"
											},
											{
												"assignments": [
													716
												],
												"declarations": [
													{
														"constant": false,
														"id": 716,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10322:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 792,
														"src": "10314:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 715,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10314:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 719,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 717,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "10333:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10333:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10314:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 721,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "10377:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10395:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10387:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 722,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10387:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10387:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "10399:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "10403:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 728,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "10408:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 729,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "10417:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 720,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "10356:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10356:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "10356:66:0"
											},
											{
												"body": {
													"id": 755,
													"nodeType": "Block",
													"src": "10474:60:0",
													"statements": [
														{
															"expression": {
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 743,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 26,
																			"src": "10488:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 748,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 744,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 688,
																				"src": "10498:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 746,
																			"indexExpression": {
																				"id": 745,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 733,
																				"src": "10502:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10498:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10488:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 749,
																	"indexExpression": {
																		"id": 747,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "10506:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10488:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 750,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 691,
																		"src": "10513:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 752,
																	"indexExpression": {
																		"id": 751,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 733,
																		"src": "10521:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10513:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10488:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 754,
															"nodeType": "ExpressionStatement",
															"src": "10488:35:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 736,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "10453:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 737,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "10457:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10457:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10453:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 756,
												"initializationExpression": {
													"assignments": [
														733
													],
													"declarations": [
														{
															"constant": false,
															"id": 733,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10446:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 756,
															"src": "10438:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 732,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10438:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 735,
													"initialValue": {
														"hexValue": "30",
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10450:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10438:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10469:3:0",
														"subExpression": {
															"id": 740,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "10469:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 742,
													"nodeType": "ExpressionStatement",
													"src": "10469:3:0"
												},
												"nodeType": "ForStatement",
												"src": "10433:101:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 758,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "10563:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10581:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10573:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 759,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10573:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10573:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 763,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "10585:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "10589:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 765,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "10594:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 757,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "10549:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10549:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "EmitStatement",
												"src": "10544:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 769,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "10633:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10651:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10643:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 770,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10643:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10643:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "10655:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 775,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "10659:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 776,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "10664:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 777,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "10673:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 768,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "10613:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10613:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "10613:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 781,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "10725:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10735:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 782,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10735:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10735:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 786,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "10747:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 787,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "10751:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 788,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "10756:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 789,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "10765:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 780,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "10689:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10689:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "10689:81:0"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "9647:334:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "9995:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10023:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "10015:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "10052:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "10035:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 686,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10035:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 687,
													"nodeType": "ArrayTypeName",
													"src": "10035:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "10082:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "10065:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 689,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10065:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 690,
													"nodeType": "ArrayTypeName",
													"src": "10065:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10112:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "10099:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 692,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10099:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10005:117:0"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10140:0:0"
									},
									"scope": 1248,
									"src": "9986:791:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "11121:682:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 804,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "11139:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11155:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11147:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 805,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11147:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11147:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11139:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11159:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11131:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11131:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "11131:66:0"
											},
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11216:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 897,
														"src": "11208:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 813,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11208:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 817,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 815,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "11227:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11227:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11208:31:0"
											},
											{
												"assignments": [
													822
												],
												"declarations": [
													{
														"constant": false,
														"id": 822,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "11266:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 897,
														"src": "11249:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 820,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11249:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 821,
															"nodeType": "ArrayTypeName",
															"src": "11249:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 826,
												"initialValue": {
													"arguments": [
														{
															"id": 824,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "11290:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 823,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "11272:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11272:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11249:44:0"
											},
											{
												"assignments": [
													831
												],
												"declarations": [
													{
														"constant": false,
														"id": 831,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "11320:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 897,
														"src": "11303:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 829,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11303:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 830,
															"nodeType": "ArrayTypeName",
															"src": "11303:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 835,
												"initialValue": {
													"arguments": [
														{
															"id": 833,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "11348:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 832,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "11330:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11303:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 837,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "11387:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 838,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "11397:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11411:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11403:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 839,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11403:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11403:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 843,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "11415:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 844,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "11420:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11429:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 836,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "11366:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11366:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "11366:66:0"
											},
											{
												"assignments": [
													849
												],
												"declarations": [
													{
														"constant": false,
														"id": 849,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "11451:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 897,
														"src": "11443:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 848,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11443:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 855,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 850,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "11465:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 852,
														"indexExpression": {
															"id": 851,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "11475:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11465:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 854,
													"indexExpression": {
														"id": 853,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "11479:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11465:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11443:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 857,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "11502:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 858,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "11517:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11502:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11525:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 856,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11494:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11494:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "11494:70:0"
											},
											{
												"id": 873,
												"nodeType": "UncheckedBlock",
												"src": "11574:77:0",
												"statements": [
													{
														"expression": {
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 863,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 26,
																		"src": "11598:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 866,
																	"indexExpression": {
																		"id": 864,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "11608:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11598:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 867,
																"indexExpression": {
																	"id": 865,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "11612:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11598:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 868,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 849,
																	"src": "11620:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 869,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "11634:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11620:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11598:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 872,
														"nodeType": "ExpressionStatement",
														"src": "11598:42:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 875,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "11681:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "11691:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11705:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11697:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 877,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11697:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11697:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 881,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "11709:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 882,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "11713:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 874,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "11666:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11666:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 884,
												"nodeType": "EmitStatement",
												"src": "11661:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 886,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "11751:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 887,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "11761:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11775:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11767:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 888,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11767:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11767:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 892,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "11779:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 893,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "11784:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11793:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 885,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "11731:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11731:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "11731:65:0"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "10783:229:0",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11026:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11049:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "11041:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "11071:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "11063:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11091:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "11083:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11031:72:0"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11121:0:0"
									},
									"scope": 1248,
									"src": "11017:786:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "12126:814:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 911,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "12144:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12160:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12152:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 912,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12152:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12152:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12144:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12164:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 910,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12136:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12136:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "12136:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 921,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "12220:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12220:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 923,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "12234:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12234:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12220:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12250:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 920,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12212:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12212:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "12212:81:0"
											},
											{
												"assignments": [
													930
												],
												"declarations": [
													{
														"constant": false,
														"id": 930,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "12312:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1020,
														"src": "12304:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 929,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12304:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 933,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 931,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "12323:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12323:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12304:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 935,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "12367:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "12377:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12391:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12383:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 937,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12383:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12383:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "12395:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 942,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "12400:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12409:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 934,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "12346:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12346:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "12346:66:0"
											},
											{
												"body": {
													"id": 995,
													"nodeType": "Block",
													"src": "12464:323:0",
													"statements": [
														{
															"assignments": [
																958
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 958,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "12486:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 995,
																	"src": "12478:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 957,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12478:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 962,
															"initialValue": {
																"baseExpression": {
																	"id": 959,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "12491:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 961,
																"indexExpression": {
																	"id": 960,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "12495:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12491:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12478:19:0"
														},
														{
															"assignments": [
																964
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 964,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "12519:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 995,
																	"src": "12511:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 963,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12511:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 968,
															"initialValue": {
																"baseExpression": {
																	"id": 965,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "12528:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 967,
																"indexExpression": {
																	"id": 966,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "12536:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12528:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12511:27:0"
														},
														{
															"assignments": [
																970
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 970,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "12561:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 995,
																	"src": "12553:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 969,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12553:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 976,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 971,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 26,
																		"src": "12575:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 973,
																	"indexExpression": {
																		"id": 972,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "12585:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12575:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 975,
																"indexExpression": {
																	"id": 974,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "12589:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12575:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12553:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 978,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 970,
																			"src": "12616:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 979,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 964,
																			"src": "12631:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12616:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12639:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 977,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12608:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12608:70:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 983,
															"nodeType": "ExpressionStatement",
															"src": "12608:70:0"
														},
														{
															"id": 994,
															"nodeType": "UncheckedBlock",
															"src": "12692:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 984,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 26,
																					"src": "12720:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 987,
																				"indexExpression": {
																					"id": 985,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 958,
																					"src": "12730:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12720:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 988,
																			"indexExpression": {
																				"id": 986,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 901,
																				"src": "12734:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "12720:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 989,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 970,
																				"src": "12742:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 990,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "12756:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12742:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12720:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 993,
																	"nodeType": "ExpressionStatement",
																	"src": "12720:42:0"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 950,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "12443:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 951,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "12447:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12447:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12443:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 996,
												"initializationExpression": {
													"assignments": [
														947
													],
													"declarations": [
														{
															"constant": false,
															"id": 947,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12436:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 996,
															"src": "12428:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 946,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12428:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 949,
													"initialValue": {
														"hexValue": "30",
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12440:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12428:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12459:3:0",
														"subExpression": {
															"id": 954,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "12459:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 956,
													"nodeType": "ExpressionStatement",
													"src": "12459:3:0"
												},
												"nodeType": "ForStatement",
												"src": "12423:364:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 998,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "12816:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 999,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "12826:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12840:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12832:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1000,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12832:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12832:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "12844:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1005,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "12849:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 997,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "12802:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12802:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "EmitStatement",
												"src": "12797:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1009,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "12888:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1010,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "12898:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12912:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12904:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1011,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12904:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12904:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1015,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "12916:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1016,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "12921:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12930:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1008,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "12868:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12868:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "12868:65:0"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "11809:183:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12006:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12034:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "12026:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12026:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12065:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "12048:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 902,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12048:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 903,
													"nodeType": "ArrayTypeName",
													"src": "12048:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "12095:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "12078:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 905,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12078:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 906,
													"nodeType": "ArrayTypeName",
													"src": "12078:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12016:92:0"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12126:0:0"
									},
									"scope": 1248,
									"src": "11997:943:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "13198:200:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1032,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "13216:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1033,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "13225:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13216:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13235:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1031,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13208:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13208:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "13208:71:0"
											},
											{
												"expression": {
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1038,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "13289:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1041,
															"indexExpression": {
																"id": 1039,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "13308:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13289:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1042,
														"indexExpression": {
															"id": 1040,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "13315:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13289:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1043,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "13327:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13289:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "13289:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1047,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "13365:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1048,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "13372:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1049,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "13382:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1046,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "13350:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13350:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "EmitStatement",
												"src": "13345:46:0"
											}
										]
									},
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "12946:124:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13084:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13120:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "13112:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13112:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13143:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "13135:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13135:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13166:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "13161:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1027,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13161:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13102:78:0"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13198:0:0"
									},
									"scope": 1248,
									"src": "13075:323:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "14544:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "13404:923:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "14341:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14379:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "14371:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14371:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14405:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "14397:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14397:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14427:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "14419:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14419:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14456:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "14439:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1061,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14439:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1062,
													"nodeType": "ArrayTypeName",
													"src": "14439:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14486:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "14469:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1064,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14469:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1065,
													"nodeType": "ArrayTypeName",
													"src": "14469:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14516:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "14503:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1067,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14503:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14361:165:0"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14544:0:0"
									},
									"scope": 1248,
									"src": "14332:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "15690:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "14552:922:0",
										"text": " @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "15488:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15525:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "15517:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15551:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "15543:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15573:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "15565:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15565:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15602:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "15585:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1080,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15585:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1081,
													"nodeType": "ArrayTypeName",
													"src": "15585:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "15632:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "15615:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1083,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15615:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1084,
													"nodeType": "ArrayTypeName",
													"src": "15615:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15662:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "15649:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1086,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15649:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15507:165:0"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15690:0:0"
									},
									"scope": 1248,
									"src": "15479:213:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "15891:532:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1106,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "15905:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1444,
														"src": "15905:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15905:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1152,
												"nodeType": "IfStatement",
												"src": "15901:516:0",
												"trueBody": {
													"id": 1151,
													"nodeType": "Block",
													"src": "15922:495:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1133,
																		"nodeType": "Block",
																		"src": "16039:184:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1126,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1122,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1120,
																						"src": "16061:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1123,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1411,
																								"src": "16073:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1411_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1124,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1392,
																							"src": "16073:34:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1125,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "16073:43:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16061:55:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1132,
																				"nodeType": "IfStatement",
																				"src": "16057:152:0",
																				"trueBody": {
																					"id": 1131,
																					"nodeType": "Block",
																					"src": "16118:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1128,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16147:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1127,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "16140:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1129,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16140:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1130,
																							"nodeType": "ExpressionStatement",
																							"src": "16140:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1134,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1121,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1120,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "16029:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1134,
																				"src": "16022:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1119,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16022:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16021:17:0"
																	},
																	"src": "16013:210:0"
																},
																{
																	"block": {
																		"id": 1142,
																		"nodeType": "Block",
																		"src": "16258:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1139,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1136,
																							"src": "16283:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1138,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16276:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1140,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16276:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1141,
																				"nodeType": "ExpressionStatement",
																				"src": "16276:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1143,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1137,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1136,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16250:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1143,
																				"src": "16236:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1135,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "16236:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16235:22:0"
																	},
																	"src": "16224:81:0"
																},
																{
																	"block": {
																		"id": 1148,
																		"nodeType": "Block",
																		"src": "16312:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1145,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16337:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1144,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16330:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1146,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16330:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1147,
																				"nodeType": "ExpressionStatement",
																				"src": "16330:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1149,
																	"nodeType": "TryCatchClause",
																	"src": "16306:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1113,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1093,
																		"src": "15979:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1114,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1095,
																		"src": "15989:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1115,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1099,
																		"src": "15995:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1116,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "15999:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1117,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "16007:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1110,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1097,
																				"src": "15957:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1109,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1411,
																			"src": "15940:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1411_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15940:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1411",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1392,
																	"src": "15940:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15940:72:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1150,
															"nodeType": "TryStatement",
															"src": "15936:471:0"
														}
													]
												}
											}
										]
									},
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "15707:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15755:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "15747:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15781:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "15773:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15803:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "15795:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "15823:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "15815:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15815:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15843:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "15835:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15835:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15872:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "15859:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1102,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15859:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15737:145:0"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15891:0:0"
									},
									"scope": 1248,
									"src": "15698:725:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "16647:574:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1171,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "16661:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1444,
														"src": "16661:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16661:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1217,
												"nodeType": "IfStatement",
												"src": "16657:558:0",
												"trueBody": {
													"id": 1216,
													"nodeType": "Block",
													"src": "16678:537:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1198,
																		"nodeType": "Block",
																		"src": "16832:189:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1191,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1187,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1185,
																						"src": "16854:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1188,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1411,
																								"src": "16866:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1411_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1189,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1410,
																							"src": "16866:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1190,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "16866:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16854:60:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1197,
																				"nodeType": "IfStatement",
																				"src": "16850:157:0",
																				"trueBody": {
																					"id": 1196,
																					"nodeType": "Block",
																					"src": "16916:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1193,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16945:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1192,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "16938:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1194,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16938:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1195,
																							"nodeType": "ExpressionStatement",
																							"src": "16938:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1199,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1186,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1185,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "16809:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1199,
																				"src": "16802:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1184,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16802:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16784:47:0"
																	},
																	"src": "16776:245:0"
																},
																{
																	"block": {
																		"id": 1207,
																		"nodeType": "Block",
																		"src": "17056:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1204,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1201,
																							"src": "17081:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1203,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17074:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1205,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17074:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1206,
																				"nodeType": "ExpressionStatement",
																				"src": "17074:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1208,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1202,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1201,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17048:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1208,
																				"src": "17034:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1200,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "17034:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17033:22:0"
																	},
																	"src": "17022:81:0"
																},
																{
																	"block": {
																		"id": 1213,
																		"nodeType": "Block",
																		"src": "17110:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1210,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17135:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1209,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17128:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1211,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17128:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1212,
																				"nodeType": "ExpressionStatement",
																				"src": "17128:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1214,
																	"nodeType": "TryCatchClause",
																	"src": "17104:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1178,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "16740:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1179,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "16750:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1180,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1163,
																		"src": "16756:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1181,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1166,
																		"src": "16761:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1182,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1168,
																		"src": "16770:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1175,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "16713:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1174,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1411,
																			"src": "16696:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1411_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16696:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1411",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1410,
																	"src": "16696:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16696:79:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1215,
															"nodeType": "TryStatement",
															"src": "16692:513:0"
														}
													]
												}
											}
										]
									},
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "16438:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16491:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "16483:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16517:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "16509:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16539:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "16531:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16531:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "16568:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "16551:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1161,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16551:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1162,
													"nodeType": "ArrayTypeName",
													"src": "16551:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "16598:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "16581:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1164,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16581:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1165,
													"nodeType": "ArrayTypeName",
													"src": "16581:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16628:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "16615:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16615:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16473:165:0"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16647:0:0"
									},
									"scope": 1248,
									"src": "16429:792:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "17311:109:0",
										"statements": [
											{
												"assignments": [
													1231
												],
												"declarations": [
													{
														"constant": false,
														"id": 1231,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "17338:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1246,
														"src": "17321:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1229,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17321:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1230,
															"nodeType": "ArrayTypeName",
															"src": "17321:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1237,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17360:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17346:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1232,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17350:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1233,
															"nodeType": "ArrayTypeName",
															"src": "17350:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17346:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17321:41:0"
											},
											{
												"expression": {
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1238,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "17372:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1240,
														"indexExpression": {
															"hexValue": "30",
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17378:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17372:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1241,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "17383:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17372:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "17372:18:0"
											},
											{
												"expression": {
													"id": 1244,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1231,
													"src": "17408:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1226,
												"id": 1245,
												"nodeType": "Return",
												"src": "17401:12:0"
											}
										]
									},
									"id": 1247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "17236:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "17262:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "17254:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17253:17:0"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "17293:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1223,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17293:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1224,
													"nodeType": "ArrayTypeName",
													"src": "17293:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17292:18:0"
									},
									"scope": 1248,
									"src": "17227:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1249,
							"src": "604:16818:0",
							"usedErrors": []
						}
					],
					"src": "109:17314:0"
				},
				"id": 0
			},
			"contracts/OZ_contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1370
						],
						"IERC165": [
							1982
						]
					},
					"id": 1371,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1250,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:1"
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1251,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1371,
							"sourceUnit": 1983,
							"src": "120:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1253,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1982,
										"src": "357:7:1"
									},
									"id": 1254,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1252,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:1",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1370,
							"linearizedBaseContracts": [
								1370,
								1982
							],
							"name": "IERC1155",
							"nameLocation": "345:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:1",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1267,
									"name": "TransferSingle",
									"nameLocation": "503:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "518:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "544:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "566:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "586:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "598:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:1"
									},
									"src": "497:116:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:1",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 1282,
									"name": "TransferBatch",
									"nameLocation": "774:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "797:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "831:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "861:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "889:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1275,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1276,
													"nodeType": "ArrayTypeName",
													"src": "889:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "912:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1278,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1279,
													"nodeType": "ArrayTypeName",
													"src": "912:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:1"
									},
									"src": "768:167:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:1",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 1291,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "1114:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "1139:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "1165:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1288,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:1"
									},
									"src": "1093:87:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1292,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:1",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 1298,
									"name": "URI",
									"nameLocation": "1540:3:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1544:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1558:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:1"
									},
									"src": "1534:44:1"
								},
								{
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:1",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "1781:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "1798:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:1"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "1833:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:1"
									},
									"scope": 1370,
									"src": "1762:80:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "2065:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1310,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1311,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "2094:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1313,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1314,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:1"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "2165:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1317,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1318,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:1"
									},
									"scope": 1370,
									"src": "2041:142:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1322,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:1",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "2469:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "2487:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1325,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:1"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:1"
									},
									"scope": 1370,
									"src": "2442:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:1",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "2683:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "2700:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:1"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "2741:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:1"
									},
									"scope": 1370,
									"src": "2657:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:1",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "3352:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "3374:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "3394:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "3414:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "3438:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1349,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:1"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:1"
									},
									"scope": 1370,
									"src": "3317:156:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "3914:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "3936:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "3956:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1359,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1360,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "3988:26:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1362,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1363,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "4024:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1365,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:1"
									},
									"returnParameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:1"
									},
									"scope": 1370,
									"src": "3874:185:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1371,
							"src": "335:3726:1",
							"usedErrors": []
						}
					],
					"src": "95:3967:1"
				},
				"id": 1
			},
			"contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1411
						],
						"IERC165": [
							1982
						]
					},
					"id": 1412,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1372,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:2"
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1373,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1412,
							"sourceUnit": 1983,
							"src": "143:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1375,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1982,
										"src": "262:7:2"
									},
									"id": 1376,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1374,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:2",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1411,
							"linearizedBaseContracts": [
								1411,
								1982
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1377,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:2",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "1143:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "1169:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "1191:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "1211:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "1234:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1386,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:2"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "1278:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1389,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:2"
									},
									"scope": 1411,
									"src": "1107:179:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1393,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:2",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1410,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "2332:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "2358:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "2380:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1398,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1399,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "2412:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1401,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1402,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "2447:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1404,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:2"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "2491:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1407,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:2"
									},
									"scope": 1411,
									"src": "2291:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1412,
							"src": "232:2269:2",
							"usedErrors": []
						}
					],
					"src": "118:2384:2"
				},
				"id": 2
			},
			"contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1370
						],
						"IERC1155MetadataURI": [
							1426
						],
						"IERC165": [
							1982
						]
					},
					"id": 1427,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1413,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:3"
						},
						{
							"absolutePath": "contracts/OZ_contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1414,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1427,
							"sourceUnit": 1371,
							"src": "142:25:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1416,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1370,
										"src": "397:8:3"
									},
									"id": 1417,
									"nodeType": "InheritanceSpecifier",
									"src": "397:8:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1415,
								"nodeType": "StructuredDocumentation",
								"src": "169:194:3",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1426,
							"linearizedBaseContracts": [
								1426,
								1370,
								1982
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "374:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "412:192:3",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1425,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "618:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "630:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "622:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:12:3"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "657:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1422,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:15:3"
									},
									"scope": 1426,
									"src": "609:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1427,
							"src": "364:310:3",
							"usedErrors": []
						}
					],
					"src": "117:558:3"
				},
				"id": 3
			},
			"contracts/OZ_contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1721
						]
					},
					"id": 1722,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1428,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1429,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1721,
							"linearizedBaseContracts": [
								1721
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1443,
										"nodeType": "Block",
										"src": "1241:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1437,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1432,
																"src": "1465:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1436,
												"id": 1442,
												"nodeType": "Return",
												"src": "1458:30:4"
											}
										]
									},
									"documentation": {
										"id": 1430,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "1195:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:4"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "1235:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:4"
									},
									"scope": 1721,
									"src": "1175:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "2483:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1455,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1721",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1721",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1453,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1458,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1449,
																"src": "2526:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:4"
											},
											{
												"assignments": [
													1464,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1464,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1477,
														"src": "2578:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1463,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1471,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1465,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "2596:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1467,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1449,
																"src": "2618:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1473,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "2647:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1476,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:4"
											}
										]
									},
									"documentation": {
										"id": 1445,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "2431:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "2458:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:4"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:4"
									},
									"scope": 1721,
									"src": "2412:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1494,
										"nodeType": "Block",
										"src": "3555:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1489,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "3585:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1490,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "3593:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1488,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1495,
															1515
														],
														"referencedDeclaration": 1515,
														"src": "3572:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1487,
												"id": 1493,
												"nodeType": "Return",
												"src": "3565:67:4"
											}
										]
									},
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "3488:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "3504:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1482,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:4"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "3541:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1485,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:4"
									},
									"scope": 1721,
									"src": "3466:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "4008:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1508,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "4047:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1509,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1500,
															"src": "4055:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1511,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "4064:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1507,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1535,
															1585
														],
														"referencedDeclaration": 1585,
														"src": "4025:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1506,
												"id": 1513,
												"nodeType": "Return",
												"src": "4018:59:4"
											}
										]
									},
									"documentation": {
										"id": 1496,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "3892:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "3916:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1499,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "3943:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1501,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:4"
									},
									"returnParameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "3994:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:4"
									},
									"scope": 1721,
									"src": "3861:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "4589:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1528,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "4628:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1529,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "4636:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1530,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "4642:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1527,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1535,
															1585
														],
														"referencedDeclaration": 1585,
														"src": "4606:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1526,
												"id": 1533,
												"nodeType": "Return",
												"src": "4599:94:4"
											}
										]
									},
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "4486:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "4510:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1519,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "4537:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:4"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "4575:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:4"
									},
									"scope": 1721,
									"src": "4446:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1584,
										"nodeType": "Block",
										"src": "5127:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1552,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1721",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1721",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1550,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1555,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1542,
																"src": "5170:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1549,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1559,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1562,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1538,
																	"src": "5247:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1561,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1444,
																"src": "5236:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1560,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1566,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:4"
											},
											{
												"assignments": [
													1568,
													1570
												],
												"declarations": [
													{
														"constant": false,
														"id": 1568,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1584,
														"src": "5300:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1567,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1570,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1584,
														"src": "5314:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1569,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1577,
												"initialValue": {
													"arguments": [
														{
															"id": 1575,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "5367:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1571,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "5341:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1573,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1542,
																"src": "5360:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1579,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "5406:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1580,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "5415:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1581,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "5427:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1578,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "5389:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1548,
												"id": 1583,
												"nodeType": "Return",
												"src": "5382:58:4"
											}
										]
									},
									"documentation": {
										"id": 1536,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "4988:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "5012:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1539,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "5039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "5062:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1543,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:4"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "5113:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1546,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:4"
									},
									"scope": 1721,
									"src": "4948:499:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "5724:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1596,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "5760:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1597,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "5768:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1595,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1602,
															1637
														],
														"referencedDeclaration": 1637,
														"src": "5741:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1594,
												"id": 1600,
												"nodeType": "Return",
												"src": "5734:80:4"
											}
										]
									},
									"documentation": {
										"id": 1586,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "5652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "5668:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:4"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "5710:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1592,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:4"
									},
									"scope": 1721,
									"src": "5624:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "6163:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1616,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1605,
																	"src": "6192:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1615,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1444,
																"src": "6181:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1614,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1620,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:4"
											},
											{
												"assignments": [
													1622,
													1624
												],
												"declarations": [
													{
														"constant": false,
														"id": 1622,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1636,
														"src": "6252:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1621,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1624,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1636,
														"src": "6266:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1623,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1629,
												"initialValue": {
													"arguments": [
														{
															"id": 1627,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1607,
															"src": "6311:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1625,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "6293:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1631,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "6350:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1632,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "6359:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1633,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "6371:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1630,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "6333:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1613,
												"id": 1635,
												"nodeType": "Return",
												"src": "6326:58:4"
											}
										]
									},
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "6042:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "6066:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1606,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "6093:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1608,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:4"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "6149:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1611,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:4"
									},
									"scope": 1721,
									"src": "6005:386:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "6667:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1648,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "6705:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1649,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "6713:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1647,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1654,
															1689
														],
														"referencedDeclaration": 1689,
														"src": "6684:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1646,
												"id": 1652,
												"nodeType": "Return",
												"src": "6677:84:4"
											}
										]
									},
									"documentation": {
										"id": 1638,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "6600:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "6616:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1641,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:4"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "6653:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1644,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:4"
									},
									"scope": 1721,
									"src": "6570:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1688,
										"nodeType": "Block",
										"src": "7109:232:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1668,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1657,
																	"src": "7138:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1667,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1444,
																"src": "7127:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1666,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1672,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:4"
											},
											{
												"assignments": [
													1674,
													1676
												],
												"declarations": [
													{
														"constant": false,
														"id": 1674,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1688,
														"src": "7200:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1673,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1676,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1688,
														"src": "7214:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1675,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1681,
												"initialValue": {
													"arguments": [
														{
															"id": 1679,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "7261:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1677,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "7241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1683,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1674,
															"src": "7300:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1684,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "7309:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1685,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "7321:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1682,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "7283:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1665,
												"id": 1687,
												"nodeType": "Return",
												"src": "7276:58:4"
											}
										]
									},
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "6993:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "7017:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1658,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "7044:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1660,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:4"
									},
									"returnParameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "7095:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1663,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:4"
									},
									"scope": 1721,
									"src": "6954:387:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1719,
										"nodeType": "Block",
										"src": "7721:532:4",
										"statements": [
											{
												"condition": {
													"id": 1701,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1692,
													"src": "7735:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1717,
													"nodeType": "Block",
													"src": "7792:455:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1705,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1694,
																		"src": "7876:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1715,
																"nodeType": "Block",
																"src": "8184:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1712,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1696,
																					"src": "8209:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1711,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1714,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:4"
																	}
																]
															},
															"id": 1716,
															"nodeType": "IfStatement",
															"src": "7872:365:4",
															"trueBody": {
																"id": 1710,
																"nodeType": "Block",
																"src": "7899:279:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:4"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1694,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1694,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 1709,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 1718,
												"nodeType": "IfStatement",
												"src": "7731:516:4",
												"trueBody": {
													"id": 1704,
													"nodeType": "Block",
													"src": "7744:42:4",
													"statements": [
														{
															"expression": {
																"id": 1702,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1694,
																"src": "7765:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1700,
															"id": 1703,
															"nodeType": "Return",
															"src": "7758:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1690,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "7596:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1691,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "7618:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1693,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "7651:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1695,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:4"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "7707:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1698,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:4"
									},
									"scope": 1721,
									"src": "7561:692:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1722,
							"src": "194:8061:4",
							"usedErrors": []
						}
					],
					"src": "101:8155:4"
				},
				"id": 4
			},
			"contracts/OZ_contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1743
						]
					},
					"id": 1744,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1723,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1724,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1743,
							"linearizedBaseContracts": [
								1743
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1729,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1728,
												"id": 1731,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 1743,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1738,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1737,
												"id": 1740,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1735,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 1743,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1744,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"contracts/OZ_contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							1946
						]
					},
					"id": 1947,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1745,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1746,
								"nodeType": "StructuredDocumentation",
								"src": "111:34:6",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1946,
							"linearizedBaseContracts": [
								1946
							],
							"name": "Strings",
							"nameLocation": "154:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1749,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "193:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1946,
									"src": "168:58:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1747,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1748,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1827,
										"nodeType": "Block",
										"src": "399:632:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1757,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "601:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1758,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "601:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1763,
												"nodeType": "IfStatement",
												"src": "597:51:6",
												"trueBody": {
													"id": 1762,
													"nodeType": "Block",
													"src": "613:35:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1756,
															"id": 1761,
															"nodeType": "Return",
															"src": "627:10:6"
														}
													]
												}
											},
											{
												"assignments": [
													1765
												],
												"declarations": [
													{
														"constant": false,
														"id": 1765,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "665:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1827,
														"src": "657:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1764,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "657:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1767,
												"initialValue": {
													"id": 1766,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1752,
													"src": "672:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "657:20:6"
											},
											{
												"assignments": [
													1769
												],
												"declarations": [
													{
														"constant": false,
														"id": 1769,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "695:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1827,
														"src": "687:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1768,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1770,
												"nodeType": "VariableDeclarationStatement",
												"src": "687:14:6"
											},
											{
												"body": {
													"id": 1781,
													"nodeType": "Block",
													"src": "729:57:6",
													"statements": [
														{
															"expression": {
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "743:8:6",
																"subExpression": {
																	"id": 1774,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1769,
																	"src": "743:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1776,
															"nodeType": "ExpressionStatement",
															"src": "743:8:6"
														},
														{
															"expression": {
																"id": 1779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1777,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1765,
																	"src": "765:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "773:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "765:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1780,
															"nodeType": "ExpressionStatement",
															"src": "765:10:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1771,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1765,
														"src": "718:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "718:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1782,
												"nodeType": "WhileStatement",
												"src": "711:75:6"
											},
											{
												"assignments": [
													1784
												],
												"declarations": [
													{
														"constant": false,
														"id": 1784,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "808:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1827,
														"src": "795:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1783,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "795:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1789,
												"initialValue": {
													"arguments": [
														{
															"id": 1787,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1769,
															"src": "827:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "817:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1785,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "821:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:39:6"
											},
											{
												"body": {
													"id": 1820,
													"nodeType": "Block",
													"src": "863:131:6",
													"statements": [
														{
															"expression": {
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1793,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1769,
																	"src": "877:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "877:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1796,
															"nodeType": "ExpressionStatement",
															"src": "877:11:6"
														},
														{
															"expression": {
																"id": 1814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1797,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1784,
																		"src": "902:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1799,
																	"indexExpression": {
																		"id": 1798,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1769,
																		"src": "909:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "902:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1811,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 1804,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "932:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1809,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1807,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1752,
																									"src": "945:5:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 1808,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "953:2:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "945:10:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1806,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "937:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1805,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "937:7:6",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1810,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "937:19:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "932:24:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1803,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "926:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1802,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "926:5:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "926:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "919:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1800,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "919:6:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "919:39:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "902:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1815,
															"nodeType": "ExpressionStatement",
															"src": "902:56:6"
														},
														{
															"expression": {
																"id": 1818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1816,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1752,
																	"src": "972:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "972:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1819,
															"nodeType": "ExpressionStatement",
															"src": "972:11:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1790,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "851:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "851:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1821,
												"nodeType": "WhileStatement",
												"src": "844:150:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1824,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "1017:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1823,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1010:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1822,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1010:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1756,
												"id": 1826,
												"nodeType": "Return",
												"src": "1003:21:6"
											}
										]
									},
									"documentation": {
										"id": 1750,
										"nodeType": "StructuredDocumentation",
										"src": "233:90:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "337:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "354:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "346:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:6"
									},
									"returnParameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "384:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1754,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:6"
									},
									"scope": 1946,
									"src": "328:703:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1868,
										"nodeType": "Block",
										"src": "1210:255:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1836,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "1224:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1224:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1842,
												"nodeType": "IfStatement",
												"src": "1220:54:6",
												"trueBody": {
													"id": 1841,
													"nodeType": "Block",
													"src": "1236:38:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 1835,
															"id": 1840,
															"nodeType": "Return",
															"src": "1250:13:6"
														}
													]
												}
											},
											{
												"assignments": [
													1844
												],
												"declarations": [
													{
														"constant": false,
														"id": 1844,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1291:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1868,
														"src": "1283:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1843,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1283:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1846,
												"initialValue": {
													"id": 1845,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1831,
													"src": "1298:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:20:6"
											},
											{
												"assignments": [
													1848
												],
												"declarations": [
													{
														"constant": false,
														"id": 1848,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1321:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1868,
														"src": "1313:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1847,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1313:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1850,
												"initialValue": {
													"hexValue": "30",
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:18:6"
											},
											{
												"body": {
													"id": 1861,
													"nodeType": "Block",
													"src": "1359:57:6",
													"statements": [
														{
															"expression": {
																"id": 1855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1373:8:6",
																"subExpression": {
																	"id": 1854,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1848,
																	"src": "1373:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1856,
															"nodeType": "ExpressionStatement",
															"src": "1373:8:6"
														},
														{
															"expression": {
																"id": 1859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1857,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1844,
																	"src": "1395:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1395:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1860,
															"nodeType": "ExpressionStatement",
															"src": "1395:10:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1851,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1844,
														"src": "1348:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1852,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1348:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1862,
												"nodeType": "WhileStatement",
												"src": "1341:75:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1864,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "1444:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1865,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "1451:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1863,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1869,
															1945
														],
														"referencedDeclaration": 1945,
														"src": "1432:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1835,
												"id": 1867,
												"nodeType": "Return",
												"src": "1425:33:6"
											}
										]
									},
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "1037:94:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1145:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "1157:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:15:6"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "1195:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1833,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:6"
									},
									"scope": 1946,
									"src": "1136:329:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1944,
										"nodeType": "Block",
										"src": "1678:351:6",
										"statements": [
											{
												"assignments": [
													1880
												],
												"declarations": [
													{
														"constant": false,
														"id": 1880,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1701:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1944,
														"src": "1688:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1879,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1688:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1889,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1884,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1874,
																	"src": "1724:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1720:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1720:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1710:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1881,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1714:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:47:6"
											},
											{
												"expression": {
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1890,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "1745:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1892,
														"indexExpression": {
															"hexValue": "30",
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1745:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1895,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:6"
											},
											{
												"expression": {
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1896,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "1770:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1898,
														"indexExpression": {
															"hexValue": "31",
															"id": 1897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1770:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1899,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1770:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1901,
												"nodeType": "ExpressionStatement",
												"src": "1770:15:6"
											},
											{
												"body": {
													"id": 1930,
													"nodeType": "Block",
													"src": "1840:87:6",
													"statements": [
														{
															"expression": {
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1916,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1880,
																		"src": "1854:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1918,
																	"indexExpression": {
																		"id": 1917,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1903,
																		"src": "1861:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1854:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1919,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1749,
																		"src": "1866:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1923,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1920,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1872,
																			"src": "1879:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1887:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1879:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1866:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1854:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1925,
															"nodeType": "ExpressionStatement",
															"src": "1854:37:6"
														},
														{
															"expression": {
																"id": 1928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1926,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1872,
																	"src": "1905:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1905:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1929,
															"nodeType": "ExpressionStatement",
															"src": "1905:11:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1910,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1903,
														"src": "1828:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1828:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1931,
												"initializationExpression": {
													"assignments": [
														1903
													],
													"declarations": [
														{
															"constant": false,
															"id": 1903,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1808:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1931,
															"src": "1800:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1902,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1800:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1909,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1905,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1874,
																"src": "1816:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1812:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1825:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1812:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1800:26:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1835:3:6",
														"subExpression": {
															"id": 1913,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1903,
															"src": "1837:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1915,
													"nodeType": "ExpressionStatement",
													"src": "1835:3:6"
												},
												"nodeType": "ForStatement",
												"src": "1795:132:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1933,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1872,
																"src": "1944:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1953:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1944:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1932,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1938,
												"nodeType": "ExpressionStatement",
												"src": "1936:55:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1941,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "2015:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2008:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1939,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2008:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1878,
												"id": 1943,
												"nodeType": "Return",
												"src": "2001:21:6"
											}
										]
									},
									"documentation": {
										"id": 1870,
										"nodeType": "StructuredDocumentation",
										"src": "1471:112:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1597:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1617:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "1609:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1632:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "1624:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:31:6"
									},
									"returnParameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "1663:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1876,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:6"
									},
									"scope": 1946,
									"src": "1588:441:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1947,
							"src": "146:1885:6",
							"usedErrors": []
						}
					],
					"src": "86:1946:6"
				},
				"id": 6
			},
			"contracts/OZ_contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1970
						],
						"IERC165": [
							1982
						]
					},
					"id": 1971,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1948,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:7"
						},
						{
							"absolutePath": "contracts/OZ_contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1949,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1971,
							"sourceUnit": 1983,
							"src": "124:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1951,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1982,
										"src": "754:7:7"
									},
									"id": 1952,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1950,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1970,
							"linearizedBaseContracts": [
								1970,
								1982
							],
							"name": "ERC165",
							"nameLocation": "744:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1981
									],
									"body": {
										"id": 1968,
										"nodeType": "Block",
										"src": "920:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1961,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1955,
														"src": "937:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1963,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1982,
																	"src": "957:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1982_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1982_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1962,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1982",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1960,
												"id": 1967,
												"nodeType": "Return",
												"src": "930:47:7"
											}
										]
									},
									"documentation": {
										"id": 1953,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1957,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:7"
									},
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "856:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1954,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:7"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "914:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1958,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:7"
									},
									"scope": 1970,
									"src": "829:155:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1971,
							"src": "726:260:7",
							"usedErrors": []
						}
					],
					"src": "99:888:7"
				},
				"id": 7
			},
			"contracts/OZ_contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "contracts/OZ_contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1982
						]
					},
					"id": 1983,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1972,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1973,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1982,
							"linearizedBaseContracts": [
								1982
							],
							"name": "IERC165",
							"nameLocation": "415:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1974,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1981,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "801:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1975,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:8"
									},
									"returnParameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "844:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1978,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:8"
									},
									"scope": 1982,
									"src": "774:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1983,
							"src": "405:447:8",
							"usedErrors": []
						}
					],
					"src": "100:753:8"
				},
				"id": 8
			}
		}
	}
}